//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\balaz\AppData\Local\Temp\ju2oh3kv.rzt\CalculatorParser.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Languages.Calculator.Syntax.InternalSyntax {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CalculatorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface ICalculatorParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain([NotNull] CalculatorParser.MainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain([NotNull] CalculatorParser.MainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.statementLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementLine([NotNull] CalculatorParser.StatementLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.statementLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementLine([NotNull] CalculatorParser.StatementLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CalculatorParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CalculatorParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CalculatorParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CalculatorParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueExpression([NotNull] CalculatorParser.ValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueExpression([NotNull] CalculatorParser.ValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>printExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintExpression([NotNull] CalculatorParser.PrintExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>printExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintExpression([NotNull] CalculatorParser.PrintExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>mulOrDivExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulOrDivExpression([NotNull] CalculatorParser.MulOrDivExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mulOrDivExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulOrDivExpression([NotNull] CalculatorParser.MulOrDivExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExpression([NotNull] CalculatorParser.ParenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExpression([NotNull] CalculatorParser.ParenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addOrSubExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOrSubExpression([NotNull] CalculatorParser.AddOrSubExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addOrSubExpression</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOrSubExpression([NotNull] CalculatorParser.AddOrSubExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] CalculatorParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] CalculatorParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] CalculatorParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] CalculatorParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] CalculatorParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] CalculatorParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] CalculatorParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] CalculatorParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] CalculatorParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] CalculatorParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] CalculatorParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] CalculatorParser.ArgContext context);
}
} // namespace MetaDslx.Languages.Calculator.Syntax.InternalSyntax

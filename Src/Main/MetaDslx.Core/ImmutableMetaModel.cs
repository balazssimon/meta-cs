using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using MetaDslx.Core;
using System.Diagnostics;

namespace MetaDslx.Core.Immutable
{
    public static class MetaDescriptor
    {
    	private static global::System.Collections.Generic.List<global::MetaDslx.Core.Immutable.ModelProperty> properties = new global::System.Collections.Generic.List<global::MetaDslx.Core.Immutable.ModelProperty>();
    
        static MetaDescriptor()
        {
            properties.Add(MetaAnnotatedElement.AnnotationsProperty);
            properties.Add(MetaDocumentedElement.DocumentationProperty);
            properties.Add(MetaNamedElement.NameProperty);
            properties.Add(MetaTypedElement.TypeProperty);
            properties.Add(MetaAnnotation.PropertiesProperty);
            properties.Add(MetaAnnotationProperty.ValueProperty);
            properties.Add(MetaNamespace.ParentProperty);
            properties.Add(MetaNamespace.UsingsProperty);
            properties.Add(MetaNamespace.MetaModelProperty);
            properties.Add(MetaNamespace.NamespacesProperty);
            properties.Add(MetaNamespace.DeclarationsProperty);
            properties.Add(MetaDeclaration.NamespaceProperty);
            properties.Add(MetaDeclaration.ModelProperty);
            properties.Add(MetaModel.UriProperty);
            properties.Add(MetaModel.NamespaceProperty);
            properties.Add(MetaCollectionType.KindProperty);
            properties.Add(MetaCollectionType.InnerTypeProperty);
            properties.Add(MetaNullableType.InnerTypeProperty);
            properties.Add(MetaEnum.EnumLiteralsProperty);
            properties.Add(MetaEnum.OperationsProperty);
            properties.Add(MetaEnumLiteral.EnumProperty);
            properties.Add(MetaClass.IsAbstractProperty);
            properties.Add(MetaClass.SuperClassesProperty);
            properties.Add(MetaClass.PropertiesProperty);
            properties.Add(MetaClass.OperationsProperty);
            properties.Add(MetaClass.ConstructorProperty);
            properties.Add(MetaFunctionType.ParameterTypesProperty);
            properties.Add(MetaFunctionType.ReturnTypeProperty);
            properties.Add(MetaFunction.TypeProperty);
            properties.Add(MetaFunction.ParametersProperty);
            properties.Add(MetaFunction.ReturnTypeProperty);
            properties.Add(MetaOperation.ParentProperty);
            properties.Add(MetaConstant.ValueProperty);
            properties.Add(MetaConstructor.ParentProperty);
            properties.Add(MetaConstructor.InitializersProperty);
            properties.Add(MetaParameter.FunctionProperty);
            properties.Add(MetaProperty.KindProperty);
            properties.Add(MetaProperty.ClassProperty);
            properties.Add(MetaProperty.OppositePropertiesProperty);
            properties.Add(MetaProperty.SubsettedPropertiesProperty);
            properties.Add(MetaProperty.SubsettingPropertiesProperty);
            properties.Add(MetaProperty.RedefinedPropertiesProperty);
            properties.Add(MetaProperty.RedefiningPropertiesProperty);
            properties.Add(MetaPropertyInitializer.ConstructorProperty);
            properties.Add(MetaPropertyInitializer.PropertyNameProperty);
            properties.Add(MetaPropertyInitializer.PropertyContextProperty);
            properties.Add(MetaPropertyInitializer.PropertyProperty);
            properties.Add(MetaPropertyInitializer.ValueProperty);
            properties.Add(MetaInheritedPropertyInitializer.ObjectNameProperty);
            properties.Add(MetaInheritedPropertyInitializer.ObjectProperty);
            properties.Add(MetaExpression.NoTypeErrorProperty);
            properties.Add(MetaExpression.ExpectedTypeProperty);
            properties.Add(MetaBracketExpression.ExpressionProperty);
            properties.Add(MetaBoundExpression.UniqueDefinitionProperty);
            properties.Add(MetaBoundExpression.ArgumentsProperty);
            properties.Add(MetaBoundExpression.DefinitionsProperty);
            properties.Add(MetaBoundExpression.DefinitionProperty);
            properties.Add(MetaTypeConversionExpression.TypeReferenceProperty);
            properties.Add(MetaTypeConversionExpression.ExpressionProperty);
            properties.Add(MetaTypeCheckExpression.TypeReferenceProperty);
            properties.Add(MetaTypeCheckExpression.ExpressionProperty);
            properties.Add(MetaTypeOfExpression.TypeReferenceProperty);
            properties.Add(MetaConditionalExpression.ConditionProperty);
            properties.Add(MetaConditionalExpression.BalancedTypeProperty);
            properties.Add(MetaConditionalExpression.ThenProperty);
            properties.Add(MetaConditionalExpression.ElseProperty);
            properties.Add(MetaConstantExpression.ValueProperty);
            properties.Add(MetaIdentifierExpression.NameProperty);
            properties.Add(MetaMemberAccessExpression.ExpressionProperty);
            properties.Add(MetaMemberAccessExpression.NameProperty);
            properties.Add(MetaFunctionCallExpression.ExpressionProperty);
            properties.Add(MetaIndexerExpression.ExpressionProperty);
            properties.Add(MetaNewExpression.TypeReferenceProperty);
            properties.Add(MetaNewExpression.PropertyInitializersProperty);
            properties.Add(MetaNewPropertyInitializer.ParentProperty);
            properties.Add(MetaNewPropertyInitializer.PropertyNameProperty);
            properties.Add(MetaNewPropertyInitializer.ValueProperty);
            properties.Add(MetaNewPropertyInitializer.PropertyProperty);
            properties.Add(MetaNewCollectionExpression.TypeReferenceProperty);
            properties.Add(MetaNewCollectionExpression.ValuesProperty);
            properties.Add(MetaOperatorExpression.NameProperty);
            properties.Add(MetaUnaryExpression.ExpressionProperty);
            properties.Add(MetaBinaryExpression.LeftProperty);
            properties.Add(MetaBinaryExpression.RightProperty);
    
            foreach (var property in properties)
            {
                property.Init();
            }
        }
    
        public static void Init()
        {
        }
    
    	public const string Uri = "http://metadslx.core/1.0";
    
        
        public static class MetaAnnotatedElement
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotatedElement;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty AnnotationsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Annotations", typeof(MetaDescriptor.MetaAnnotatedElement),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaAnnotation), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation>), typeof(global::MetaDslx.Core.Immutable.MetaAnnotatedElement)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaAnnotationBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder)));
            
        }
        
        public static class MetaDocumentedElement
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDocumentedElement;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty DocumentationProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Documentation", typeof(MetaDescriptor.MetaDocumentedElement),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaDocumentedElement)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder)));
            
        }
        
        public static class MetaNamedElement
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNamedElement;*/ }
            }
        
            [Name]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Name", typeof(MetaDescriptor.MetaNamedElement),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaNamedElement)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaNamedElementBuilder)));
            
        }
        
        public static class MetaTypedElement
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypedElement;*/ }
            }
        
            [Type]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Type", typeof(MetaDescriptor.MetaTypedElement),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaTypedElement)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypedElementBuilder)));
            
        }
        
        public static class MetaType
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaType;*/ }
            }
        
        }
        
        public static class MetaAnnotation
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotation;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Properties", typeof(MetaDescriptor.MetaAnnotation),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaAnnotationProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationProperty>), typeof(global::MetaDslx.Core.Immutable.MetaAnnotation)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaAnnotationBuilder)));
            
        }
        
        public static class MetaAnnotationProperty
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotationProperty;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValueProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Value", typeof(MetaDescriptor.MetaAnnotationProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaAnnotationProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder)));
            
        }
        
        public static class MetaNamespace
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNamespace;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace), "Namespaces")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParentProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Parent", typeof(MetaDescriptor.MetaNamespace),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespace), null, typeof(global::MetaDslx.Core.Immutable.MetaNamespace)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)));
            
            [ImportedScope]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty UsingsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Usings", typeof(MetaDescriptor.MetaNamespace),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespace), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace>), typeof(global::MetaDslx.Core.Immutable.MetaNamespace)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)));
            
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel), "Namespace")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty MetaModelProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("MetaModel", typeof(MetaDescriptor.MetaNamespace),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaModel), null, typeof(global::MetaDslx.Core.Immutable.MetaNamespace)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaModelBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)));
            
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace), "Parent")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NamespacesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Namespaces", typeof(MetaDescriptor.MetaNamespace),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespace), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace>), typeof(global::MetaDslx.Core.Immutable.MetaNamespace)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)));
            
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration), "Namespace")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty DeclarationsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Declarations", typeof(MetaDescriptor.MetaNamespace),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaDeclaration), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaDeclaration>), typeof(global::MetaDslx.Core.Immutable.MetaNamespace)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaDeclarationBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaDeclarationBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)));
            
        }
        
        public static class MetaDeclaration
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDeclaration;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace), "Declarations")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NamespaceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Namespace", typeof(MetaDescriptor.MetaDeclaration),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespace), null, typeof(global::MetaDslx.Core.Immutable.MetaDeclaration)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaDeclarationBuilder)));
            
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ModelProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Model", typeof(MetaDescriptor.MetaDeclaration),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaModel), null, typeof(global::MetaDslx.Core.Immutable.MetaDeclaration)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaModelBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaDeclarationBuilder)));
            
        }
        
        public static class MetaModel
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModel;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty UriProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Uri", typeof(MetaDescriptor.MetaModel),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaModel)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaModelBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace), "MetaModel")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NamespaceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Namespace", typeof(MetaDescriptor.MetaModel),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespace), null, typeof(global::MetaDslx.Core.Immutable.MetaModel)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNamespaceBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaModelBuilder)));
            
        }
        
        public static class MetaCollectionType
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaCollectionType;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty KindProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Kind", typeof(MetaDescriptor.MetaCollectionType),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaCollectionKind), null, typeof(global::MetaDslx.Core.Immutable.MetaCollectionType)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaCollectionKind), null, typeof(global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty InnerTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("InnerType", typeof(MetaDescriptor.MetaCollectionType),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaCollectionType)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder)));
            
        }
        
        public static class MetaNullableType
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullableType;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty InnerTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("InnerType", typeof(MetaDescriptor.MetaNullableType),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaNullableType)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder)));
            
        }
        
        public static class MetaPrimitiveType
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPrimitiveType;*/ }
            }
        
        }
        
        public static class MetaEnum
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEnum;*/ }
            }
        
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral), "Enum")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty EnumLiteralsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("EnumLiterals", typeof(MetaDescriptor.MetaEnum),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaEnumLiteral), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteral>), typeof(global::MetaDslx.Core.Immutable.MetaEnum)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaEnumBuilder)));
            
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation), "Parent")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty OperationsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Operations", typeof(MetaDescriptor.MetaEnum),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaOperation), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation>), typeof(global::MetaDslx.Core.Immutable.MetaEnum)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaOperationBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaEnumBuilder)));
            
        }
        
        public static class MetaEnumLiteral
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEnumLiteral;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum), "EnumLiterals")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty EnumProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Enum", typeof(MetaDescriptor.MetaEnumLiteral),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaEnum), null, typeof(global::MetaDslx.Core.Immutable.MetaEnumLiteral)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaEnumBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder)));
            
        }
        
        public static class MetaClass
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass _MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaClass;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty IsAbstractProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("IsAbstract", typeof(MetaDescriptor.MetaClass),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaClass)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder)));
            
            [InheritedScope]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty SuperClassesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("SuperClasses", typeof(MetaDescriptor.MetaClass),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClass), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass>), typeof(global::MetaDslx.Core.Immutable.MetaClass)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaClassBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder)));
            
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "Class")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Properties", typeof(MetaDescriptor.MetaClass),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaClass)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder)));
            
            [ScopeEntry]
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation), "Parent")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty OperationsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Operations", typeof(MetaDescriptor.MetaClass),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaOperation), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation>), typeof(global::MetaDslx.Core.Immutable.MetaClass)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaOperationBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder)));
            
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor), "Parent")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ConstructorProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Constructor", typeof(MetaDescriptor.MetaClass),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaConstructor), null, typeof(global::MetaDslx.Core.Immutable.MetaClass)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaConstructorBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder)));
            
        }
        
        public static class MetaFunctionType
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunctionType;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParameterTypesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("ParameterTypes", typeof(MetaDescriptor.MetaFunctionType),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaType>), typeof(global::MetaDslx.Core.Immutable.MetaFunctionType)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaTypeBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ReturnTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("ReturnType", typeof(MetaDescriptor.MetaFunctionType),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionType)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder)));
            
        }
        
        public static class MetaFunction
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunction;*/ }
            }
        
            [Type]
            [ReadonlyAttribute]
            [RedefinesAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement), "Type")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Type", typeof(MetaDescriptor.MetaFunction),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaFunctionType), null, typeof(global::MetaDslx.Core.Immutable.MetaFunction)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionBuilder)));
            
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter), "Function")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParametersProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Parameters", typeof(MetaDescriptor.MetaFunction),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaParameter), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter>), typeof(global::MetaDslx.Core.Immutable.MetaFunction)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaParameterBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaFunctionBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ReturnTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("ReturnType", typeof(MetaDescriptor.MetaFunction),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaFunction)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionBuilder)));
            
        }
        
        public static class MetaGlobalFunction
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGlobalFunction;*/ }
            }
        
        }
        
        public static class MetaOperation
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOperation;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass), "Operations")]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum), "Operations")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParentProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Parent", typeof(MetaDescriptor.MetaOperation),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaOperation)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaOperationBuilder)));
            
        }
        
        public static class MetaConstant
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstant;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValueProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Value", typeof(MetaDescriptor.MetaConstant),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaConstant)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConstantBuilder)));
            
        }
        
        public static class MetaConstructor
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstructor;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass), "Constructor")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParentProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Parent", typeof(MetaDescriptor.MetaConstructor),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClass), null, typeof(global::MetaDslx.Core.Immutable.MetaConstructor)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConstructorBuilder)));
            
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer), "Constructor")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty InitializersProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Initializers", typeof(MetaDescriptor.MetaConstructor),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializer>), typeof(global::MetaDslx.Core.Immutable.MetaConstructor)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaConstructorBuilder)));
            
        }
        
        public static class MetaParameter
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaParameter;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction), "Parameters")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty FunctionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Function", typeof(MetaDescriptor.MetaParameter),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaFunction), null, typeof(global::MetaDslx.Core.Immutable.MetaParameter)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaFunctionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaParameterBuilder)));
            
        }
        
        public static class MetaProperty
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaProperty;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty KindProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Kind", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyKind), null, typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyKind), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass), "Properties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ClassProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Class", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClass), null, typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "OppositeProperties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty OppositePropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("OppositeProperties", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "SubsettingProperties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty SubsettedPropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("SubsettedProperties", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "SubsettedProperties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty SubsettingPropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("SubsettingProperties", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "RedefiningProperties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty RedefinedPropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("RedefinedProperties", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty), "RedefinedProperties")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty RedefiningPropertiesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("RedefiningProperties", typeof(MetaDescriptor.MetaProperty),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty>), typeof(global::MetaDslx.Core.Immutable.MetaProperty)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder)));
            
        }
        
        public static class MetaPropertyInitializer
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPropertyInitializer;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor), "Initializers")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ConstructorProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Constructor", typeof(MetaDescriptor.MetaPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaConstructor), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaConstructorBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyNameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("PropertyName", typeof(MetaDescriptor.MetaPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyContextProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("PropertyContext", typeof(MetaDescriptor.MetaPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClass), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Property", typeof(MetaDescriptor.MetaPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValueProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Value", typeof(MetaDescriptor.MetaPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)));
            
        }
        
        public static class MetaSynthetizedPropertyInitializer
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSynthetizedPropertyInitializer;*/ }
            }
        
        }
        
        public static class MetaInheritedPropertyInitializer
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaInheritedPropertyInitializer;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ObjectNameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("ObjectName", typeof(MetaDescriptor.MetaInheritedPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ObjectProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Object", typeof(MetaDescriptor.MetaInheritedPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), null, typeof(global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder)));
            
        }
        
        public static class MetaExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExpression;*/ }
            }
        
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NoTypeErrorProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("NoTypeError", typeof(MetaDescriptor.MetaExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder)));
            
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpectedTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("ExpectedType", typeof(MetaDescriptor.MetaExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder)));
            
        }
        
        public static class MetaBracketExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBracketExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaBracketExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaBracketExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder)));
            
        }
        
        public static class MetaBoundExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBoundExpression;*/ }
            }
        
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty UniqueDefinitionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("UniqueDefinition", typeof(MetaDescriptor.MetaBoundExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(bool), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ArgumentsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Arguments", typeof(MetaDescriptor.MetaBoundExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression>), typeof(global::MetaDslx.Core.Immutable.MetaBoundExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)));
            
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty DefinitionsProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Definitions", typeof(MetaDescriptor.MetaBoundExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.BindingInfo), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.BindingInfo), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)));
            
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty DefinitionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Definition", typeof(MetaDescriptor.MetaBoundExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.ISymbol), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.ISymbol), null, typeof(global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)));
            
        }
        
        public static class MetaThisExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaThisExpression;*/ }
            }
        
        }
        
        public static class MetaNullExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullExpression;*/ }
            }
        
        }
        
        public static class MetaTypeConversionExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeConversionExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeReferenceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("TypeReference", typeof(MetaDescriptor.MetaTypeConversionExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeConversionExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaTypeConversionExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeConversionExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder)));
            
        }
        
        public static class MetaTypeAsExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeAsExpression;*/ }
            }
        
        }
        
        public static class MetaTypeCastExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeCastExpression;*/ }
            }
        
        }
        
        public static class MetaTypeCheckExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeCheckExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeReferenceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("TypeReference", typeof(MetaDescriptor.MetaTypeCheckExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeCheckExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaTypeCheckExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeCheckExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder)));
            
        }
        
        public static class MetaTypeOfExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeOfExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeReferenceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("TypeReference", typeof(MetaDescriptor.MetaTypeOfExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeOfExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder)));
            
        }
        
        public static class MetaConditionalExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConditionalExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ConditionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Condition", typeof(MetaDescriptor.MetaConditionalExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty BalancedTypeProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("BalancedType", typeof(MetaDescriptor.MetaConditionalExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaType), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ThenProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Then", typeof(MetaDescriptor.MetaConditionalExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ElseProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Else", typeof(MetaDescriptor.MetaConditionalExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)));
            
        }
        
        public static class MetaConstantExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstantExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValueProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Value", typeof(MetaDescriptor.MetaConstantExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(object), null, typeof(global::MetaDslx.Core.Immutable.MetaConstantExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(object), null, typeof(global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder)));
            
        }
        
        public static class MetaIdentifierExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaIdentifierExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Name", typeof(MetaDescriptor.MetaIdentifierExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaIdentifierExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder)));
            
        }
        
        public static class MetaMemberAccessExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMemberAccessExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaMemberAccessExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaMemberAccessExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Name", typeof(MetaDescriptor.MetaMemberAccessExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaMemberAccessExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder)));
            
        }
        
        public static class MetaFunctionCallExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunctionCallExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaFunctionCallExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionCallExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder)));
            
        }
        
        public static class MetaIndexerExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaIndexerExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaIndexerExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaIndexerExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder)));
            
        }
        
        public static class MetaNewExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeReferenceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("TypeReference", typeof(MetaDescriptor.MetaNewExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClass), null, typeof(global::MetaDslx.Core.Immutable.MetaNewExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaClassBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder)));
            
            [ContainmentAttribute]
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer), "Parent")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyInitializersProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("PropertyInitializers", typeof(MetaDescriptor.MetaNewExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer>), typeof(global::MetaDslx.Core.Immutable.MetaNewExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder)));
            
        }
        
        public static class MetaNewPropertyInitializer
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewPropertyInitializer;*/ }
            }
        
            [OppositeAttribute(typeof(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression), "PropertyInitializers")]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ParentProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Parent", typeof(MetaDescriptor.MetaNewPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNewExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyNameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("PropertyName", typeof(MetaDescriptor.MetaNewPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValueProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Value", typeof(MetaDescriptor.MetaNewPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)));
            
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty PropertyProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Property", typeof(MetaDescriptor.MetaNewPropertyInitializer),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaProperty), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaPropertyBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)));
            
        }
        
        public static class MetaNewCollectionExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewCollectionExpression;*/ }
            }
        
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty TypeReferenceProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("TypeReference", typeof(MetaDescriptor.MetaNewCollectionExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaCollectionType), null, typeof(global::MetaDslx.Core.Immutable.MetaNewCollectionExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ValuesProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Values", typeof(MetaDescriptor.MetaNewCollectionExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), typeof(global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression>), typeof(global::MetaDslx.Core.Immutable.MetaNewCollectionExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), typeof(global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>), typeof(global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder)));
            
        }
        
        public static class MetaOperatorExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOperatorExpression;*/ }
            }
        
            [ReadonlyAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty NameProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Name", typeof(MetaDescriptor.MetaOperatorExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaOperatorExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(string), null, typeof(global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder)));
            
        }
        
        public static class MetaUnaryExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty ExpressionProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Expression", typeof(MetaDescriptor.MetaUnaryExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaUnaryExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder)));
            
        }
        
        public static class MetaUnaryPlusExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryPlusExpression;*/ }
            }
        
        }
        
        public static class MetaNegateExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNegateExpression;*/ }
            }
        
        }
        
        public static class MetaOnesComplementExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOnesComplementExpression;*/ }
            }
        
        }
        
        public static class MetaNotExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNotExpression;*/ }
            }
        
        }
        
        public static class MetaUnaryAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryAssignExpression;*/ }
            }
        
        }
        
        public static class MetaPostIncrementAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPostIncrementAssignExpression;*/ }
            }
        
        }
        
        public static class MetaPostDecrementAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPostDecrementAssignExpression;*/ }
            }
        
        }
        
        public static class MetaPreIncrementAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPreIncrementAssignExpression;*/ }
            }
        
        }
        
        public static class MetaPreDecrementAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPreDecrementAssignExpression;*/ }
            }
        
        }
        
        public static class MetaBinaryExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryExpression;*/ }
            }
        
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty LeftProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Left", typeof(MetaDescriptor.MetaBinaryExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaBinaryExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder)));
            
            [ContainmentAttribute]
            public static readonly global::MetaDslx.Core.Immutable.ModelProperty RightProperty =
                global::MetaDslx.Core.Immutable.ModelProperty.Register("Right", typeof(MetaDescriptor.MetaBinaryExpression),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpression), null, typeof(global::MetaDslx.Core.Immutable.MetaBinaryExpression)),
                    new global::MetaDslx.Core.Immutable.ModelPropertyTypeInfo(typeof(global::MetaDslx.Core.Immutable.MetaExpressionBuilder), null, typeof(global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder)));
            
        }
        
        public static class MetaBinaryArithmeticExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryArithmeticExpression;*/ }
            }
        
        }
        
        public static class MetaMultiplyExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMultiplyExpression;*/ }
            }
        
        }
        
        public static class MetaDivideExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDivideExpression;*/ }
            }
        
        }
        
        public static class MetaModuloExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModuloExpression;*/ }
            }
        
        }
        
        public static class MetaAddExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAddExpression;*/ }
            }
        
        }
        
        public static class MetaSubtractExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSubtractExpression;*/ }
            }
        
        }
        
        public static class MetaLeftShiftExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLeftShiftExpression;*/ }
            }
        
        }
        
        public static class MetaRightShiftExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaRightShiftExpression;*/ }
            }
        
        }
        
        public static class MetaBinaryComparisonExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryComparisonExpression;*/ }
            }
        
        }
        
        public static class MetaLessThanExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLessThanExpression;*/ }
            }
        
        }
        
        public static class MetaLessThanOrEqualExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLessThanOrEqualExpression;*/ }
            }
        
        }
        
        public static class MetaGreaterThanExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGreaterThanExpression;*/ }
            }
        
        }
        
        public static class MetaGreaterThanOrEqualExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGreaterThanOrEqualExpression;*/ }
            }
        
        }
        
        public static class MetaEqualExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEqualExpression;*/ }
            }
        
        }
        
        public static class MetaNotEqualExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNotEqualExpression;*/ }
            }
        
        }
        
        public static class MetaBinaryLogicalExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryLogicalExpression;*/ }
            }
        
        }
        
        public static class MetaAndExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndExpression;*/ }
            }
        
        }
        
        public static class MetaOrExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrExpression;*/ }
            }
        
        }
        
        public static class MetaExclusiveOrExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrExpression;*/ }
            }
        
        }
        
        public static class MetaAndAlsoExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndAlsoExpression;*/ }
            }
        
        }
        
        public static class MetaOrElseExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrElseExpression;*/ }
            }
        
        }
        
        public static class MetaNullCoalescingExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullCoalescingExpression;*/ }
            }
        
        }
        
        public static class MetaAssignmentExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAssignmentExpression;*/ }
            }
        
        }
        
        public static class MetaAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAssignExpression;*/ }
            }
        
        }
        
        public static class MetaArithmeticAssignmentExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaArithmeticAssignmentExpression;*/ }
            }
        
        }
        
        public static class MetaMultiplyAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMultiplyAssignExpression;*/ }
            }
        
        }
        
        public static class MetaDivideAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDivideAssignExpression;*/ }
            }
        
        }
        
        public static class MetaModuloAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModuloAssignExpression;*/ }
            }
        
        }
        
        public static class MetaAddAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAddAssignExpression;*/ }
            }
        
        }
        
        public static class MetaSubtractAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSubtractAssignExpression;*/ }
            }
        
        }
        
        public static class MetaLeftShiftAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLeftShiftAssignExpression;*/ }
            }
        
        }
        
        public static class MetaRightShiftAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaRightShiftAssignExpression;*/ }
            }
        
        }
        
        public static class MetaLogicalAssignmentExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLogicalAssignmentExpression;*/ }
            }
        
        }
        
        public static class MetaAndAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndAssignExpression;*/ }
            }
        
        }
        
        public static class MetaExclusiveOrAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrAssignExpression;*/ }
            }
        
        }
        
        public static class MetaOrAssignExpression
        {
        
            public static global::MetaDslx.Core.Immutable.MetaClass MetaClass
            {
                get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrAssignExpression;*/ }
            }
        
        }
    }
    
    public enum MetaCollectionKind
    {
        List,
        Set,
        MultiList,
        MultiSet,
    }
    
    public enum MetaPropertyKind
    {
        Normal,
        Readonly,
        Lazy,
        Derived,
        Containment,
        Synthetized,
        Inherited,
    }
    
    internal class MetaAnnotatedElementId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAnnotatedElement); } }
        public override System.Type MutableType { get { return typeof(MetaAnnotatedElementBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAnnotatedElementImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAnnotatedElementBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAnnotatedElement : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations { get; }
    
    
    	MetaAnnotatedElementBuilder ToMutable();
    	MetaAnnotatedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaDocumentedElementId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaDocumentedElement); } }
        public override System.Type MutableType { get { return typeof(MetaDocumentedElementBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaDocumentedElementImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaDocumentedElementBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaDocumentedElement : global::MetaDslx.Core.Immutable.ISymbol
    {
        string Documentation { get; }
    
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> GetDocumentationLines();
    
    	MetaDocumentedElementBuilder ToMutable();
    	MetaDocumentedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNamedElementId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNamedElement); } }
        public override System.Type MutableType { get { return typeof(MetaNamedElementBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNamedElementImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNamedElementBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNamedElement : global::MetaDslx.Core.Immutable.MetaDocumentedElement
    {
        string Name { get; }
    
    
    	new MetaNamedElementBuilder ToMutable();
    	new MetaNamedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypedElementId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypedElement); } }
        public override System.Type MutableType { get { return typeof(MetaTypedElementBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypedElementImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypedElementBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypedElement : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaType Type { get; }
    
    
    	MetaTypedElementBuilder ToMutable();
    	MetaTypedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaType); } }
        public override System.Type MutableType { get { return typeof(MetaTypeBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeBuilderImpl(this, model, created);
        }
    }
    
    [Type]
    public interface MetaType : global::MetaDslx.Core.Immutable.ISymbol
    {
    
    
    	MetaTypeBuilder ToMutable();
    	MetaTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAnnotationId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAnnotation); } }
        public override System.Type MutableType { get { return typeof(MetaAnnotationBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAnnotationImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAnnotationBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAnnotation : global::MetaDslx.Core.Immutable.MetaNamedElement
    {
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationProperty> Properties { get; }
    
    
    	new MetaAnnotationBuilder ToMutable();
    	new MetaAnnotationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAnnotationPropertyId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAnnotationProperty); } }
        public override System.Type MutableType { get { return typeof(MetaAnnotationPropertyBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAnnotationPropertyImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAnnotationPropertyBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAnnotationProperty : global::MetaDslx.Core.Immutable.MetaNamedElement
    {
        global::MetaDslx.Core.Immutable.MetaExpression Value { get; }
    
    
    	new MetaAnnotationPropertyBuilder ToMutable();
    	new MetaAnnotationPropertyBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNamespaceId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNamespace); } }
        public override System.Type MutableType { get { return typeof(MetaNamespaceBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNamespaceImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNamespaceBuilderImpl(this, model, created);
        }
    }
    
    [Scope]
    public interface MetaNamespace : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        global::MetaDslx.Core.Immutable.MetaNamespace Parent { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> Usings { get; }
        global::MetaDslx.Core.Immutable.MetaModel MetaModel { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> Namespaces { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaDeclaration> Declarations { get; }
    
    
    	new MetaNamespaceBuilder ToMutable();
    	new MetaNamespaceBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaDeclarationId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaDeclaration); } }
        public override System.Type MutableType { get { return typeof(MetaDeclarationBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaDeclarationImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaDeclarationBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaDeclaration : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        global::MetaDslx.Core.Immutable.MetaNamespace Namespace { get; }
        global::MetaDslx.Core.Immutable.MetaModel Model { get; }
    
    
    	new MetaDeclarationBuilder ToMutable();
    	new MetaDeclarationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaModelId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaModel); } }
        public override System.Type MutableType { get { return typeof(MetaModelBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaModelImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaModelBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaModel : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        string Uri { get; }
        global::MetaDslx.Core.Immutable.MetaNamespace Namespace { get; }
    
    
    	new MetaModelBuilder ToMutable();
    	new MetaModelBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaCollectionTypeId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaCollectionType); } }
        public override System.Type MutableType { get { return typeof(MetaCollectionTypeBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaCollectionTypeImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaCollectionTypeBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaCollectionType : global::MetaDslx.Core.Immutable.MetaType
    {
        global::MetaDslx.Core.Immutable.MetaCollectionKind Kind { get; }
        global::MetaDslx.Core.Immutable.MetaType InnerType { get; }
    
    
    	new MetaCollectionTypeBuilder ToMutable();
    	new MetaCollectionTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNullableTypeId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNullableType); } }
        public override System.Type MutableType { get { return typeof(MetaNullableTypeBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNullableTypeImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNullableTypeBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNullableType : global::MetaDslx.Core.Immutable.MetaType
    {
        global::MetaDslx.Core.Immutable.MetaType InnerType { get; }
    
    
    	new MetaNullableTypeBuilder ToMutable();
    	new MetaNullableTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPrimitiveTypeId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPrimitiveType); } }
        public override System.Type MutableType { get { return typeof(MetaPrimitiveTypeBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPrimitiveTypeImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPrimitiveTypeBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPrimitiveType : global::MetaDslx.Core.Immutable.MetaType, global::MetaDslx.Core.Immutable.MetaNamedElement
    {
    
    
    	new MetaPrimitiveTypeBuilder ToMutable();
    	new MetaPrimitiveTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaEnumId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaEnum); } }
        public override System.Type MutableType { get { return typeof(MetaEnumBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaEnumImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaEnumBuilderImpl(this, model, created);
        }
    }
    
    [Scope]
    public interface MetaEnum : global::MetaDslx.Core.Immutable.MetaType, global::MetaDslx.Core.Immutable.MetaDeclaration
    {
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteral> EnumLiterals { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> Operations { get; }
    
    
    	new MetaEnumBuilder ToMutable();
    	new MetaEnumBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaEnumLiteralId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaEnumLiteral); } }
        public override System.Type MutableType { get { return typeof(MetaEnumLiteralBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaEnumLiteralImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaEnumLiteralBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaEnumLiteral : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaTypedElement
    {
        global::MetaDslx.Core.Immutable.MetaEnum Enum { get; }
    
    
    	new MetaEnumLiteralBuilder ToMutable();
    	new MetaEnumLiteralBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaClassId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaClass); } }
        public override System.Type MutableType { get { return typeof(MetaClassBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaClassImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaClassBuilderImpl(this, model, created);
        }
    }
    
    [Scope]
    public interface MetaClass : global::MetaDslx.Core.Immutable.MetaType, global::MetaDslx.Core.Immutable.MetaDeclaration
    {
        bool IsAbstract { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> SuperClasses { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> Properties { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> Operations { get; }
        global::MetaDslx.Core.Immutable.MetaConstructor Constructor { get; }
    
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> GetAllSuperClasses();
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> GetAllProperties();
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> GetAllOperations();
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> GetAllImplementedProperties();
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> GetAllImplementedOperations();
    
    	new MetaClassBuilder ToMutable();
    	new MetaClassBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaFunctionTypeId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaFunctionType); } }
        public override System.Type MutableType { get { return typeof(MetaFunctionTypeBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaFunctionTypeImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaFunctionTypeBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaFunctionType : global::MetaDslx.Core.Immutable.MetaType
    {
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaType> ParameterTypes { get; }
        global::MetaDslx.Core.Immutable.MetaType ReturnType { get; }
    
    
    	new MetaFunctionTypeBuilder ToMutable();
    	new MetaFunctionTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaFunctionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaFunction); } }
        public override System.Type MutableType { get { return typeof(MetaFunctionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaFunctionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaFunctionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaFunction : global::MetaDslx.Core.Immutable.MetaTypedElement, global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        new global::MetaDslx.Core.Immutable.MetaFunctionType Type { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> Parameters { get; }
        global::MetaDslx.Core.Immutable.MetaType ReturnType { get; }
    
    
    	new MetaFunctionBuilder ToMutable();
    	new MetaFunctionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaGlobalFunctionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaGlobalFunction); } }
        public override System.Type MutableType { get { return typeof(MetaGlobalFunctionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaGlobalFunctionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaGlobalFunctionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaGlobalFunction : global::MetaDslx.Core.Immutable.MetaFunction, global::MetaDslx.Core.Immutable.MetaDeclaration
    {
    
    
    	new MetaGlobalFunctionBuilder ToMutable();
    	new MetaGlobalFunctionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOperationId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOperation); } }
        public override System.Type MutableType { get { return typeof(MetaOperationBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOperationImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOperationBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOperation : global::MetaDslx.Core.Immutable.MetaFunction
    {
        global::MetaDslx.Core.Immutable.MetaType Parent { get; }
    
    
    	new MetaOperationBuilder ToMutable();
    	new MetaOperationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaConstantId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaConstant); } }
        public override System.Type MutableType { get { return typeof(MetaConstantBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaConstantImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaConstantBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaConstant : global::MetaDslx.Core.Immutable.MetaTypedElement, global::MetaDslx.Core.Immutable.MetaDeclaration
    {
        global::MetaDslx.Core.Immutable.MetaExpression Value { get; }
    
    
    	new MetaConstantBuilder ToMutable();
    	new MetaConstantBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaConstructorId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaConstructor); } }
        public override System.Type MutableType { get { return typeof(MetaConstructorBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaConstructorImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaConstructorBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaConstructor : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        global::MetaDslx.Core.Immutable.MetaClass Parent { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializer> Initializers { get; }
    
    
    	new MetaConstructorBuilder ToMutable();
    	new MetaConstructorBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaParameterId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaParameter); } }
        public override System.Type MutableType { get { return typeof(MetaParameterBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaParameterImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaParameterBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaParameter : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaTypedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        global::MetaDslx.Core.Immutable.MetaFunction Function { get; }
    
    
    	new MetaParameterBuilder ToMutable();
    	new MetaParameterBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPropertyId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaProperty); } }
        public override System.Type MutableType { get { return typeof(MetaPropertyBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPropertyImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPropertyBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaProperty : global::MetaDslx.Core.Immutable.MetaNamedElement, global::MetaDslx.Core.Immutable.MetaTypedElement, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        global::MetaDslx.Core.Immutable.MetaPropertyKind Kind { get; }
        global::MetaDslx.Core.Immutable.MetaClass Class { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> OppositeProperties { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> SubsettedProperties { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> SubsettingProperties { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> RedefinedProperties { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> RedefiningProperties { get; }
    
    
    	new MetaPropertyBuilder ToMutable();
    	new MetaPropertyBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPropertyInitializerId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPropertyInitializer); } }
        public override System.Type MutableType { get { return typeof(MetaPropertyInitializerBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPropertyInitializerImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPropertyInitializerBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPropertyInitializer : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaConstructor Constructor { get; }
        string PropertyName { get; }
        global::MetaDslx.Core.Immutable.MetaClass PropertyContext { get; }
        global::MetaDslx.Core.Immutable.MetaProperty Property { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Value { get; }
    
    
    	MetaPropertyInitializerBuilder ToMutable();
    	MetaPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaSynthetizedPropertyInitializerId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaSynthetizedPropertyInitializer); } }
        public override System.Type MutableType { get { return typeof(MetaSynthetizedPropertyInitializerBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaSynthetizedPropertyInitializerImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaSynthetizedPropertyInitializerBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaSynthetizedPropertyInitializer : global::MetaDslx.Core.Immutable.MetaPropertyInitializer
    {
    
    
    	new MetaSynthetizedPropertyInitializerBuilder ToMutable();
    	new MetaSynthetizedPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaInheritedPropertyInitializerId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaInheritedPropertyInitializer); } }
        public override System.Type MutableType { get { return typeof(MetaInheritedPropertyInitializerBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaInheritedPropertyInitializerImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaInheritedPropertyInitializerBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaInheritedPropertyInitializer : global::MetaDslx.Core.Immutable.MetaPropertyInitializer
    {
        string ObjectName { get; }
        global::MetaDslx.Core.Immutable.MetaProperty Object { get; }
    
    
    	new MetaInheritedPropertyInitializerBuilder ToMutable();
    	new MetaInheritedPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaExpression); } }
        public override System.Type MutableType { get { return typeof(MetaExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaExpression : global::MetaDslx.Core.Immutable.MetaTypedElement
    {
        bool NoTypeError { get; }
        global::MetaDslx.Core.Immutable.MetaType ExpectedType { get; }
    
    
    	new MetaExpressionBuilder ToMutable();
    	new MetaExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBracketExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBracketExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBracketExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBracketExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBracketExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBracketExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaBracketExpressionBuilder ToMutable();
    	new MetaBracketExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBoundExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBoundExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBoundExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBoundExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBoundExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBoundExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        bool UniqueDefinition { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments { get; }
        global::MetaDslx.Core.BindingInfo Definitions { get; }
        global::MetaDslx.Core.Immutable.ISymbol Definition { get; }
    
    
    	new MetaBoundExpressionBuilder ToMutable();
    	new MetaBoundExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaThisExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaThisExpression); } }
        public override System.Type MutableType { get { return typeof(MetaThisExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaThisExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaThisExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaThisExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
    
    
    	new MetaThisExpressionBuilder ToMutable();
    	new MetaThisExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNullExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNullExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNullExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNullExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNullExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNullExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
    
    
    	new MetaNullExpressionBuilder ToMutable();
    	new MetaNullExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeConversionExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypeConversionExpression); } }
        public override System.Type MutableType { get { return typeof(MetaTypeConversionExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeConversionExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeConversionExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypeConversionExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaType TypeReference { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaTypeConversionExpressionBuilder ToMutable();
    	new MetaTypeConversionExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeAsExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypeAsExpression); } }
        public override System.Type MutableType { get { return typeof(MetaTypeAsExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeAsExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeAsExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypeAsExpression : global::MetaDslx.Core.Immutable.MetaTypeConversionExpression
    {
    
    
    	new MetaTypeAsExpressionBuilder ToMutable();
    	new MetaTypeAsExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeCastExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypeCastExpression); } }
        public override System.Type MutableType { get { return typeof(MetaTypeCastExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeCastExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeCastExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypeCastExpression : global::MetaDslx.Core.Immutable.MetaTypeConversionExpression
    {
    
    
    	new MetaTypeCastExpressionBuilder ToMutable();
    	new MetaTypeCastExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeCheckExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypeCheckExpression); } }
        public override System.Type MutableType { get { return typeof(MetaTypeCheckExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeCheckExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeCheckExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypeCheckExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaType TypeReference { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaTypeCheckExpressionBuilder ToMutable();
    	new MetaTypeCheckExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaTypeOfExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaTypeOfExpression); } }
        public override System.Type MutableType { get { return typeof(MetaTypeOfExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaTypeOfExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaTypeOfExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaTypeOfExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaType TypeReference { get; }
    
    
    	new MetaTypeOfExpressionBuilder ToMutable();
    	new MetaTypeOfExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaConditionalExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaConditionalExpression); } }
        public override System.Type MutableType { get { return typeof(MetaConditionalExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaConditionalExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaConditionalExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaConditionalExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Condition { get; }
        global::MetaDslx.Core.Immutable.MetaType BalancedType { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Then { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Else { get; }
    
    
    	new MetaConditionalExpressionBuilder ToMutable();
    	new MetaConditionalExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaConstantExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaConstantExpression); } }
        public override System.Type MutableType { get { return typeof(MetaConstantExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaConstantExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaConstantExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaConstantExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        object Value { get; }
    
    
    	new MetaConstantExpressionBuilder ToMutable();
    	new MetaConstantExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaIdentifierExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaIdentifierExpression); } }
        public override System.Type MutableType { get { return typeof(MetaIdentifierExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaIdentifierExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaIdentifierExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaIdentifierExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        string Name { get; }
    
    
    	new MetaIdentifierExpressionBuilder ToMutable();
    	new MetaIdentifierExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaMemberAccessExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaMemberAccessExpression); } }
        public override System.Type MutableType { get { return typeof(MetaMemberAccessExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaMemberAccessExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaMemberAccessExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaMemberAccessExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
        string Name { get; }
    
    
    	new MetaMemberAccessExpressionBuilder ToMutable();
    	new MetaMemberAccessExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaFunctionCallExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaFunctionCallExpression); } }
        public override System.Type MutableType { get { return typeof(MetaFunctionCallExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaFunctionCallExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaFunctionCallExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaFunctionCallExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaFunctionCallExpressionBuilder ToMutable();
    	new MetaFunctionCallExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaIndexerExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaIndexerExpression); } }
        public override System.Type MutableType { get { return typeof(MetaIndexerExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaIndexerExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaIndexerExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaIndexerExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaIndexerExpressionBuilder ToMutable();
    	new MetaIndexerExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNewExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNewExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNewExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNewExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNewExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNewExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaClass TypeReference { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer> PropertyInitializers { get; }
    
    
    	new MetaNewExpressionBuilder ToMutable();
    	new MetaNewExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNewPropertyInitializerId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNewPropertyInitializer); } }
        public override System.Type MutableType { get { return typeof(MetaNewPropertyInitializerBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNewPropertyInitializerImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNewPropertyInitializerBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNewPropertyInitializer : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaNewExpression Parent { get; }
        string PropertyName { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Value { get; }
        global::MetaDslx.Core.Immutable.MetaProperty Property { get; }
    
    
    	MetaNewPropertyInitializerBuilder ToMutable();
    	MetaNewPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNewCollectionExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNewCollectionExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNewCollectionExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNewCollectionExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNewCollectionExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNewCollectionExpression : global::MetaDslx.Core.Immutable.MetaExpression
    {
        global::MetaDslx.Core.Immutable.MetaCollectionType TypeReference { get; }
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Values { get; }
    
    
    	new MetaNewCollectionExpressionBuilder ToMutable();
    	new MetaNewCollectionExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOperatorExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOperatorExpression); } }
        public override System.Type MutableType { get { return typeof(MetaOperatorExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOperatorExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOperatorExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOperatorExpression : global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        string Name { get; }
    
    
    	new MetaOperatorExpressionBuilder ToMutable();
    	new MetaOperatorExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaUnaryExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaUnaryExpression); } }
        public override System.Type MutableType { get { return typeof(MetaUnaryExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaUnaryExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaUnaryExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaUnaryExpression : global::MetaDslx.Core.Immutable.MetaOperatorExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Expression { get; }
    
    
    	new MetaUnaryExpressionBuilder ToMutable();
    	new MetaUnaryExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaUnaryPlusExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaUnaryPlusExpression); } }
        public override System.Type MutableType { get { return typeof(MetaUnaryPlusExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaUnaryPlusExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaUnaryPlusExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaUnaryPlusExpression : global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
    
    
    	new MetaUnaryPlusExpressionBuilder ToMutable();
    	new MetaUnaryPlusExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNegateExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNegateExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNegateExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNegateExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNegateExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNegateExpression : global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
    
    
    	new MetaNegateExpressionBuilder ToMutable();
    	new MetaNegateExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOnesComplementExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOnesComplementExpression); } }
        public override System.Type MutableType { get { return typeof(MetaOnesComplementExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOnesComplementExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOnesComplementExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOnesComplementExpression : global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
    
    
    	new MetaOnesComplementExpressionBuilder ToMutable();
    	new MetaOnesComplementExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNotExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNotExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNotExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNotExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNotExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNotExpression : global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
    
    
    	new MetaNotExpressionBuilder ToMutable();
    	new MetaNotExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaUnaryAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaUnaryAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaUnaryAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaUnaryAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaUnaryAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaUnaryAssignExpression : global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
    
    
    	new MetaUnaryAssignExpressionBuilder ToMutable();
    	new MetaUnaryAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPostIncrementAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPostIncrementAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaPostIncrementAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPostIncrementAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPostIncrementAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPostIncrementAssignExpression : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression
    {
    
    
    	new MetaPostIncrementAssignExpressionBuilder ToMutable();
    	new MetaPostIncrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPostDecrementAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPostDecrementAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaPostDecrementAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPostDecrementAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPostDecrementAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPostDecrementAssignExpression : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression
    {
    
    
    	new MetaPostDecrementAssignExpressionBuilder ToMutable();
    	new MetaPostDecrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPreIncrementAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPreIncrementAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaPreIncrementAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPreIncrementAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPreIncrementAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPreIncrementAssignExpression : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression
    {
    
    
    	new MetaPreIncrementAssignExpressionBuilder ToMutable();
    	new MetaPreIncrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaPreDecrementAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaPreDecrementAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaPreDecrementAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaPreDecrementAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaPreDecrementAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaPreDecrementAssignExpression : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression
    {
    
    
    	new MetaPreDecrementAssignExpressionBuilder ToMutable();
    	new MetaPreDecrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBinaryExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBinaryExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBinaryExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBinaryExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBinaryExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBinaryExpression : global::MetaDslx.Core.Immutable.MetaOperatorExpression
    {
        global::MetaDslx.Core.Immutable.MetaExpression Left { get; }
        global::MetaDslx.Core.Immutable.MetaExpression Right { get; }
    
    
    	new MetaBinaryExpressionBuilder ToMutable();
    	new MetaBinaryExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBinaryArithmeticExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBinaryArithmeticExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBinaryArithmeticExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBinaryArithmeticExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBinaryArithmeticExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBinaryArithmeticExpression : global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
    
    
    	new MetaBinaryArithmeticExpressionBuilder ToMutable();
    	new MetaBinaryArithmeticExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaMultiplyExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaMultiplyExpression); } }
        public override System.Type MutableType { get { return typeof(MetaMultiplyExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaMultiplyExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaMultiplyExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaMultiplyExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaMultiplyExpressionBuilder ToMutable();
    	new MetaMultiplyExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaDivideExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaDivideExpression); } }
        public override System.Type MutableType { get { return typeof(MetaDivideExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaDivideExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaDivideExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaDivideExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaDivideExpressionBuilder ToMutable();
    	new MetaDivideExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaModuloExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaModuloExpression); } }
        public override System.Type MutableType { get { return typeof(MetaModuloExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaModuloExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaModuloExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaModuloExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaModuloExpressionBuilder ToMutable();
    	new MetaModuloExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAddExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAddExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAddExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAddExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAddExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAddExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaAddExpressionBuilder ToMutable();
    	new MetaAddExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaSubtractExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaSubtractExpression); } }
        public override System.Type MutableType { get { return typeof(MetaSubtractExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaSubtractExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaSubtractExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaSubtractExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaSubtractExpressionBuilder ToMutable();
    	new MetaSubtractExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaLeftShiftExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaLeftShiftExpression); } }
        public override System.Type MutableType { get { return typeof(MetaLeftShiftExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaLeftShiftExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaLeftShiftExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaLeftShiftExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaLeftShiftExpressionBuilder ToMutable();
    	new MetaLeftShiftExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaRightShiftExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaRightShiftExpression); } }
        public override System.Type MutableType { get { return typeof(MetaRightShiftExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaRightShiftExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaRightShiftExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaRightShiftExpression : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
    
    
    	new MetaRightShiftExpressionBuilder ToMutable();
    	new MetaRightShiftExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBinaryComparisonExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBinaryComparisonExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBinaryComparisonExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBinaryComparisonExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBinaryComparisonExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBinaryComparisonExpression : global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
    
    
    	new MetaBinaryComparisonExpressionBuilder ToMutable();
    	new MetaBinaryComparisonExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaLessThanExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaLessThanExpression); } }
        public override System.Type MutableType { get { return typeof(MetaLessThanExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaLessThanExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaLessThanExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaLessThanExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaLessThanExpressionBuilder ToMutable();
    	new MetaLessThanExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaLessThanOrEqualExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaLessThanOrEqualExpression); } }
        public override System.Type MutableType { get { return typeof(MetaLessThanOrEqualExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaLessThanOrEqualExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaLessThanOrEqualExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaLessThanOrEqualExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaLessThanOrEqualExpressionBuilder ToMutable();
    	new MetaLessThanOrEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaGreaterThanExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaGreaterThanExpression); } }
        public override System.Type MutableType { get { return typeof(MetaGreaterThanExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaGreaterThanExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaGreaterThanExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaGreaterThanExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaGreaterThanExpressionBuilder ToMutable();
    	new MetaGreaterThanExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaGreaterThanOrEqualExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaGreaterThanOrEqualExpression); } }
        public override System.Type MutableType { get { return typeof(MetaGreaterThanOrEqualExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaGreaterThanOrEqualExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaGreaterThanOrEqualExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaGreaterThanOrEqualExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaGreaterThanOrEqualExpressionBuilder ToMutable();
    	new MetaGreaterThanOrEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaEqualExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaEqualExpression); } }
        public override System.Type MutableType { get { return typeof(MetaEqualExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaEqualExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaEqualExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaEqualExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaEqualExpressionBuilder ToMutable();
    	new MetaEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNotEqualExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNotEqualExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNotEqualExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNotEqualExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNotEqualExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNotEqualExpression : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
    
    
    	new MetaNotEqualExpressionBuilder ToMutable();
    	new MetaNotEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaBinaryLogicalExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaBinaryLogicalExpression); } }
        public override System.Type MutableType { get { return typeof(MetaBinaryLogicalExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaBinaryLogicalExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaBinaryLogicalExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaBinaryLogicalExpression : global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
    
    
    	new MetaBinaryLogicalExpressionBuilder ToMutable();
    	new MetaBinaryLogicalExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAndExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAndExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAndExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAndExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAndExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAndExpression : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
    
    
    	new MetaAndExpressionBuilder ToMutable();
    	new MetaAndExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOrExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOrExpression); } }
        public override System.Type MutableType { get { return typeof(MetaOrExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOrExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOrExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOrExpression : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
    
    
    	new MetaOrExpressionBuilder ToMutable();
    	new MetaOrExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaExclusiveOrExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaExclusiveOrExpression); } }
        public override System.Type MutableType { get { return typeof(MetaExclusiveOrExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaExclusiveOrExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaExclusiveOrExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaExclusiveOrExpression : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
    
    
    	new MetaExclusiveOrExpressionBuilder ToMutable();
    	new MetaExclusiveOrExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAndAlsoExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAndAlsoExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAndAlsoExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAndAlsoExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAndAlsoExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAndAlsoExpression : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
    
    
    	new MetaAndAlsoExpressionBuilder ToMutable();
    	new MetaAndAlsoExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOrElseExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOrElseExpression); } }
        public override System.Type MutableType { get { return typeof(MetaOrElseExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOrElseExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOrElseExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOrElseExpression : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
    
    
    	new MetaOrElseExpressionBuilder ToMutable();
    	new MetaOrElseExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaNullCoalescingExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaNullCoalescingExpression); } }
        public override System.Type MutableType { get { return typeof(MetaNullCoalescingExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaNullCoalescingExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaNullCoalescingExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaNullCoalescingExpression : global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
    
    
    	new MetaNullCoalescingExpressionBuilder ToMutable();
    	new MetaNullCoalescingExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAssignmentExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAssignmentExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAssignmentExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAssignmentExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAssignmentExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAssignmentExpression : global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
    
    
    	new MetaAssignmentExpressionBuilder ToMutable();
    	new MetaAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAssignExpression : global::MetaDslx.Core.Immutable.MetaAssignmentExpression
    {
    
    
    	new MetaAssignExpressionBuilder ToMutable();
    	new MetaAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaArithmeticAssignmentExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaArithmeticAssignmentExpression); } }
        public override System.Type MutableType { get { return typeof(MetaArithmeticAssignmentExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaArithmeticAssignmentExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaArithmeticAssignmentExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaArithmeticAssignmentExpression : global::MetaDslx.Core.Immutable.MetaAssignmentExpression
    {
    
    
    	new MetaArithmeticAssignmentExpressionBuilder ToMutable();
    	new MetaArithmeticAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaMultiplyAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaMultiplyAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaMultiplyAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaMultiplyAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaMultiplyAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaMultiplyAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaMultiplyAssignExpressionBuilder ToMutable();
    	new MetaMultiplyAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaDivideAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaDivideAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaDivideAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaDivideAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaDivideAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaDivideAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaDivideAssignExpressionBuilder ToMutable();
    	new MetaDivideAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaModuloAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaModuloAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaModuloAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaModuloAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaModuloAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaModuloAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaModuloAssignExpressionBuilder ToMutable();
    	new MetaModuloAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAddAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAddAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAddAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAddAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAddAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAddAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaAddAssignExpressionBuilder ToMutable();
    	new MetaAddAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaSubtractAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaSubtractAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaSubtractAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaSubtractAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaSubtractAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaSubtractAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaSubtractAssignExpressionBuilder ToMutable();
    	new MetaSubtractAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaLeftShiftAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaLeftShiftAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaLeftShiftAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaLeftShiftAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaLeftShiftAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaLeftShiftAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaLeftShiftAssignExpressionBuilder ToMutable();
    	new MetaLeftShiftAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaRightShiftAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaRightShiftAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaRightShiftAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaRightShiftAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaRightShiftAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaRightShiftAssignExpression : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
    
    
    	new MetaRightShiftAssignExpressionBuilder ToMutable();
    	new MetaRightShiftAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaLogicalAssignmentExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaLogicalAssignmentExpression); } }
        public override System.Type MutableType { get { return typeof(MetaLogicalAssignmentExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaLogicalAssignmentExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaLogicalAssignmentExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaLogicalAssignmentExpression : global::MetaDslx.Core.Immutable.MetaAssignmentExpression
    {
    
    
    	new MetaLogicalAssignmentExpressionBuilder ToMutable();
    	new MetaLogicalAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaAndAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaAndAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaAndAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaAndAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaAndAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaAndAssignExpression : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression
    {
    
    
    	new MetaAndAssignExpressionBuilder ToMutable();
    	new MetaAndAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaExclusiveOrAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaExclusiveOrAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaExclusiveOrAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaExclusiveOrAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaExclusiveOrAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaExclusiveOrAssignExpression : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression
    {
    
    
    	new MetaExclusiveOrAssignExpressionBuilder ToMutable();
    	new MetaExclusiveOrAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    internal class MetaOrAssignExpressionId : SymbolId
    {
        public override System.Type ImmutableType { get { return typeof(MetaOrAssignExpression); } }
        public override System.Type MutableType { get { return typeof(MetaOrAssignExpressionBuilder); } }
    
        public override global::MetaDslx.Core.Immutable.IImmutableSymbol CreateImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
        {
            return new MetaOrAssignExpressionImpl(this, model);
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol CreateMutable(global::MetaDslx.Core.Immutable.MutableModel model, bool created)
        {
            return new MetaOrAssignExpressionBuilderImpl(this, model, created);
        }
    }
    
    public interface MetaOrAssignExpression : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression
    {
    
    
    	new MetaOrAssignExpressionBuilder ToMutable();
    	new MetaOrAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model);
    }
    
    public interface MetaAnnotatedElementBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations { get; }
        global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild { get; }
    
    	MetaAnnotatedElement ToImmutable();
    	MetaAnnotatedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAnnotatedElementLazyChildBuilder
    {
        
    }
    
    public interface MetaDocumentedElementBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
        string Documentation { get; set; }
        Func<string> DocumentationLazy { get; set; }
    
    	MetaDocumentedElement ToImmutable();
    	MetaDocumentedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaDocumentedElementLazyChildBuilder
    {
        Func<string> Documentation { set; }
    }
    
    public interface MetaNamedElementBuilder : global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder
    {
        string Name { get; set; }
        Func<string> NameLazy { get; set; }
    
    	new MetaNamedElement ToImmutable();
    	new MetaNamedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNamedElementLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaDocumentedElementLazyChildBuilder
    {
        Func<string> Name { set; }
    }
    
    public interface MetaTypedElementBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder Type { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy { get; set; }
    
    	MetaTypedElement ToImmutable();
    	MetaTypedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type { set; }
    }
    
    public interface MetaTypeBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
    
    	MetaType ToImmutable();
    	MetaType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeLazyChildBuilder
    {
    }
    
    public interface MetaAnnotationBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder
    {
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder> Properties { get; }
        global::MetaDslx.Core.Immutable.MetaAnnotationPropertyLazyChildBuilder PropertiesLazyChild { get; }
    
    	new MetaAnnotation ToImmutable();
    	new MetaAnnotation ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAnnotationLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder
    {
        
    }
    
    public interface MetaAnnotationPropertyBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild { get; }
    
    	new MetaAnnotationProperty ToImmutable();
    	new MetaAnnotationProperty ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAnnotationPropertyLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value { set; }
    }
    
    public interface MetaNamespaceBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Parent { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> ParentLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Usings { get; }
        global::MetaDslx.Core.Immutable.MetaModelBuilder MetaModel { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> MetaModelLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaModelLazyChildBuilder MetaModelLazyChild { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespaces { get; }
        global::MetaDslx.Core.Immutable.MetaNamespaceLazyChildBuilder NamespacesLazyChild { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaDeclarationBuilder> Declarations { get; }
        global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder DeclarationsLazyChild { get; }
    
    	new MetaNamespace ToImmutable();
    	new MetaNamespace ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNamespaceLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Parent { set; }
        
        Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> MetaModel { set; }
        
        
    }
    
    public interface MetaDeclarationBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaModelBuilder Model { get; }
        Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy { get; set; }
    
    	new MetaDeclaration ToImmutable();
    	new MetaDeclaration ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaDeclarationLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace { set; }
        Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model { set; }
    }
    
    public interface MetaModelBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        string Uri { get; set; }
        Func<string> UriLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy { get; set; }
    
    	new MetaModel ToImmutable();
    	new MetaModel ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaModelLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<string> Uri { set; }
        Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace { set; }
    }
    
    public interface MetaCollectionTypeBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder
    {
        global::MetaDslx.Core.Immutable.MetaCollectionKind Kind { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaCollectionKind> KindLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaTypeBuilder InnerType { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerTypeLazy { get; set; }
    
    	new MetaCollectionType ToImmutable();
    	new MetaCollectionType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaCollectionTypeLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaCollectionKind> Kind { set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerType { set; }
    }
    
    public interface MetaNullableTypeBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder InnerType { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerTypeLazy { get; set; }
    
    	new MetaNullableType ToImmutable();
    	new MetaNullableType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNullableTypeLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerType { set; }
    }
    
    public interface MetaPrimitiveTypeBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder, global::MetaDslx.Core.Immutable.MetaNamedElementBuilder
    {
    
    	new MetaPrimitiveType ToImmutable();
    	new MetaPrimitiveType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPrimitiveTypeLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder
    {
    }
    
    public interface MetaEnumBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationBuilder
    {
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder> EnumLiterals { get; }
        global::MetaDslx.Core.Immutable.MetaEnumLiteralLazyChildBuilder EnumLiteralsLazyChild { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> Operations { get; }
        global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilder OperationsLazyChild { get; }
    
    	new MetaEnum ToImmutable();
    	new MetaEnum ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaEnumLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder
    {
        
        
    }
    
    public interface MetaEnumLiteralBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaEnumBuilder Enum { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaEnumBuilder> EnumLazy { get; set; }
    
    	new MetaEnumLiteral ToImmutable();
    	new MetaEnumLiteral ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaEnumLiteralLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaEnumBuilder> Enum { set; }
    }
    
    public interface MetaClassBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationBuilder
    {
        bool IsAbstract { get; set; }
        Func<bool> IsAbstractLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaClassBuilder> SuperClasses { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Properties { get; }
        global::MetaDslx.Core.Immutable.MetaPropertyLazyChildBuilder PropertiesLazyChild { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> Operations { get; }
        global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilder OperationsLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaConstructorLazyChildBuilder ConstructorLazyChild { get; }
    
    	new MetaClass ToImmutable();
    	new MetaClass ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaClassLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder
    {
        Func<bool> IsAbstract { set; }
        
        
        
        Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor { set; }
    }
    
    public interface MetaFunctionTypeBuilder : global::MetaDslx.Core.Immutable.MetaTypeBuilder
    {
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ParameterTypes { get; }
        global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy { get; set; }
    
    	new MetaFunctionType ToImmutable();
    	new MetaFunctionType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaFunctionTypeLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder
    {
        
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType { set; }
    }
    
    public interface MetaFunctionBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementBuilder, global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        new global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder Type { get; }
        new Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> TypeLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> Parameters { get; }
        global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilder ParametersLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy { get; set; }
    
    	new MetaFunction ToImmutable();
    	new MetaFunction ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaFunctionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        new Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> Type { set; }
        
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType { set; }
    }
    
    public interface MetaGlobalFunctionBuilder : global::MetaDslx.Core.Immutable.MetaFunctionBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationBuilder
    {
    
    	new MetaGlobalFunction ToImmutable();
    	new MetaGlobalFunction ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaGlobalFunctionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaFunctionLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder
    {
    }
    
    public interface MetaOperationBuilder : global::MetaDslx.Core.Immutable.MetaFunctionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder Parent { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ParentLazy { get; set; }
    
    	new MetaOperation ToImmutable();
    	new MetaOperation ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOperationLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaFunctionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Parent { set; }
    }
    
    public interface MetaConstantBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild { get; }
    
    	new MetaConstant ToImmutable();
    	new MetaConstant ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaConstantLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value { set; }
    }
    
    public interface MetaConstructorBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaClassBuilder Parent { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> ParentLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder> Initializers { get; }
        global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilder InitializersLazyChild { get; }
    
    	new MetaConstructor ToImmutable();
    	new MetaConstructor ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaConstructorLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> Parent { set; }
        
    }
    
    public interface MetaParameterBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaFunctionBuilder Function { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaFunctionBuilder> FunctionLazy { get; set; }
    
    	new MetaParameter ToImmutable();
    	new MetaParameter ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaParameterLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaFunctionBuilder> Function { set; }
    }
    
    public interface MetaPropertyBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        global::MetaDslx.Core.Immutable.MetaPropertyKind Kind { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyKind> KindLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaClassBuilder Class { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> ClassLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> OppositeProperties { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> SubsettedProperties { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> SubsettingProperties { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> RedefinedProperties { get; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> RedefiningProperties { get; }
    
    	new MetaProperty ToImmutable();
    	new MetaProperty ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPropertyLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaPropertyKind> Kind { set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> Class { set; }
        
        
        
        
        
    }
    
    public interface MetaPropertyInitializerBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy { get; set; }
        string PropertyName { get; set; }
        Func<string> PropertyNameLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaClassBuilder PropertyContext { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContextLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild { get; }
    
    	MetaPropertyInitializer ToImmutable();
    	MetaPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPropertyInitializerLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor { set; }
        Func<string> PropertyName { set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContext { set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value { set; }
    }
    
    public interface MetaSynthetizedPropertyInitializerBuilder : global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder
    {
    
    	new MetaSynthetizedPropertyInitializer ToImmutable();
    	new MetaSynthetizedPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaSynthetizedPropertyInitializerLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilder
    {
    }
    
    public interface MetaInheritedPropertyInitializerBuilder : global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder
    {
        string ObjectName { get; set; }
        Func<string> ObjectNameLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaPropertyBuilder Object { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> ObjectLazy { get; set; }
    
    	new MetaInheritedPropertyInitializer ToImmutable();
    	new MetaInheritedPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaInheritedPropertyInitializerLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilder
    {
        Func<string> ObjectName { set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Object { set; }
    }
    
    public interface MetaExpressionBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementBuilder
    {
        bool NoTypeError { get; }
        Func<bool> NoTypeErrorLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType { get; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy { get; set; }
    
    	new MetaExpression ToImmutable();
    	new MetaExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder
    {
        Func<bool> NoTypeError { set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType { set; }
    }
    
    public interface MetaBracketExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaBracketExpression ToImmutable();
    	new MetaBracketExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBracketExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaBoundExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        bool UniqueDefinition { get; }
        Func<bool> UniqueDefinitionLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments { get; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild { get; }
        global::MetaDslx.Core.BindingInfo Definitions { get; }
        Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy { get; set; }
        global::MetaDslx.Core.Immutable.ISymbol Definition { get; }
        Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy { get; set; }
    
    	new MetaBoundExpression ToImmutable();
    	new MetaBoundExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBoundExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<bool> UniqueDefinition { set; }
        
        Func<global::MetaDslx.Core.BindingInfo> Definitions { set; }
        Func<global::MetaDslx.Core.Immutable.ISymbol> Definition { set; }
    }
    
    public interface MetaThisExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
    
    	new MetaThisExpression ToImmutable();
    	new MetaThisExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaThisExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
    }
    
    public interface MetaNullExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
    
    	new MetaNullExpression ToImmutable();
    	new MetaNullExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNullExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
    }
    
    public interface MetaTypeConversionExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaTypeConversionExpression ToImmutable();
    	new MetaTypeConversionExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeConversionExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaTypeAsExpressionBuilder : global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder
    {
    
    	new MetaTypeAsExpression ToImmutable();
    	new MetaTypeAsExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeAsExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionLazyChildBuilder
    {
    }
    
    public interface MetaTypeCastExpressionBuilder : global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder
    {
    
    	new MetaTypeCastExpression ToImmutable();
    	new MetaTypeCastExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeCastExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionLazyChildBuilder
    {
    }
    
    public interface MetaTypeCheckExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaTypeCheckExpression ToImmutable();
    	new MetaTypeCheckExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeCheckExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaTypeOfExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy { get; set; }
    
    	new MetaTypeOfExpression ToImmutable();
    	new MetaTypeOfExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaTypeOfExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference { set; }
    }
    
    public interface MetaConditionalExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Condition { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ConditionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ConditionLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaTypeBuilder BalancedType { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> BalancedTypeLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Then { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ThenLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ThenLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Else { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ElseLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ElseLazyChild { get; }
    
    	new MetaConditionalExpression ToImmutable();
    	new MetaConditionalExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaConditionalExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Condition { set; }
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> BalancedType { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Then { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Else { set; }
    }
    
    public interface MetaConstantExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        object Value { get; set; }
        Func<object> ValueLazy { get; set; }
    
    	new MetaConstantExpression ToImmutable();
    	new MetaConstantExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaConstantExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<object> Value { set; }
    }
    
    public interface MetaIdentifierExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        string Name { get; set; }
        Func<string> NameLazy { get; set; }
    
    	new MetaIdentifierExpression ToImmutable();
    	new MetaIdentifierExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaIdentifierExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        Func<string> Name { set; }
    }
    
    public interface MetaMemberAccessExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
        string Name { get; set; }
        Func<string> NameLazy { get; set; }
    
    	new MetaMemberAccessExpression ToImmutable();
    	new MetaMemberAccessExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaMemberAccessExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
        Func<string> Name { set; }
    }
    
    public interface MetaFunctionCallExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaFunctionCallExpression ToImmutable();
    	new MetaFunctionCallExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaFunctionCallExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaIndexerExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaIndexerExpression ToImmutable();
    	new MetaIndexerExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaIndexerExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaNewExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaClassBuilder TypeReference { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> TypeReferenceLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder> PropertyInitializers { get; }
        global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerLazyChildBuilder PropertyInitializersLazyChild { get; }
    
    	new MetaNewExpression ToImmutable();
    	new MetaNewExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNewExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> TypeReference { set; }
        
    }
    
    public interface MetaNewPropertyInitializerBuilder : global::MetaDslx.Core.Immutable.ISymbol
    {
        global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder Parent { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder> ParentLazy { get; set; }
        string PropertyName { get; set; }
        Func<string> PropertyNameLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy { get; set; }
    
    	MetaNewPropertyInitializer ToImmutable();
    	MetaNewPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNewPropertyInitializerLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder> Parent { set; }
        Func<string> PropertyName { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value { set; }
        Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property { set; }
    }
    
    public interface MetaNewCollectionExpressionBuilder : global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder TypeReference { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder> TypeReferenceLazy { get; set; }
        global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Values { get; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValuesLazyChild { get; }
    
    	new MetaNewCollectionExpression ToImmutable();
    	new MetaNewCollectionExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNewCollectionExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder> TypeReference { set; }
        
    }
    
    public interface MetaOperatorExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        string Name { get; }
        Func<string> NameLazy { get; set; }
    
    	new MetaOperatorExpression ToImmutable();
    	new MetaOperatorExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOperatorExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        Func<string> Name { set; }
    }
    
    public interface MetaUnaryExpressionBuilder : global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild { get; }
    
    	new MetaUnaryExpression ToImmutable();
    	new MetaUnaryExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaUnaryExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaOperatorExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression { set; }
    }
    
    public interface MetaUnaryPlusExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
    
    	new MetaUnaryPlusExpression ToImmutable();
    	new MetaUnaryPlusExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaUnaryPlusExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaNegateExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
    
    	new MetaNegateExpression ToImmutable();
    	new MetaNegateExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNegateExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaOnesComplementExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
    
    	new MetaOnesComplementExpression ToImmutable();
    	new MetaOnesComplementExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOnesComplementExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaNotExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
    
    	new MetaNotExpression ToImmutable();
    	new MetaNotExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNotExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaUnaryAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
    
    	new MetaUnaryAssignExpression ToImmutable();
    	new MetaUnaryAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaUnaryAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaPostIncrementAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder
    {
    
    	new MetaPostIncrementAssignExpression ToImmutable();
    	new MetaPostIncrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPostIncrementAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionLazyChildBuilder
    {
    }
    
    public interface MetaPostDecrementAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder
    {
    
    	new MetaPostDecrementAssignExpression ToImmutable();
    	new MetaPostDecrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPostDecrementAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionLazyChildBuilder
    {
    }
    
    public interface MetaPreIncrementAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder
    {
    
    	new MetaPreIncrementAssignExpression ToImmutable();
    	new MetaPreIncrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPreIncrementAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionLazyChildBuilder
    {
    }
    
    public interface MetaPreDecrementAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder
    {
    
    	new MetaPreDecrementAssignExpression ToImmutable();
    	new MetaPreDecrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaPreDecrementAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionLazyChildBuilder
    {
    }
    
    public interface MetaBinaryExpressionBuilder : global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder
    {
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild { get; }
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right { get; set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy { get; set; }
        global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild { get; }
    
    	new MetaBinaryExpression ToImmutable();
    	new MetaBinaryExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBinaryExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaOperatorExpressionLazyChildBuilder
    {
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left { set; }
        Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right { set; }
    }
    
    public interface MetaBinaryArithmeticExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
    
    	new MetaBinaryArithmeticExpression ToImmutable();
    	new MetaBinaryArithmeticExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBinaryArithmeticExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaMultiplyExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaMultiplyExpression ToImmutable();
    	new MetaMultiplyExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaMultiplyExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaDivideExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaDivideExpression ToImmutable();
    	new MetaDivideExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaDivideExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaModuloExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaModuloExpression ToImmutable();
    	new MetaModuloExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaModuloExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAddExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaAddExpression ToImmutable();
    	new MetaAddExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAddExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaSubtractExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaSubtractExpression ToImmutable();
    	new MetaSubtractExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaSubtractExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaLeftShiftExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaLeftShiftExpression ToImmutable();
    	new MetaLeftShiftExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaLeftShiftExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaRightShiftExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
    
    	new MetaRightShiftExpression ToImmutable();
    	new MetaRightShiftExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaRightShiftExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
    }
    
    public interface MetaBinaryComparisonExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
    
    	new MetaBinaryComparisonExpression ToImmutable();
    	new MetaBinaryComparisonExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBinaryComparisonExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaLessThanExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaLessThanExpression ToImmutable();
    	new MetaLessThanExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaLessThanExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaLessThanOrEqualExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaLessThanOrEqualExpression ToImmutable();
    	new MetaLessThanOrEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaLessThanOrEqualExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaGreaterThanExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaGreaterThanExpression ToImmutable();
    	new MetaGreaterThanExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaGreaterThanExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaGreaterThanOrEqualExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaGreaterThanOrEqualExpression ToImmutable();
    	new MetaGreaterThanOrEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaGreaterThanOrEqualExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaEqualExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaEqualExpression ToImmutable();
    	new MetaEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaEqualExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaNotEqualExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
    
    	new MetaNotEqualExpression ToImmutable();
    	new MetaNotEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNotEqualExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
    }
    
    public interface MetaBinaryLogicalExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
    
    	new MetaBinaryLogicalExpression ToImmutable();
    	new MetaBinaryLogicalExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaBinaryLogicalExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAndExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
    
    	new MetaAndExpression ToImmutable();
    	new MetaAndExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAndExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
    }
    
    public interface MetaOrExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
    
    	new MetaOrExpression ToImmutable();
    	new MetaOrExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOrExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
    }
    
    public interface MetaExclusiveOrExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
    
    	new MetaExclusiveOrExpression ToImmutable();
    	new MetaExclusiveOrExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaExclusiveOrExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAndAlsoExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
    
    	new MetaAndAlsoExpression ToImmutable();
    	new MetaAndAlsoExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAndAlsoExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
    }
    
    public interface MetaOrElseExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
    
    	new MetaOrElseExpression ToImmutable();
    	new MetaOrElseExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOrElseExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
    }
    
    public interface MetaNullCoalescingExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
    
    	new MetaNullCoalescingExpression ToImmutable();
    	new MetaNullCoalescingExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaNullCoalescingExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAssignmentExpressionBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
    
    	new MetaAssignmentExpression ToImmutable();
    	new MetaAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAssignmentExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder
    {
    
    	new MetaAssignExpression ToImmutable();
    	new MetaAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaArithmeticAssignmentExpressionBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder
    {
    
    	new MetaArithmeticAssignmentExpression ToImmutable();
    	new MetaArithmeticAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaArithmeticAssignmentExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaMultiplyAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaMultiplyAssignExpression ToImmutable();
    	new MetaMultiplyAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaMultiplyAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaDivideAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaDivideAssignExpression ToImmutable();
    	new MetaDivideAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaDivideAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaModuloAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaModuloAssignExpression ToImmutable();
    	new MetaModuloAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaModuloAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAddAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaAddAssignExpression ToImmutable();
    	new MetaAddAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAddAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaSubtractAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaSubtractAssignExpression ToImmutable();
    	new MetaSubtractAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaSubtractAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaLeftShiftAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaLeftShiftAssignExpression ToImmutable();
    	new MetaLeftShiftAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaLeftShiftAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaRightShiftAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
    
    	new MetaRightShiftAssignExpression ToImmutable();
    	new MetaRightShiftAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaRightShiftAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaLogicalAssignmentExpressionBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder
    {
    
    	new MetaLogicalAssignmentExpression ToImmutable();
    	new MetaLogicalAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaLogicalAssignmentExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaAndAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder
    {
    
    	new MetaAndAssignExpression ToImmutable();
    	new MetaAndAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaAndAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaExclusiveOrAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder
    {
    
    	new MetaExclusiveOrAssignExpression ToImmutable();
    	new MetaExclusiveOrAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaExclusiveOrAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionLazyChildBuilder
    {
    }
    
    public interface MetaOrAssignExpressionBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder
    {
    
    	new MetaOrAssignExpression ToImmutable();
    	new MetaOrAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model);
    }
    
    public interface MetaOrAssignExpressionLazyChildBuilder : global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionLazyChildBuilder
    {
    }
    
    internal class MetaAnnotatedElementImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotatedElement
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaAnnotatedElementImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAnnotatedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder)base.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    }
    
    internal class MetaDocumentedElementImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDocumentedElement
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
    
        internal MetaDocumentedElementImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaDocumentedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder)base.ToMutable(model);
    	}
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaNamedElementImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNamedElement
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
    
        internal MetaNamedElementImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNamedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNamedElementBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamedElementBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNamedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamedElementBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaTypedElementImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypedElement
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypedElementImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypedElementBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypedElementBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypedElementBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypedElementBuilder)base.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaType
    {
    
        internal MetaTypeImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeBuilder)base.ToMutable(model);
    	}
    }
    
    internal class MetaAnnotationImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotation
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationProperty> properties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
    
        internal MetaAnnotationImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAnnotation;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationProperty> Properties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotation.PropertiesProperty, ref properties0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaAnnotationPropertyImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotationProperty
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
    
        internal MetaAnnotationPropertyImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAnnotationProperty;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty, ref value0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaNamespaceImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNamespace
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace parent0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> usings0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel metaModel0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> namespaces0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaDeclaration> declarations0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaNamespaceImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNamespace;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNamespaceBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNamespaceBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamespaceBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty, ref parent0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> Usings
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.UsingsProperty, ref usings0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel MetaModel
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty, ref metaModel0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNamespace> Namespaces
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.NamespacesProperty, ref namespaces0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaDeclaration> Declarations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaDeclaration>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.DeclarationsProperty, ref declarations0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaDeclarationImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDeclaration
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel model0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaDeclarationImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaDeclaration;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDeclarationBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDeclarationBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDeclarationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDeclarationBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, ref namespace0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, ref model0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaModelImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModel
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string uri0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaModelImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaModel;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModelBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModelBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModelBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModelBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string Uri
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty, ref uri0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty, ref namespace0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaCollectionTypeImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaCollectionType
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaCollectionKind kind0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType innerType0;
    
        internal MetaCollectionTypeImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaCollectionType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaCollectionKind Kind
        {
            get { return this.GetValue<global::MetaDslx.Core.Immutable.MetaCollectionKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty, ref kind0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType InnerType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty, ref innerType0); }
        }
    }
    
    internal class MetaNullableTypeImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullableType
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType innerType0;
    
        internal MetaNullableTypeImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNullableType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType InnerType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty, ref innerType0); }
        }
    }
    
    internal class MetaPrimitiveTypeImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPrimitiveType
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
    
        internal MetaPrimitiveTypeImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPrimitiveType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaEnumImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEnum
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteral> enumLiterals0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> operations0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel model0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaEnumImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaEnum;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEnumBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEnumBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteral> EnumLiterals
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaEnumLiteral>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.EnumLiteralsProperty, ref enumLiterals0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> Operations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaOperation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.OperationsProperty, ref operations0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, ref namespace0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, ref model0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaEnumLiteralImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEnumLiteral
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaEnum enum0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaEnumLiteralImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaEnumLiteral;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaEnum Enum
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaEnum>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty, ref enum0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaClassImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaClass
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool isAbstract0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> superClasses0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> properties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> operations0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaConstructor constructor0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel model0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaClassImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaClass;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaClassBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaClassBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaClassBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaClassBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public bool IsAbstract
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty, ref isAbstract0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> SuperClasses
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.SuperClassesProperty, ref superClasses0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> Properties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.PropertiesProperty, ref properties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> Operations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaOperation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.OperationsProperty, ref operations0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructor Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructor>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty, ref constructor0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, ref namespace0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, ref model0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> global::MetaDslx.Core.Immutable.MetaClass.GetAllSuperClasses()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaClass_GetAllSuperClasses(this);
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> global::MetaDslx.Core.Immutable.MetaClass.GetAllProperties()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaClass_GetAllProperties(this);
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> global::MetaDslx.Core.Immutable.MetaClass.GetAllOperations()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaClass_GetAllOperations(this);
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> global::MetaDslx.Core.Immutable.MetaClass.GetAllImplementedProperties()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaClass_GetAllImplementedProperties(this);
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> global::MetaDslx.Core.Immutable.MetaClass.GetAllImplementedOperations()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaClass_GetAllImplementedOperations(this);
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaFunctionTypeImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunctionType
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaType> parameterTypes0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType returnType0;
    
        internal MetaFunctionTypeImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaFunctionType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaType.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaType> ParameterTypes
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ParameterTypesProperty, ref parameterTypes0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty, ref returnType0); }
        }
    }
    
    internal class MetaFunctionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunction
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaFunctionType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> parameters0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType returnType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type1;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaFunctionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaFunction;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaFunctionType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameter>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, ref returnType0); }
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypedElement.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type1); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaGlobalFunctionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGlobalFunction
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaFunctionType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> parameters0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType returnType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type1;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel model0;
    
        internal MetaGlobalFunctionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaGlobalFunction;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunctionBuilder global::MetaDslx.Core.Immutable.MetaFunction.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunctionBuilder global::MetaDslx.Core.Immutable.MetaFunction.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaFunctionType global::MetaDslx.Core.Immutable.MetaFunction.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameter>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, ref returnType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type1); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, ref namespace0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, ref model0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaOperationImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOperation
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType parent0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaFunctionType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> parameters0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType returnType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type1;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaOperationImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOperation;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOperationBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperationBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOperationBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperationBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunctionBuilder global::MetaDslx.Core.Immutable.MetaFunction.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunctionBuilder global::MetaDslx.Core.Immutable.MetaFunction.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty, ref parent0); }
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaFunctionType global::MetaDslx.Core.Immutable.MetaFunction.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaParameter> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameter>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, ref returnType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type1); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaConstantImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstant
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNamespace namespace0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaModel model0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaConstantImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaConstant;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstantBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstantBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclarationBuilder global::MetaDslx.Core.Immutable.MetaDeclaration.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty, ref value0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespace Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespace>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, ref namespace0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModel Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModel>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, ref model0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaConstructorImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstructor
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass parent0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializer> initializers0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaConstructorImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaConstructor;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstructorBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstructorBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstructorBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstructorBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaClass Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty, ref parent0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializer> Initializers
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyInitializer>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.InitializersProperty, ref initializers0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaParameterImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaParameter
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaFunction function0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaParameterImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaParameter;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaParameterBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaParameterBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaParameterBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaParameterBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaFunction Function
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunction>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty, ref function0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaPropertyImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaProperty
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaPropertyKind kind0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass class0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> oppositeProperties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> subsettedProperties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> subsettingProperties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> redefinedProperties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> redefiningProperties0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string documentation0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> annotations0;
    
        internal MetaPropertyImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaProperty;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElementBuilder global::MetaDslx.Core.Immutable.MetaNamedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder global::MetaDslx.Core.Immutable.MetaDocumentedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder global::MetaDslx.Core.Immutable.MetaAnnotatedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyKind Kind
        {
            get { return this.GetValue<global::MetaDslx.Core.Immutable.MetaPropertyKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty, ref kind0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClass Class
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty, ref class0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> OppositeProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.OppositePropertiesProperty, ref oppositeProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> SubsettedProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettedPropertiesProperty, ref subsettedProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> SubsettingProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettingPropertiesProperty, ref subsettingProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> RedefinedProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefinedPropertiesProperty, ref redefinedProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> RedefiningProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefiningPropertiesProperty, ref redefiningProperties0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, ref name0); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, ref documentation0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotation> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotation>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
    
        
        global::MetaDslx.Core.Immutable.IImmutableModelList<string> global::MetaDslx.Core.Immutable.MetaDocumentedElement.GetDocumentationLines()
        {
            return global::MetaDslx.Core.Immutable.MetaImplementationProvider.Implementation.MetaDocumentedElement_GetDocumentationLines(this);
        }
    }
    
    internal class MetaPropertyInitializerImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPropertyInitializer
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaConstructor constructor0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string propertyName0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass propertyContext0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaProperty property0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
    
        internal MetaPropertyInitializerImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder)base.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructor Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructor>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, ref constructor0); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, ref propertyName0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClass PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, ref propertyContext0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaProperty Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, ref property0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, ref value0); }
        }
    }
    
    internal class MetaSynthetizedPropertyInitializerImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializer
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaConstructor constructor0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string propertyName0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass propertyContext0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaProperty property0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
    
        internal MetaSynthetizedPropertyInitializerImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaSynthetizedPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder global::MetaDslx.Core.Immutable.MetaPropertyInitializer.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder global::MetaDslx.Core.Immutable.MetaPropertyInitializer.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructor Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructor>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, ref constructor0); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, ref propertyName0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClass PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, ref propertyContext0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaProperty Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, ref property0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, ref value0); }
        }
    }
    
    internal class MetaInheritedPropertyInitializerImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string objectName0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaProperty object0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaConstructor constructor0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string propertyName0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass propertyContext0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaProperty property0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
    
        internal MetaInheritedPropertyInitializerImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaInheritedPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder global::MetaDslx.Core.Immutable.MetaPropertyInitializer.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder global::MetaDslx.Core.Immutable.MetaPropertyInitializer.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string ObjectName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty, ref objectName0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaProperty Object
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty, ref object0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructor Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructor>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, ref constructor0); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, ref propertyName0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClass PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, ref propertyContext0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaProperty Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, ref property0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, ref value0); }
        }
    }
    
    internal class MetaExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBracketExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBracketExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBracketExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBracketExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBoundExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBoundExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBoundExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBoundExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaThisExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaThisExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaThisExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaThisExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNullExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNullExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNullExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeConversionExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeConversionExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypeConversionExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypeConversionExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeAsExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeAsExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypeAsExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypeAsExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder global::MetaDslx.Core.Immutable.MetaTypeConversionExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder global::MetaDslx.Core.Immutable.MetaTypeConversionExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeCastExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeCastExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypeCastExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypeCastExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder global::MetaDslx.Core.Immutable.MetaTypeConversionExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder global::MetaDslx.Core.Immutable.MetaTypeConversionExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeCheckExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeCheckExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypeCheckExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypeCheckExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaTypeOfExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeOfExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaTypeOfExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaTypeOfExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaConditionalExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConditionalExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression condition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType balancedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression then0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression else0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaConditionalExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaConditionalExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Condition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty, ref condition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType BalancedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty, ref balancedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Then
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty, ref then0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Else
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty, ref else0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaConstantExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstantExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private object value0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaConstantExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaConstantExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public object Value
        {
            get { return this.GetReference<object>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty, ref value0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaIdentifierExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaIdentifierExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaIdentifierExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaIdentifierExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaMemberAccessExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMemberAccessExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaMemberAccessExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaMemberAccessExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaFunctionCallExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunctionCallExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaFunctionCallExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaFunctionCallExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaIndexerExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaIndexerExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaIndexerExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaIndexerExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNewExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaClass typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer> propertyInitializers0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNewExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNewExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaClass TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClass>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer> PropertyInitializers
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.PropertyInitializersProperty, ref propertyInitializers0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNewPropertyInitializerImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaNewExpression parent0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string propertyName0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression value0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaProperty property0;
    
        internal MetaNewPropertyInitializerImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNewPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder)base.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNewExpression Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNewExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty, ref parent0); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty, ref propertyName0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty, ref value0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaProperty Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaProperty>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty, ref property0); }
        }
    }
    
    internal class MetaNewCollectionExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewCollectionExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaCollectionType typeReference0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> values0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNewCollectionExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNewCollectionExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaCollectionType TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaCollectionType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty, ref typeReference0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Values
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.ValuesProperty, ref values0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaOperatorExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOperatorExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaOperatorExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOperatorExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaUnaryExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaUnaryExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaUnaryExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaUnaryPlusExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryPlusExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaUnaryPlusExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaUnaryPlusExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNegateExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNegateExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNegateExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNegateExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNegateExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNegateExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNegateExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNegateExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaOnesComplementExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOnesComplementExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaOnesComplementExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOnesComplementExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNotExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNotExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNotExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNotExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNotExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNotExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaUnaryAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaUnaryAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaUnaryAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaPostIncrementAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaPostIncrementAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPostIncrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaPostDecrementAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaPostDecrementAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPostDecrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaPreIncrementAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaPreIncrementAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPreIncrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaPreDecrementAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression expression0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaPreDecrementAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaPreDecrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaUnaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, ref expression0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBinaryExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBinaryExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBinaryExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBinaryArithmeticExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBinaryArithmeticExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBinaryArithmeticExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaMultiplyExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMultiplyExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaMultiplyExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaMultiplyExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaDivideExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDivideExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaDivideExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaDivideExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDivideExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDivideExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaModuloExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModuloExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaModuloExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaModuloExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModuloExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModuloExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAddExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAddExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAddExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAddExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAddExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAddExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaSubtractExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSubtractExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaSubtractExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaSubtractExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaLeftShiftExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLeftShiftExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaLeftShiftExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaLeftShiftExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaRightShiftExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaRightShiftExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaRightShiftExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaRightShiftExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBinaryComparisonExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBinaryComparisonExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBinaryComparisonExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaLessThanExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLessThanExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaLessThanExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaLessThanExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaLessThanOrEqualExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaLessThanOrEqualExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaLessThanOrEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaGreaterThanExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGreaterThanExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaGreaterThanExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaGreaterThanExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaGreaterThanOrEqualExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaGreaterThanOrEqualExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaGreaterThanOrEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaEqualExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEqualExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaEqualExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEqualExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEqualExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEqualExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNotEqualExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNotEqualExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNotEqualExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNotEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNotEqualExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotEqualExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNotEqualExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotEqualExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaBinaryLogicalExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaBinaryLogicalExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaBinaryLogicalExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAndExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAndExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAndExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaOrExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaOrExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOrExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaExclusiveOrExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaExclusiveOrExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAndAlsoExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndAlsoExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAndAlsoExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAndAlsoExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaOrElseExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrElseExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaOrElseExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOrElseExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrElseExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrElseExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrElseExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrElseExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaNullCoalescingExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullCoalescingExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaNullCoalescingExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaNullCoalescingExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAssignmentExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAssignmentExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAssignmentExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaArithmeticAssignmentExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaArithmeticAssignmentExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaArithmeticAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaMultiplyAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaMultiplyAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaMultiplyAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaDivideAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDivideAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaDivideAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaDivideAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaModuloAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModuloAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaModuloAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaModuloAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAddAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAddAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAddAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAddAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAddAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAddAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaSubtractAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSubtractAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaSubtractAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaSubtractAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaLeftShiftAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaLeftShiftAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaLeftShiftAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaRightShiftAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaRightShiftAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaRightShiftAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaLogicalAssignmentExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaLogicalAssignmentExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaLogicalAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAndAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaAndAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaAndAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaExclusiveOrAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaExclusiveOrAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaOrAssignExpressionImpl : global::MetaDslx.Core.Immutable.ImmutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrAssignExpression
    {
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression left0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaExpression right0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private string name0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool uniqueDefinition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> arguments0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.BindingInfo definitions0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.ISymbol definition0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private bool noTypeError0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType expectedType0;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private global::MetaDslx.Core.Immutable.MetaType type0;
    
        internal MetaOrAssignExpressionImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.ImmutableModel model)
    		: base(id, model)
        {
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null; /*global::MetaDslx.Core.MetaInstance.MetaOrAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrAssignExpressionBuilder ToMutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrAssignExpressionBuilder)base.ToMutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrAssignExpressionBuilder ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrAssignExpressionBuilder)base.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder global::MetaDslx.Core.Immutable.MetaAssignmentExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder global::MetaDslx.Core.Immutable.MetaBinaryExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder global::MetaDslx.Core.Immutable.MetaOperatorExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder global::MetaDslx.Core.Immutable.MetaBoundExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpressionBuilder global::MetaDslx.Core.Immutable.MetaExpression.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable()
    	{
    		return this.ToMutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElementBuilder global::MetaDslx.Core.Immutable.MetaTypedElement.ToMutable(global::MetaDslx.Core.Immutable.MutableModel model)
    	{
    		return this.ToMutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, ref left0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpression Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, ref right0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, ref name0); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, ref uniqueDefinition0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaExpression> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpression>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, ref definitions0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, ref definition0); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, ref noTypeError0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, ref expectedType0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaType Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaType>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, ref type0); }
        }
    }
    
    internal class MetaAnnotatedElementBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaAnnotatedElementBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAnnotatedElement(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotatedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotatedElement ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotatedElement)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotatedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotatedElement)base.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaAnnotatedElementLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAnnotatedElementLazyChildBuilder
    {
        internal MetaAnnotatedElementLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
    }
    
    internal class MetaDocumentedElementBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder
    {
    
        internal MetaDocumentedElementBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaDocumentedElement(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDocumentedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDocumentedElement ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDocumentedElement)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDocumentedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDocumentedElement)base.ToImmutable(model);
    	}
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    public class MetaDocumentedElementLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaDocumentedElementLazyChildBuilder
    {
        internal MetaDocumentedElementLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    internal class MetaNamedElementBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNamedElementBuilder
    {
    
        internal MetaNamedElementBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNamedElement(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNamedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNamedElement ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamedElement)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNamedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamedElement)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    public class MetaNamedElementLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNamedElementLazyChildBuilder
    {
        internal MetaNamedElementLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    internal class MetaTypedElementBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypedElementBuilder
    {
    
        internal MetaTypedElementBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypedElement(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypedElement;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypedElement ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypedElement)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypedElement ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypedElement)base.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypedElementLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder
    {
        internal MetaTypedElementLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeBuilder
    {
    
        internal MetaTypeBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaType(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaType ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaType)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaType)base.ToImmutable(model);
    	}
    }
    
    public class MetaTypeLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeLazyChildBuilder
    {
        internal MetaTypeLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
    }
    
    internal class MetaAnnotationBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotationBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder> properties0;
    
        internal MetaAnnotationBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotation.PropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAnnotation(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotation;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotation ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotation)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotation ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotation)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder> Properties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotation.PropertiesProperty, ref properties0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationPropertyLazyChildBuilder PropertiesLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationPropertyLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotation.PropertiesProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    public class MetaAnnotationLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder
    {
        internal MetaAnnotationLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    internal class MetaAnnotationPropertyBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder
    {
    
        internal MetaAnnotationPropertyBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAnnotationProperty(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAnnotationProperty;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationProperty ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationProperty)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAnnotationProperty ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAnnotationProperty)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    public class MetaAnnotationPropertyLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAnnotationPropertyLazyChildBuilder
    {
        internal MetaAnnotationPropertyLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotationProperty.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    internal class MetaNamespaceBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNamespaceBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> usings0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> namespaces0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaDeclarationBuilder> declarations0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaNamespaceBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.UsingsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.NamespacesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.DeclarationsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNamespace(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNamespace;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNamespace ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamespace)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNamespace ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNamespace)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> ParentLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Usings
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.UsingsProperty, ref usings0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder MetaModel
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> MetaModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaModelLazyChildBuilder MetaModelLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaModelLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespaces
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.NamespacesProperty, ref namespaces0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaNamespaceLazyChildBuilder NamespacesLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaNamespaceLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.NamespacesProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaDeclarationBuilder> Declarations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaDeclarationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.DeclarationsProperty, ref declarations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder DeclarationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.DeclarationsProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaNamespaceLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNamespaceLazyChildBuilder
    {
        internal MetaNamespaceLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Parent
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.ParentProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> MetaModel
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamespace.MetaModelProperty, value); }
        }
        
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaDeclarationBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDeclarationBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaDeclarationBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaDeclaration(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDeclaration;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDeclaration ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDeclaration)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDeclaration ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDeclaration)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaDeclarationLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaDeclarationLazyChildBuilder
    {
        internal MetaDeclarationLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaModelBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModelBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaModelBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaModel(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModel;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModel ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModel)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModel ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModel)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string Uri
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty, value); }
        }
        
        public Func<string> UriLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaModelLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaModelLazyChildBuilder
    {
        internal MetaModelLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Uri
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.UriProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaModel.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaCollectionTypeBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder
    {
    
        internal MetaCollectionTypeBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaCollectionType(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaCollectionType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaCollectionType ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaCollectionType)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaCollectionType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaCollectionType)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaCollectionKind Kind
        {
            get { return this.GetValue<global::MetaDslx.Core.Immutable.MetaCollectionKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty); }
            set { this.SetValue<global::MetaDslx.Core.Immutable.MetaCollectionKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaCollectionKind> KindLazy
        {
            get { return this.GetLazyValue<global::MetaDslx.Core.Immutable.MetaCollectionKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder InnerType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty, value); }
        }
    }
    
    public class MetaCollectionTypeLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaCollectionTypeLazyChildBuilder
    {
        internal MetaCollectionTypeLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaCollectionKind> Kind
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.KindProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty, value); }
        }
    }
    
    internal class MetaNullableTypeBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullableTypeBuilder
    {
    
        internal MetaNullableTypeBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNullableType(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullableType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullableType ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullableType)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullableType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullableType)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder InnerType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty, value); }
        }
    }
    
    public class MetaNullableTypeLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNullableTypeLazyChildBuilder
    {
        internal MetaNullableTypeLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> InnerType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNullableType.InnerTypeProperty, value); }
        }
    }
    
    internal class MetaPrimitiveTypeBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder
    {
    
        internal MetaPrimitiveTypeBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPrimitiveType(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPrimitiveType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPrimitiveType ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPrimitiveType)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPrimitiveType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPrimitiveType)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    public class MetaPrimitiveTypeLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPrimitiveTypeLazyChildBuilder
    {
        internal MetaPrimitiveTypeLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    }
    
    internal class MetaEnumBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEnumBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder> enumLiterals0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> operations0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaEnumBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.EnumLiteralsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.OperationsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaEnum(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEnum;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEnum ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnum)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEnum ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnum)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder> EnumLiterals
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.EnumLiteralsProperty, ref enumLiterals0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaEnumLiteralLazyChildBuilder EnumLiteralsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaEnumLiteralLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.EnumLiteralsProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> Operations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaOperationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.OperationsProperty, ref operations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilder OperationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnum.OperationsProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaEnumLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaEnumLazyChildBuilder
    {
        internal MetaEnumLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaEnumLiteralBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder
    {
    
        internal MetaEnumLiteralBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaEnumLiteral(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEnumLiteral;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEnumLiteral ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumLiteral)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEnumLiteral ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEnumLiteral)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaEnumBuilder Enum
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaEnumBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaEnumBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaEnumBuilder> EnumLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaEnumBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaEnumLiteralLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaEnumLiteralLazyChildBuilder
    {
        internal MetaEnumLiteralLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaEnumBuilder> Enum
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaEnumLiteral.EnumProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaClassBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaClassBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaClassBuilder> superClasses0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> properties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> operations0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaClassBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.SuperClassesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.PropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.OperationsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaClass(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaClass;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaClass ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaClass)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaClass ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaClass)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public bool IsAbstract
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty); }
            set { this.SetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty, value); }
        }
        
        public Func<bool> IsAbstractLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaClassBuilder> SuperClasses
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.SuperClassesProperty, ref superClasses0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Properties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.PropertiesProperty, ref properties0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaPropertyLazyChildBuilder PropertiesLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaPropertyLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.PropertiesProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaOperationBuilder> Operations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaOperationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.OperationsProperty, ref operations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilder OperationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.OperationsProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaConstructorLazyChildBuilder ConstructorLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaConstructorLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaClassLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaClassLazyChildBuilder
    {
        internal MetaClassLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> IsAbstract
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.IsAbstractProperty, () => value); }
        }
        
        
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaClass.ConstructorProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaFunctionTypeBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaTypeBuilder> parameterTypes0;
    
        internal MetaFunctionTypeBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ParameterTypesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaFunctionType(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunctionType;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionType ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionType)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionType ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionType)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaType global::MetaDslx.Core.Immutable.MetaTypeBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ParameterTypes
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ParameterTypesProperty, ref parameterTypes0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty, value); }
        }
    }
    
    public class MetaFunctionTypeLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaFunctionTypeLazyChildBuilder
    {
        internal MetaFunctionTypeLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionType.ReturnTypeProperty, value); }
        }
    }
    
    internal class MetaFunctionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunctionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> parameters0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaFunctionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaFunction(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunction;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunction ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunction)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunction ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunction)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameterBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilder ParametersLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaTypeBuilder global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaFunctionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaFunctionLazyChildBuilder
    {
        internal MetaFunctionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> global::MetaDslx.Core.Immutable.MetaTypedElementLazyChildBuilder.Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaGlobalFunctionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> parameters0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaGlobalFunctionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaGlobalFunction(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGlobalFunction;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGlobalFunction ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGlobalFunction)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGlobalFunction ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGlobalFunction)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunction global::MetaDslx.Core.Immutable.MetaFunctionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunction global::MetaDslx.Core.Immutable.MetaFunctionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder global::MetaDslx.Core.Immutable.MetaFunctionBuilder.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> global::MetaDslx.Core.Immutable.MetaFunctionBuilder.TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameterBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilder ParametersLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    }
    
    public class MetaGlobalFunctionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaGlobalFunctionLazyChildBuilder
    {
        internal MetaGlobalFunctionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> global::MetaDslx.Core.Immutable.MetaFunctionLazyChildBuilder.Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    }
    
    internal class MetaOperationBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOperationBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> parameters0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaOperationBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOperation(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOperation;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOperation ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperation)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOperation ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperation)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunction global::MetaDslx.Core.Immutable.MetaFunctionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaFunction global::MetaDslx.Core.Immutable.MetaFunctionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ParentLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty, value); }
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder global::MetaDslx.Core.Immutable.MetaFunctionBuilder.Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> global::MetaDslx.Core.Immutable.MetaFunctionBuilder.TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaParameterBuilder> Parameters
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaParameterBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty, ref parameters0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilder ParametersLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ParametersProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ReturnType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaOperationLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOperationLazyChildBuilder
    {
        internal MetaOperationLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Parent
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperation.ParentProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Func<global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder> global::MetaDslx.Core.Immutable.MetaFunctionLazyChildBuilder.Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.TypeProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ReturnType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunction.ReturnTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaConstantBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstantBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaConstantBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaConstant(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstant;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstant ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstant)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstant ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstant)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDeclaration global::MetaDslx.Core.Immutable.MetaDeclarationBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaNamespaceBuilder Namespace
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> NamespaceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaModelBuilder Model
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> ModelLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaModelBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaConstantLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaConstantLazyChildBuilder
    {
        internal MetaConstantLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstant.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNamespaceBuilder> Namespace
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.NamespaceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaModelBuilder> Model
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDeclaration.ModelProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaConstructorBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstructorBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder> initializers0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaConstructorBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.InitializersProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaConstructor(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstructor;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstructor ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstructor)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstructor ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstructor)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> ParentLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder> Initializers
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.InitializersProperty, ref initializers0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilder InitializersLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.InitializersProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaConstructorLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaConstructorLazyChildBuilder
    {
        internal MetaConstructorLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> Parent
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstructor.ParentProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
    }
    
    internal class MetaParameterBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaParameterBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaParameterBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaParameter(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaParameter;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaParameter ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaParameter)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaParameter ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaParameter)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaFunctionBuilder Function
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaFunctionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaFunctionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaFunctionBuilder> FunctionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaFunctionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty, value); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaParameterLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaParameterLazyChildBuilder
    {
        internal MetaParameterLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaFunctionBuilder> Function
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaParameter.FunctionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
    }
    
    internal class MetaPropertyBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPropertyBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> oppositeProperties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> subsettedProperties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> subsettingProperties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> redefinedProperties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> redefiningProperties0;
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> annotations0;
    
        internal MetaPropertyBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.OppositePropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettedPropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettingPropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefinedPropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefiningPropertiesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaProperty(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaProperty;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaProperty ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaProperty)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaProperty ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaProperty)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaNamedElement global::MetaDslx.Core.Immutable.MetaNamedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaDocumentedElement global::MetaDslx.Core.Immutable.MetaDocumentedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAnnotatedElement global::MetaDslx.Core.Immutable.MetaAnnotatedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyKind Kind
        {
            get { return this.GetValue<global::MetaDslx.Core.Immutable.MetaPropertyKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty); }
            set { this.SetValue<global::MetaDslx.Core.Immutable.MetaPropertyKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyKind> KindLazy
        {
            get { return this.GetLazyValue<global::MetaDslx.Core.Immutable.MetaPropertyKind>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder Class
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> ClassLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> OppositeProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.OppositePropertiesProperty, ref oppositeProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> SubsettedProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettedPropertiesProperty, ref subsettedProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> SubsettingProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.SubsettingPropertiesProperty, ref subsettingProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> RedefinedProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefinedPropertiesProperty, ref redefinedProperties0); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> RedefiningProperties
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.RedefiningPropertiesProperty, ref redefiningProperties0); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
    
        
        public string Documentation
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        public Func<string> DocumentationLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder> Annotations
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaAnnotationBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty, ref annotations0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilder AnnotationsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaAnnotationLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaAnnotatedElement.AnnotationsProperty); }
        }
    }
    
    public class MetaPropertyLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPropertyLazyChildBuilder
    {
        internal MetaPropertyLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyKind> Kind
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.KindProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> Class
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaProperty.ClassProperty, value); }
        }
        
        
        
        
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Documentation
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaDocumentedElement.DocumentationProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
    }
    
    internal class MetaPropertyInitializerBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder
    {
    
        internal MetaPropertyInitializerBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPropertyInitializer(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyInitializer ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyInitializer)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPropertyInitializer)base.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        public Func<string> PropertyNameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContextLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
        }
    }
    
    public class MetaPropertyInitializerLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPropertyInitializerLazyChildBuilder
    {
        internal MetaPropertyInitializerLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> PropertyName
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContext
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
    }
    
    internal class MetaSynthetizedPropertyInitializerBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder
    {
    
        internal MetaSynthetizedPropertyInitializerBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaSynthetizedPropertyInitializer(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSynthetizedPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializer ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializer)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializer)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializer global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializer global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        public Func<string> PropertyNameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContextLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
        }
    }
    
    public class MetaSynthetizedPropertyInitializerLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerLazyChildBuilder
    {
        internal MetaSynthetizedPropertyInitializerLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> PropertyName
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContext
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
    }
    
    internal class MetaInheritedPropertyInitializerBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder
    {
    
        internal MetaInheritedPropertyInitializerBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaInheritedPropertyInitializer(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaInheritedPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializer)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializer global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaPropertyInitializer global::MetaDslx.Core.Immutable.MetaPropertyInitializerBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string ObjectName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty, value); }
        }
        
        public Func<string> ObjectNameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyBuilder Object
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> ObjectLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaConstructorBuilder Constructor
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> ConstructorLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaConstructorBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        public Func<string> PropertyNameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder PropertyContext
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContextLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty); }
        }
    }
    
    public class MetaInheritedPropertyInitializerLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerLazyChildBuilder
    {
        internal MetaInheritedPropertyInitializerLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> ObjectName
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectNameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Object
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaInheritedPropertyInitializer.ObjectProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaConstructorBuilder> Constructor
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ConstructorProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> PropertyName
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyNameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> PropertyContext
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyContextProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.PropertyProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaPropertyInitializer.ValueProperty, value); }
        }
    }
    
    internal class MetaExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExpressionBuilder
    {
    
        internal MetaExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder
    {
        internal MetaExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBracketExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder
    {
    
        internal MetaBracketExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBracketExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBracketExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBracketExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBracketExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBracketExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBracketExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBracketExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBracketExpressionLazyChildBuilder
    {
        internal MetaBracketExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBracketExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBoundExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaBoundExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBoundExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBoundExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBoundExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBoundExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBoundExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBoundExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBoundExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBoundExpressionLazyChildBuilder
    {
        internal MetaBoundExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaThisExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaThisExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaThisExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaThisExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaThisExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaThisExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaThisExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaThisExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaThisExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaThisExpressionLazyChildBuilder
    {
        internal MetaThisExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNullExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder
    {
    
        internal MetaNullExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNullExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNullExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNullExpressionLazyChildBuilder
    {
        internal MetaNullExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeConversionExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder
    {
    
        internal MetaTypeConversionExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypeConversionExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeConversionExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeConversionExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeConversionExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeConversionExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeConversionExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypeConversionExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionLazyChildBuilder
    {
        internal MetaTypeConversionExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeAsExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder
    {
    
        internal MetaTypeAsExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypeAsExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeAsExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeAsExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeAsExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeAsExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeAsExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpression global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpression global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypeAsExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeAsExpressionLazyChildBuilder
    {
        internal MetaTypeAsExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeCastExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder
    {
    
        internal MetaTypeCastExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypeCastExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeCastExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCastExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCastExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCastExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCastExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpression global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypeConversionExpression global::MetaDslx.Core.Immutable.MetaTypeConversionExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypeCastExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeCastExpressionLazyChildBuilder
    {
        internal MetaTypeCastExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.TypeReferenceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeConversionExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeCheckExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder
    {
    
        internal MetaTypeCheckExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypeCheckExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeCheckExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCheckExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCheckExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeCheckExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeCheckExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypeCheckExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionLazyChildBuilder
    {
        internal MetaTypeCheckExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.TypeReferenceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeCheckExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaTypeOfExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder
    {
    
        internal MetaTypeOfExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaTypeOfExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaTypeOfExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaTypeOfExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeOfExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaTypeOfExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaTypeOfExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaTypeOfExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaTypeOfExpressionLazyChildBuilder
    {
        internal MetaTypeOfExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypeOfExpression.TypeReferenceProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaConditionalExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder
    {
    
        internal MetaConditionalExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaConditionalExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConditionalExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConditionalExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConditionalExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConditionalExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConditionalExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Condition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ConditionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ConditionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder BalancedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> BalancedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Then
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ThenLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ThenLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Else
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ElseLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ElseLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaConditionalExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaConditionalExpressionLazyChildBuilder
    {
        internal MetaConditionalExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Condition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ConditionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> BalancedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.BalancedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Then
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ThenProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Else
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConditionalExpression.ElseProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaConstantExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder
    {
    
        internal MetaConstantExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaConstantExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaConstantExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaConstantExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaConstantExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaConstantExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public object Value
        {
            get { return this.GetReference<object>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty); }
            set { this.SetReference<object>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty, value); }
        }
        
        public Func<object> ValueLazy
        {
            get { return this.GetLazyReference<object>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaConstantExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaConstantExpressionLazyChildBuilder
    {
        internal MetaConstantExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<object> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaConstantExpression.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaIdentifierExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaIdentifierExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaIdentifierExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaIdentifierExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaIdentifierExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIdentifierExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaIdentifierExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIdentifierExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaIdentifierExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaIdentifierExpressionLazyChildBuilder
    {
        internal MetaIdentifierExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIdentifierExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaMemberAccessExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaMemberAccessExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaMemberAccessExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMemberAccessExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMemberAccessExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMemberAccessExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMemberAccessExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMemberAccessExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty, value); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaMemberAccessExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionLazyChildBuilder
    {
        internal MetaMemberAccessExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaMemberAccessExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaFunctionCallExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaFunctionCallExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaFunctionCallExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaFunctionCallExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionCallExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionCallExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaFunctionCallExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaFunctionCallExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaFunctionCallExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionLazyChildBuilder
    {
        internal MetaFunctionCallExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaIndexerExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaIndexerExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaIndexerExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaIndexerExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaIndexerExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaIndexerExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIndexerExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaIndexerExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaIndexerExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaIndexerExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaIndexerExpressionLazyChildBuilder
    {
        internal MetaIndexerExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNewExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder> propertyInitializers0;
    
        internal MetaNewExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.PropertyInitializersProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNewExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaClassBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaClassBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder> PropertyInitializers
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.PropertyInitializersProperty, ref propertyInitializers0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerLazyChildBuilder PropertyInitializersLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.PropertyInitializersProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNewExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNewExpressionLazyChildBuilder
    {
        internal MetaNewExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaClassBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewExpression.TypeReferenceProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNewPropertyInitializerBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder
    {
    
        internal MetaNewPropertyInitializerBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNewPropertyInitializer(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewPropertyInitializer;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewPropertyInitializer)base.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder Parent
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder> ParentLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty, value); }
        }
    
        
        public string PropertyName
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty); }
            set { this.SetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty, value); }
        }
        
        public Func<string> PropertyNameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Value
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ValueLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValueLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaPropertyBuilder Property
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> PropertyLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaPropertyBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty, value); }
        }
    }
    
    public class MetaNewPropertyInitializerLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerLazyChildBuilder
    {
        internal MetaNewPropertyInitializerLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder> Parent
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ParentProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> PropertyName
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyNameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Value
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.ValueProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaPropertyBuilder> Property
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewPropertyInitializer.PropertyProperty, value); }
        }
    }
    
    internal class MetaNewCollectionExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> values0;
    
        internal MetaNewCollectionExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.ValuesProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNewCollectionExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNewCollectionExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNewCollectionExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewCollectionExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNewCollectionExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNewCollectionExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder TypeReference
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder> TypeReferenceLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Values
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.ValuesProperty, ref values0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ValuesLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.ValuesProperty); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNewCollectionExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNewCollectionExpressionLazyChildBuilder
    {
        internal MetaNewCollectionExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder> TypeReference
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNewCollectionExpression.TypeReferenceProperty, value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaOperatorExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaOperatorExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOperatorExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOperatorExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOperatorExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperatorExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOperatorExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOperatorExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaOperatorExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOperatorExpressionLazyChildBuilder
    {
        internal MetaOperatorExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaUnaryExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaUnaryExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaUnaryExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaUnaryExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaUnaryExpressionLazyChildBuilder
    {
        internal MetaUnaryExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaUnaryPlusExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaUnaryPlusExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaUnaryPlusExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryPlusExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryPlusExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryPlusExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryPlusExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryPlusExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaUnaryPlusExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaUnaryPlusExpressionLazyChildBuilder
    {
        internal MetaUnaryPlusExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNegateExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNegateExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaNegateExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNegateExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNegateExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNegateExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNegateExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNegateExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNegateExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNegateExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNegateExpressionLazyChildBuilder
    {
        internal MetaNegateExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaOnesComplementExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaOnesComplementExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOnesComplementExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOnesComplementExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOnesComplementExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOnesComplementExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOnesComplementExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOnesComplementExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaOnesComplementExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOnesComplementExpressionLazyChildBuilder
    {
        internal MetaOnesComplementExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNotExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNotExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaNotExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNotExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNotExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNotExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNotExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNotExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNotExpressionLazyChildBuilder
    {
        internal MetaNotExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaUnaryAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaUnaryAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaUnaryAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaUnaryAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaUnaryAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionLazyChildBuilder
    {
        internal MetaUnaryAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaPostIncrementAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaPostIncrementAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPostIncrementAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPostIncrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaPostIncrementAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPostIncrementAssignExpressionLazyChildBuilder
    {
        internal MetaPostIncrementAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaPostDecrementAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaPostDecrementAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPostDecrementAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPostDecrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaPostDecrementAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPostDecrementAssignExpressionLazyChildBuilder
    {
        internal MetaPostDecrementAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaPreIncrementAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaPreIncrementAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPreIncrementAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPreIncrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaPreIncrementAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPreIncrementAssignExpressionLazyChildBuilder
    {
        internal MetaPreIncrementAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaPreDecrementAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaPreDecrementAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaPreDecrementAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaPreDecrementAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryAssignExpression global::MetaDslx.Core.Immutable.MetaUnaryAssignExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaUnaryExpression global::MetaDslx.Core.Immutable.MetaUnaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Expression
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> ExpressionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ExpressionLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaPreDecrementAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaPreDecrementAssignExpressionLazyChildBuilder
    {
        internal MetaPreDecrementAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Expression
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaUnaryExpression.ExpressionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBinaryExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaBinaryExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBinaryExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBinaryExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBinaryExpressionLazyChildBuilder
    {
        internal MetaBinaryExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBinaryArithmeticExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaBinaryArithmeticExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBinaryArithmeticExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryArithmeticExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBinaryArithmeticExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionLazyChildBuilder
    {
        internal MetaBinaryArithmeticExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaMultiplyExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMultiplyExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaMultiplyExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaMultiplyExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMultiplyExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaMultiplyExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaMultiplyExpressionLazyChildBuilder
    {
        internal MetaMultiplyExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaDivideExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDivideExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaDivideExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaDivideExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDivideExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDivideExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDivideExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaDivideExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaDivideExpressionLazyChildBuilder
    {
        internal MetaDivideExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaModuloExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModuloExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaModuloExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaModuloExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModuloExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModuloExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModuloExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaModuloExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaModuloExpressionLazyChildBuilder
    {
        internal MetaModuloExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAddExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAddExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAddExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAddExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAddExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAddExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAddExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAddExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAddExpressionLazyChildBuilder
    {
        internal MetaAddExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaSubtractExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSubtractExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaSubtractExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaSubtractExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSubtractExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaSubtractExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaSubtractExpressionLazyChildBuilder
    {
        internal MetaSubtractExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaLeftShiftExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaLeftShiftExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaLeftShiftExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLeftShiftExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaLeftShiftExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaLeftShiftExpressionLazyChildBuilder
    {
        internal MetaLeftShiftExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaRightShiftExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaRightShiftExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaRightShiftExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaRightShiftExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaRightShiftExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpression global::MetaDslx.Core.Immutable.MetaBinaryArithmeticExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaRightShiftExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaRightShiftExpressionLazyChildBuilder
    {
        internal MetaRightShiftExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBinaryComparisonExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaBinaryComparisonExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBinaryComparisonExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryComparisonExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBinaryComparisonExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionLazyChildBuilder
    {
        internal MetaBinaryComparisonExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaLessThanExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLessThanExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaLessThanExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaLessThanExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLessThanExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaLessThanExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaLessThanExpressionLazyChildBuilder
    {
        internal MetaLessThanExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaLessThanOrEqualExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaLessThanOrEqualExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaLessThanOrEqualExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLessThanOrEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaLessThanOrEqualExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaLessThanOrEqualExpressionLazyChildBuilder
    {
        internal MetaLessThanOrEqualExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaGreaterThanExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaGreaterThanExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaGreaterThanExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGreaterThanExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaGreaterThanExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaGreaterThanExpressionLazyChildBuilder
    {
        internal MetaGreaterThanExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaGreaterThanOrEqualExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaGreaterThanOrEqualExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaGreaterThanOrEqualExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaGreaterThanOrEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaGreaterThanOrEqualExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaGreaterThanOrEqualExpressionLazyChildBuilder
    {
        internal MetaGreaterThanOrEqualExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaEqualExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaEqualExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaEqualExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaEqualExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaEqualExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEqualExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaEqualExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaEqualExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaEqualExpressionLazyChildBuilder
    {
        internal MetaEqualExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNotEqualExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNotEqualExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaNotEqualExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNotEqualExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNotEqualExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNotEqualExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotEqualExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNotEqualExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNotEqualExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpression global::MetaDslx.Core.Immutable.MetaBinaryComparisonExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNotEqualExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNotEqualExpressionLazyChildBuilder
    {
        internal MetaNotEqualExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaBinaryLogicalExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaBinaryLogicalExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaBinaryLogicalExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaBinaryLogicalExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaBinaryLogicalExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionLazyChildBuilder
    {
        internal MetaBinaryLogicalExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAndExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAndExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAndExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAndExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAndExpressionLazyChildBuilder
    {
        internal MetaAndExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaOrExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaOrExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOrExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaOrExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOrExpressionLazyChildBuilder
    {
        internal MetaOrExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaExclusiveOrExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaExclusiveOrExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaExclusiveOrExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaExclusiveOrExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrExpressionLazyChildBuilder
    {
        internal MetaExclusiveOrExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAndAlsoExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAndAlsoExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAndAlsoExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndAlsoExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndAlsoExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAlsoExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndAlsoExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAlsoExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAndAlsoExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAndAlsoExpressionLazyChildBuilder
    {
        internal MetaAndAlsoExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaOrElseExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrElseExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaOrElseExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOrElseExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrElseExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrElseExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrElseExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrElseExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrElseExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpression global::MetaDslx.Core.Immutable.MetaBinaryLogicalExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaOrElseExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOrElseExpressionLazyChildBuilder
    {
        internal MetaOrElseExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaNullCoalescingExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaNullCoalescingExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaNullCoalescingExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaNullCoalescingExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaNullCoalescingExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullCoalescingExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaNullCoalescingExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaNullCoalescingExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaNullCoalescingExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaNullCoalescingExpressionLazyChildBuilder
    {
        internal MetaNullCoalescingExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAssignmentExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAssignmentExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAssignmentExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAssignmentExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignmentExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignmentExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAssignmentExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAssignmentExpressionLazyChildBuilder
    {
        internal MetaAssignmentExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAssignExpressionLazyChildBuilder
    {
        internal MetaAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaArithmeticAssignmentExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaArithmeticAssignmentExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaArithmeticAssignmentExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaArithmeticAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaArithmeticAssignmentExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionLazyChildBuilder
    {
        internal MetaArithmeticAssignmentExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaMultiplyAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaMultiplyAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaMultiplyAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaMultiplyAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaMultiplyAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaMultiplyAssignExpressionLazyChildBuilder
    {
        internal MetaMultiplyAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaDivideAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaDivideAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaDivideAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaDivideAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaDivideAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaDivideAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaDivideAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaDivideAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaDivideAssignExpressionLazyChildBuilder
    {
        internal MetaDivideAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaModuloAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaModuloAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaModuloAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaModuloAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaModuloAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaModuloAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaModuloAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaModuloAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaModuloAssignExpressionLazyChildBuilder
    {
        internal MetaModuloAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAddAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAddAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAddAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAddAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAddAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAddAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAddAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAddAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAddAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAddAssignExpressionLazyChildBuilder
    {
        internal MetaAddAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaSubtractAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaSubtractAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaSubtractAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaSubtractAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaSubtractAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaSubtractAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaSubtractAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaSubtractAssignExpressionLazyChildBuilder
    {
        internal MetaSubtractAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaLeftShiftAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaLeftShiftAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaLeftShiftAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLeftShiftAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaLeftShiftAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaLeftShiftAssignExpressionLazyChildBuilder
    {
        internal MetaLeftShiftAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaRightShiftAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaRightShiftAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaRightShiftAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaRightShiftAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpression global::MetaDslx.Core.Immutable.MetaArithmeticAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaRightShiftAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaRightShiftAssignExpressionLazyChildBuilder
    {
        internal MetaRightShiftAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaLogicalAssignmentExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaLogicalAssignmentExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaLogicalAssignmentExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaLogicalAssignmentExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaLogicalAssignmentExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionLazyChildBuilder
    {
        internal MetaLogicalAssignmentExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaAndAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaAndAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaAndAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaAndAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaAndAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaAndAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaAndAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaAndAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaAndAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaAndAssignExpressionLazyChildBuilder
    {
        internal MetaAndAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaExclusiveOrAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaExclusiveOrAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaExclusiveOrAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaExclusiveOrAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaExclusiveOrAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaExclusiveOrAssignExpressionLazyChildBuilder
    {
        internal MetaExclusiveOrAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    internal class MetaOrAssignExpressionBuilderImpl : global::MetaDslx.Core.Immutable.MutableSymbolBase, global::MetaDslx.Core.Immutable.MetaOrAssignExpressionBuilder
    {
        private global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> arguments0;
    
        internal MetaOrAssignExpressionBuilderImpl(global::MetaDslx.Core.Immutable.SymbolId id, global::MetaDslx.Core.Immutable.MutableModel model, bool created)
    		: base(id, model, created)
        {
    		if (!created)
    		{
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty);
    			this.MAttachProperty(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty);
    			this.MInit();
    		}
        }
    
        protected override void MDoInit()
        {
    		MetaImplementationProvider.Implementation.MetaOrAssignExpression(this);
        }
    
        public override object MMetaModel
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.Meta;*/ }
        }
    
        public override object MMetaClass
        {
            get { return null;/*global::MetaDslx.Core.MetaInstance.MetaOrAssignExpression;*/ }
        }
    
        public new global::MetaDslx.Core.Immutable.MetaOrAssignExpression ToImmutable()
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrAssignExpression)base.ToImmutable();
    	}
    
        public new global::MetaDslx.Core.Immutable.MetaOrAssignExpression ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return (global::MetaDslx.Core.Immutable.MetaOrAssignExpression)base.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpression global::MetaDslx.Core.Immutable.MetaLogicalAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaAssignmentExpression global::MetaDslx.Core.Immutable.MetaAssignmentExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBinaryExpression global::MetaDslx.Core.Immutable.MetaBinaryExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaOperatorExpression global::MetaDslx.Core.Immutable.MetaOperatorExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaBoundExpression global::MetaDslx.Core.Immutable.MetaBoundExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaExpression global::MetaDslx.Core.Immutable.MetaExpressionBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable()
    	{
    		return this.ToImmutable();
    	}
    
        global::MetaDslx.Core.Immutable.MetaTypedElement global::MetaDslx.Core.Immutable.MetaTypedElementBuilder.ToImmutable(global::MetaDslx.Core.Immutable.ImmutableModel model)
    	{
    		return this.ToImmutable(model);
    	}
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Left
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> LeftLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder LeftLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaExpressionBuilder Right
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> RightLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder RightLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty); }
        }
    
        
        public string Name
        {
            get { return this.GetReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
        }
        
        public Func<string> NameLazy
        {
            get { return this.GetLazyReference<string>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
    
        
        public bool UniqueDefinition
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
        }
        
        public Func<bool> UniqueDefinitionLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.IMutableModelList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Arguments
        {
            get { return this.GetList<global::MetaDslx.Core.Immutable.MetaExpressionBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty, ref arguments0); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilder ArgumentsLazyChild
        {
            get { return new global::MetaDslx.Core.Immutable.MetaExpressionLazyChildBuilderImpl(this, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.ArgumentsProperty); }
        }
    
        
        public global::MetaDslx.Core.BindingInfo Definitions
        {
            get { return this.GetReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
        }
        
        public Func<global::MetaDslx.Core.BindingInfo> DefinitionsLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.BindingInfo>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.ISymbol Definition
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.ISymbol> DefinitionLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.ISymbol>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
    
        
        public bool NoTypeError
        {
            get { return this.GetValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
        }
        
        public Func<bool> NoTypeErrorLazy
        {
            get { return this.GetLazyValue<bool>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty); }
            set { this.SetLazyValue(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder ExpectedType
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedTypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
    
        
        public global::MetaDslx.Core.Immutable.MetaTypeBuilder Type
        {
            get { return this.GetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
        
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> TypeLazy
        {
            get { return this.GetLazyReference<global::MetaDslx.Core.Immutable.MetaTypeBuilder>(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty); }
            set { this.SetLazyReference(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
    public class MetaOrAssignExpressionLazyChildBuilderImpl : global::MetaDslx.Core.Immutable.LazyChildBuilderBase, global::MetaDslx.Core.Immutable.MetaOrAssignExpressionLazyChildBuilder
    {
        internal MetaOrAssignExpressionLazyChildBuilderImpl(global::MetaDslx.Core.Immutable.MutableSymbolBase parent, global::MetaDslx.Core.Immutable.ModelProperty property)
    		: base(parent, property)
        {
        }
    
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Left
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.LeftProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaExpressionBuilder> Right
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBinaryExpression.RightProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<string> Name
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaOperatorExpression.NameProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> UniqueDefinition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => value); }
        }
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.BindingInfo> Definitions
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionsProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.ISymbol> Definition
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.DefinitionProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<bool> NoTypeError
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.NoTypeErrorProperty, () => value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> ExpectedType
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaExpression.ExpectedTypeProperty, value); }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public Func<global::MetaDslx.Core.Immutable.MetaTypeBuilder> Type
        {
            set { this.MParent.MChildAddLazy(this.MProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaTypedElement.TypeProperty, value); }
        }
    }
    
	internal class MetaBuilderInstance
	{
		internal static MetaBuilderInstance instance = new MetaBuilderInstance();
	
		internal global::MetaDslx.Core.Immutable.MetaModelBuilder metaModel;
		internal global::MetaDslx.Core.Immutable.MutableModel model;
	
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Object;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder String;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Int;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Long;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Float;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Double;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Byte;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Bool;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Void;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder None;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Any;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder Error;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder ModelObject;
	    public readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder DefinitionList;
	    public readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder ModelObjectList;
	
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp1;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp2;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp3;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp4;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp5;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp6;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp7;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp8;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp9;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp10;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp11;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp12;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp13;
		private readonly global::MetaDslx.Core.Immutable.MetaPrimitiveTypeBuilder __tmp14;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp15;
		private readonly global::MetaDslx.Core.Immutable.MetaNamespaceBuilder __tmp16;
		private readonly global::MetaDslx.Core.Immutable.MetaNamespaceBuilder __tmp17;
		private readonly global::MetaDslx.Core.Immutable.MetaModelBuilder __tmp18;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp19;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp20;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp21;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp22;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp23;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp24;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp25;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp26;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp27;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp28;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp29;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp30;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp31;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp32;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp33;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp34;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp35;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp36;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp37;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp38;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp39;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp40;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp41;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp42;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp43;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp44;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp45;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp46;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp47;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp48;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp49;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp50;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp51;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp52;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp53;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp54;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp55;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp56;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp57;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp58;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp59;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp60;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp61;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp62;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp63;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp64;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp65;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp66;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp67;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp68;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp69;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp70;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp71;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp72;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp73;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp74;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantBuilder __tmp75;
		private readonly global::MetaDslx.Core.Immutable.MetaNewExpressionBuilder __tmp76;
		private readonly global::MetaDslx.Core.Immutable.MetaNewPropertyInitializerBuilder __tmp77;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp78;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp79;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp80;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp81;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder TypeOf;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp82;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp83;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp84;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp85;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp86;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp87;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder GetValueType;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp88;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp89;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp90;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp91;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp92;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp93;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder GetReturnType;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp94;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp95;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp96;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp97;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp98;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp99;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder CurrentType;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp100;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp101;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp102;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp103;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp104;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp105;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder TypeCheck;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp106;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp107;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp108;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp109;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp110;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp111;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder Balance;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp112;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp113;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp114;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp115;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp116;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp117;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp118;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder Resolve1;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp119;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp120;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp121;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp122;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp123;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp124;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder Resolve2;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp125;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp126;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp127;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp128;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp129;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp130;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp131;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ResolveType1;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp132;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp133;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp134;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp135;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp136;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp137;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ResolveType2;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp138;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp139;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp140;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp141;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp142;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp143;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp144;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ResolveName1;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp145;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp146;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp147;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp148;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp149;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp150;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ResolveName2;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp151;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp152;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp153;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp154;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp155;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp156;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp157;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder ToDefinitionList;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp158;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp159;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp160;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp161;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp162;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp163;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder Bind1;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp164;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp165;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp166;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp167;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationPropertyBuilder __tmp168;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp169;
		internal readonly global::MetaDslx.Core.Immutable.MetaGlobalFunctionBuilder Bind2;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp170;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp171;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp172;
		private readonly global::MetaDslx.Core.Immutable.MetaParameterBuilder __tmp173;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAnnotatedElement;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp174;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaAnnotatedElement_AnnotationsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaDocumentedElement;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaDocumentedElement_DocumentationProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp175;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp176;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp177;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp178;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNamedElement;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp179;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamedElement_NameProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypedElement;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp180;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypedElement_TypeProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp181;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaType;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAnnotation;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp182;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaAnnotation_PropertiesProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAnnotationProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaAnnotationProperty_ValueProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp183;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp184;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp185;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp186;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNamespace;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamespace_ParentProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp187;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp188;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamespace_UsingsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamespace_MetaModelProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp189;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp190;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamespace_NamespacesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp191;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp192;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNamespace_DeclarationsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaDeclaration;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp193;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp194;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp195;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp196;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaDeclaration_NamespaceProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaDeclaration_ModelProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaModel;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaModel_UriProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaModel_NamespaceProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaEnumBuilder MetaCollectionKind;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp197;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp198;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp199;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp200;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaCollectionType;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaCollectionType_KindProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaCollectionType_InnerTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNullableType;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNullableType_InnerTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPrimitiveType;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp201;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaEnum;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp202;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp203;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaEnum_EnumLiteralsProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp204;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp205;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaEnum_OperationsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaEnumLiteral;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp206;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp207;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp208;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaEnumLiteral_EnumProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp209;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaClass;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaClass_IsAbstractProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp210;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp211;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaClass_SuperClassesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp212;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp213;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaClass_PropertiesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp214;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp215;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaClass_OperationsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaClass_ConstructorProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp216;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp217;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp218;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp219;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp220;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp221;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp222;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp223;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp224;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp225;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp226;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp227;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp228;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp229;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp230;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp231;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp232;
		private readonly global::MetaDslx.Core.Immutable.MetaOperationBuilder __tmp233;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp234;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionTypeBuilder __tmp235;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaFunctionType;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp236;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunctionType_ParameterTypesProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunctionType_ReturnTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaFunction;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp237;
		private readonly global::MetaDslx.Core.Immutable.MetaAnnotationBuilder __tmp238;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunction_TypeProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp239;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunction_ParametersProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunction_ReturnTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaGlobalFunction;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOperation;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaOperation_ParentProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaConstant;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp240;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp241;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp242;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConstant_ValueProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaConstructor;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConstructor_ParentProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp243;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConstructor_InitializersProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaParameter;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaParameter_FunctionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaEnumBuilder MetaPropertyKind;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp244;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp245;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp246;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp247;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp248;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp249;
		private readonly global::MetaDslx.Core.Immutable.MetaEnumLiteralBuilder __tmp250;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_KindProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_ClassProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp251;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_OppositePropertiesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp252;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_SubsettedPropertiesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp253;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_SubsettingPropertiesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp254;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_RedefinedPropertiesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp255;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaProperty_RedefiningPropertiesProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPropertyInitializer;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaPropertyInitializer_ConstructorProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaPropertyInitializer_PropertyNameProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaPropertyInitializer_PropertyContextProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaPropertyInitializer_PropertyProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaPropertyInitializer_ValueProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp256;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp257;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder __tmp258;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp259;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp260;
		private readonly global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder __tmp261;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp262;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp263;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp264;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp265;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp266;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp267;
		private readonly global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder __tmp268;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp269;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp270;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp271;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp272;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp273;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaSynthetizedPropertyInitializer;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaInheritedPropertyInitializer;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaInheritedPropertyInitializer_ObjectNameProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaInheritedPropertyInitializer_ObjectProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp274;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp275;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp276;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp277;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp278;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp279;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp280;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp281;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeAsExpressionBuilder __tmp282;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp283;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp284;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp285;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp286;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp287;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp288;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp289;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp290;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp291;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp292;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp293;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp294;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp295;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp296;
		private readonly global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder __tmp297;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaExpression_NoTypeErrorProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaExpression_ExpectedTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBracketExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp298;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp299;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp300;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp301;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp302;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp303;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBracketExpression_ExpressionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBoundExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp304;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp305;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp306;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp307;
		private readonly global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder __tmp308;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp309;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp310;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp311;
		private readonly global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder __tmp312;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp313;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp314;
		private readonly global::MetaDslx.Core.Immutable.MetaNullExpressionBuilder __tmp315;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp316;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp317;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp318;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp319;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBoundExpression_UniqueDefinitionProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp320;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBoundExpression_ArgumentsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBoundExpression_DefinitionsProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBoundExpression_DefinitionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaThisExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp321;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp322;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp323;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp324;
		private readonly global::MetaDslx.Core.Immutable.MetaThisExpressionBuilder __tmp325;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNullExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp326;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp327;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp328;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypeConversionExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypeConversionExpression_TypeReferenceProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypeConversionExpression_ExpressionProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp329;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp330;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp331;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp332;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp333;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypeAsExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypeCastExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypeCheckExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypeCheckExpression_TypeReferenceProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypeCheckExpression_ExpressionProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp334;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp335;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp336;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp337;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp338;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaTypeOfExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaTypeOfExpression_TypeReferenceProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp339;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp340;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp341;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaConditionalExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConditionalExpression_ConditionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConditionalExpression_BalancedTypeProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConditionalExpression_ThenProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConditionalExpression_ElseProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp342;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp343;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp344;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp345;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp346;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp347;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp348;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp349;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp350;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp351;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp352;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp353;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp354;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp355;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaConstantExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaConstantExpression_ValueProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp356;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp357;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp358;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp359;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp360;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaIdentifierExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaIdentifierExpression_NameProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp361;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp362;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp363;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp364;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp365;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaMemberAccessExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaMemberAccessExpression_ExpressionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaMemberAccessExpression_NameProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp366;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp367;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp368;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp369;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp370;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp371;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp372;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp373;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp374;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaFunctionCallExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaFunctionCallExpression_ExpressionProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp375;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp376;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp377;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp378;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp379;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp380;
		private readonly global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder __tmp381;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder __tmp382;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp383;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp384;
		private readonly global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder __tmp385;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder __tmp386;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp387;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp388;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp389;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp390;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp391;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp392;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp393;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp394;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp395;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaIndexerExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaIndexerExpression_ExpressionProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp396;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp397;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp398;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp399;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeOfExpressionBuilder __tmp400;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp401;
		private readonly global::MetaDslx.Core.Immutable.MetaConditionalExpressionBuilder __tmp402;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeCheckExpressionBuilder __tmp403;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp404;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp405;
		private readonly global::MetaDslx.Core.Immutable.MetaBracketExpressionBuilder __tmp406;
		private readonly global::MetaDslx.Core.Immutable.MetaTypeCastExpressionBuilder __tmp407;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp408;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp409;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp410;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp411;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp412;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNewExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewExpression_TypeReferenceProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp413;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewExpression_PropertyInitializersProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp414;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp415;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp416;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNewPropertyInitializer;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewPropertyInitializer_ParentProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewPropertyInitializer_PropertyNameProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewPropertyInitializer_ValueProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewPropertyInitializer_PropertyProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp417;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp418;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp419;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp420;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp421;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp422;
		private readonly global::MetaDslx.Core.Immutable.MetaMemberAccessExpressionBuilder __tmp423;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp424;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp425;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp426;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp427;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp428;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp429;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNewCollectionExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewCollectionExpression_TypeReferenceProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaCollectionTypeBuilder __tmp430;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaNewCollectionExpression_ValuesProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp431;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp432;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp433;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOperatorExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaOperatorExpression_NameProperty;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp434;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp435;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp436;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp437;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp438;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaUnaryExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp439;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaUnaryExpression_ExpressionProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaUnaryPlusExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp440;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp441;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp442;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNegateExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp443;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp444;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp445;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOnesComplementExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp446;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp447;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp448;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNotExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp449;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp450;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp451;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaUnaryAssignExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPostIncrementAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp452;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp453;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp454;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPostDecrementAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp455;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp456;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp457;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPreIncrementAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp458;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp459;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp460;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaPreDecrementAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp461;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp462;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp463;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBinaryExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp464;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBinaryExpression_LeftProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaPropertyBuilder MetaBinaryExpression_RightProperty;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBinaryArithmeticExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaMultiplyExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp465;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp466;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp467;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaDivideExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp468;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp469;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp470;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaModuloExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp471;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp472;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp473;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAddExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp474;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp475;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp476;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaSubtractExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp477;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp478;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp479;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaLeftShiftExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp480;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp481;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp482;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaRightShiftExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp483;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp484;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp485;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBinaryComparisonExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaLessThanExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp486;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp487;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp488;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaLessThanOrEqualExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp489;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp490;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp491;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaGreaterThanExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp492;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp493;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp494;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaGreaterThanOrEqualExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp495;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp496;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp497;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaEqualExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp498;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp499;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp500;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNotEqualExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp501;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp502;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp503;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaBinaryLogicalExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAndExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp504;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp505;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp506;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOrExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp507;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp508;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp509;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaExclusiveOrExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp510;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp511;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp512;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAndAlsoExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp513;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp514;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp515;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOrElseExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp516;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp517;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp518;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaNullCoalescingExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp519;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp520;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp521;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAssignmentExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp522;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp523;
		private readonly global::MetaDslx.Core.Immutable.MetaFunctionCallExpressionBuilder __tmp524;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp525;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp526;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp527;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp528;
		private readonly global::MetaDslx.Core.Immutable.MetaInheritedPropertyInitializerBuilder __tmp529;
		private readonly global::MetaDslx.Core.Immutable.MetaIdentifierExpressionBuilder __tmp530;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp531;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp532;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp533;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaArithmeticAssignmentExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaMultiplyAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp534;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp535;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp536;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaDivideAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp537;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp538;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp539;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaModuloAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp540;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp541;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp542;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAddAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp543;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp544;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp545;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaSubtractAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp546;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp547;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp548;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaLeftShiftAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp549;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp550;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp551;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaRightShiftAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp552;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp553;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp554;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaLogicalAssignmentExpression;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaAndAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp555;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp556;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp557;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaExclusiveOrAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp558;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp559;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp560;
		internal readonly global::MetaDslx.Core.Immutable.MetaClassBuilder MetaOrAssignExpression;
		private readonly global::MetaDslx.Core.Immutable.MetaConstructorBuilder __tmp561;
		private readonly global::MetaDslx.Core.Immutable.MetaSynthetizedPropertyInitializerBuilder __tmp562;
		private readonly global::MetaDslx.Core.Immutable.MetaConstantExpressionBuilder __tmp563;
		
	
	    private MetaBuilderInstance()
	    {
			global::MetaDslx.Core.Immutable.MetaFactory factory = new global::MetaDslx.Core.Immutable.MetaFactory(model, false);
	
	        Object = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "object"));
	        String = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "string"));
	        Int = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "int"));
	        Long = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "long"));
	        Float = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "float"));
	        Double = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "double"));
	        Byte = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "byte"));
	        Bool = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "bool"));
	        Void = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "void"));
	        None = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "*none*"));
	        Any = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "*any*"));
	        Error = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "*error*"));
	        ModelObject = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "ModelObject"));
	        DefinitionList = factory.MetaPrimitiveType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaNamedElement.NameProperty, () => "DefinitionList"));
	        ModelObjectList = factory.MetaCollectionType(new PropertyInit(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaCollectionType.InnerTypeProperty, () => global::MetaDslx.Core.Immutable.MetaInstance.ModelObject.ToMutable()));
	
			__tmp1 = factory.MetaPrimitiveType();
			__tmp2 = factory.MetaPrimitiveType();
			__tmp3 = factory.MetaPrimitiveType();
			__tmp4 = factory.MetaPrimitiveType();
			__tmp5 = factory.MetaPrimitiveType();
			__tmp6 = factory.MetaPrimitiveType();
			__tmp7 = factory.MetaPrimitiveType();
			__tmp8 = factory.MetaPrimitiveType();
			__tmp9 = factory.MetaPrimitiveType();
			__tmp10 = factory.MetaPrimitiveType();
			__tmp11 = factory.MetaPrimitiveType();
			__tmp12 = factory.MetaPrimitiveType();
			__tmp13 = factory.MetaPrimitiveType();
			__tmp14 = factory.MetaPrimitiveType();
			__tmp15 = factory.MetaCollectionType();
			__tmp16 = factory.MetaNamespace();
			__tmp17 = factory.MetaNamespace();
			__tmp18 = factory.MetaModel();
			metaModel = __tmp18;
			__tmp19 = factory.MetaConstant();
			__tmp20 = factory.MetaNewExpression();
			__tmp21 = factory.MetaNewPropertyInitializer();
			__tmp22 = factory.MetaConstantExpression();
			__tmp23 = factory.MetaConstant();
			__tmp24 = factory.MetaNewExpression();
			__tmp25 = factory.MetaNewPropertyInitializer();
			__tmp26 = factory.MetaConstantExpression();
			__tmp27 = factory.MetaConstant();
			__tmp28 = factory.MetaNewExpression();
			__tmp29 = factory.MetaNewPropertyInitializer();
			__tmp30 = factory.MetaConstantExpression();
			__tmp31 = factory.MetaConstant();
			__tmp32 = factory.MetaNewExpression();
			__tmp33 = factory.MetaNewPropertyInitializer();
			__tmp34 = factory.MetaConstantExpression();
			__tmp35 = factory.MetaConstant();
			__tmp36 = factory.MetaNewExpression();
			__tmp37 = factory.MetaNewPropertyInitializer();
			__tmp38 = factory.MetaConstantExpression();
			__tmp39 = factory.MetaConstant();
			__tmp40 = factory.MetaNewExpression();
			__tmp41 = factory.MetaNewPropertyInitializer();
			__tmp42 = factory.MetaConstantExpression();
			__tmp43 = factory.MetaConstant();
			__tmp44 = factory.MetaNewExpression();
			__tmp45 = factory.MetaNewPropertyInitializer();
			__tmp46 = factory.MetaConstantExpression();
			__tmp47 = factory.MetaConstant();
			__tmp48 = factory.MetaNewExpression();
			__tmp49 = factory.MetaNewPropertyInitializer();
			__tmp50 = factory.MetaConstantExpression();
			__tmp51 = factory.MetaConstant();
			__tmp52 = factory.MetaNewExpression();
			__tmp53 = factory.MetaNewPropertyInitializer();
			__tmp54 = factory.MetaConstantExpression();
			__tmp55 = factory.MetaConstant();
			__tmp56 = factory.MetaNewExpression();
			__tmp57 = factory.MetaNewPropertyInitializer();
			__tmp58 = factory.MetaConstantExpression();
			__tmp59 = factory.MetaConstant();
			__tmp60 = factory.MetaNewExpression();
			__tmp61 = factory.MetaNewPropertyInitializer();
			__tmp62 = factory.MetaConstantExpression();
			__tmp63 = factory.MetaConstant();
			__tmp64 = factory.MetaNewExpression();
			__tmp65 = factory.MetaNewPropertyInitializer();
			__tmp66 = factory.MetaConstantExpression();
			__tmp67 = factory.MetaConstant();
			__tmp68 = factory.MetaNewExpression();
			__tmp69 = factory.MetaNewPropertyInitializer();
			__tmp70 = factory.MetaConstantExpression();
			__tmp71 = factory.MetaConstant();
			__tmp72 = factory.MetaNewExpression();
			__tmp73 = factory.MetaNewPropertyInitializer();
			__tmp74 = factory.MetaConstantExpression();
			__tmp75 = factory.MetaConstant();
			__tmp76 = factory.MetaNewExpression();
			__tmp77 = factory.MetaNewPropertyInitializer();
			__tmp78 = factory.MetaTypeOfExpression();
			__tmp79 = factory.MetaAnnotation();
			__tmp80 = factory.MetaAnnotationProperty();
			__tmp81 = factory.MetaConstantExpression();
			TypeOf = factory.MetaGlobalFunction();
			__tmp82 = factory.MetaFunctionType();
			__tmp83 = factory.MetaFunctionType();
			__tmp84 = factory.MetaParameter();
			__tmp85 = factory.MetaAnnotation();
			__tmp86 = factory.MetaAnnotationProperty();
			__tmp87 = factory.MetaConstantExpression();
			GetValueType = factory.MetaGlobalFunction();
			__tmp88 = factory.MetaFunctionType();
			__tmp89 = factory.MetaFunctionType();
			__tmp90 = factory.MetaParameter();
			__tmp91 = factory.MetaAnnotation();
			__tmp92 = factory.MetaAnnotationProperty();
			__tmp93 = factory.MetaConstantExpression();
			GetReturnType = factory.MetaGlobalFunction();
			__tmp94 = factory.MetaFunctionType();
			__tmp95 = factory.MetaFunctionType();
			__tmp96 = factory.MetaParameter();
			__tmp97 = factory.MetaAnnotation();
			__tmp98 = factory.MetaAnnotationProperty();
			__tmp99 = factory.MetaConstantExpression();
			CurrentType = factory.MetaGlobalFunction();
			__tmp100 = factory.MetaFunctionType();
			__tmp101 = factory.MetaFunctionType();
			__tmp102 = factory.MetaParameter();
			__tmp103 = factory.MetaAnnotation();
			__tmp104 = factory.MetaAnnotationProperty();
			__tmp105 = factory.MetaConstantExpression();
			TypeCheck = factory.MetaGlobalFunction();
			__tmp106 = factory.MetaFunctionType();
			__tmp107 = factory.MetaFunctionType();
			__tmp108 = factory.MetaParameter();
			__tmp109 = factory.MetaAnnotation();
			__tmp110 = factory.MetaAnnotationProperty();
			__tmp111 = factory.MetaConstantExpression();
			Balance = factory.MetaGlobalFunction();
			__tmp112 = factory.MetaFunctionType();
			__tmp113 = factory.MetaFunctionType();
			__tmp114 = factory.MetaParameter();
			__tmp115 = factory.MetaParameter();
			__tmp116 = factory.MetaAnnotation();
			__tmp117 = factory.MetaAnnotationProperty();
			__tmp118 = factory.MetaConstantExpression();
			Resolve1 = factory.MetaGlobalFunction();
			__tmp119 = factory.MetaFunctionType();
			__tmp120 = factory.MetaFunctionType();
			__tmp121 = factory.MetaParameter();
			__tmp122 = factory.MetaAnnotation();
			__tmp123 = factory.MetaAnnotationProperty();
			__tmp124 = factory.MetaConstantExpression();
			Resolve2 = factory.MetaGlobalFunction();
			__tmp125 = factory.MetaFunctionType();
			__tmp126 = factory.MetaFunctionType();
			__tmp127 = factory.MetaParameter();
			__tmp128 = factory.MetaParameter();
			__tmp129 = factory.MetaAnnotation();
			__tmp130 = factory.MetaAnnotationProperty();
			__tmp131 = factory.MetaConstantExpression();
			ResolveType1 = factory.MetaGlobalFunction();
			__tmp132 = factory.MetaFunctionType();
			__tmp133 = factory.MetaFunctionType();
			__tmp134 = factory.MetaParameter();
			__tmp135 = factory.MetaAnnotation();
			__tmp136 = factory.MetaAnnotationProperty();
			__tmp137 = factory.MetaConstantExpression();
			ResolveType2 = factory.MetaGlobalFunction();
			__tmp138 = factory.MetaFunctionType();
			__tmp139 = factory.MetaFunctionType();
			__tmp140 = factory.MetaParameter();
			__tmp141 = factory.MetaParameter();
			__tmp142 = factory.MetaAnnotation();
			__tmp143 = factory.MetaAnnotationProperty();
			__tmp144 = factory.MetaConstantExpression();
			ResolveName1 = factory.MetaGlobalFunction();
			__tmp145 = factory.MetaFunctionType();
			__tmp146 = factory.MetaFunctionType();
			__tmp147 = factory.MetaParameter();
			__tmp148 = factory.MetaAnnotation();
			__tmp149 = factory.MetaAnnotationProperty();
			__tmp150 = factory.MetaConstantExpression();
			ResolveName2 = factory.MetaGlobalFunction();
			__tmp151 = factory.MetaFunctionType();
			__tmp152 = factory.MetaFunctionType();
			__tmp153 = factory.MetaParameter();
			__tmp154 = factory.MetaParameter();
			__tmp155 = factory.MetaAnnotation();
			__tmp156 = factory.MetaAnnotationProperty();
			__tmp157 = factory.MetaConstantExpression();
			ToDefinitionList = factory.MetaGlobalFunction();
			__tmp158 = factory.MetaFunctionType();
			__tmp159 = factory.MetaFunctionType();
			__tmp160 = factory.MetaParameter();
			__tmp161 = factory.MetaAnnotation();
			__tmp162 = factory.MetaAnnotationProperty();
			__tmp163 = factory.MetaConstantExpression();
			Bind1 = factory.MetaGlobalFunction();
			__tmp164 = factory.MetaFunctionType();
			__tmp165 = factory.MetaFunctionType();
			__tmp166 = factory.MetaParameter();
			__tmp167 = factory.MetaAnnotation();
			__tmp168 = factory.MetaAnnotationProperty();
			__tmp169 = factory.MetaConstantExpression();
			Bind2 = factory.MetaGlobalFunction();
			__tmp170 = factory.MetaFunctionType();
			__tmp171 = factory.MetaFunctionType();
			__tmp172 = factory.MetaParameter();
			__tmp173 = factory.MetaParameter();
			MetaAnnotatedElement = factory.MetaClass();
			__tmp174 = factory.MetaCollectionType();
			MetaAnnotatedElement_AnnotationsProperty = factory.MetaProperty();
			MetaDocumentedElement = factory.MetaClass();
			MetaDocumentedElement_DocumentationProperty = factory.MetaProperty();
			__tmp175 = factory.MetaCollectionType();
			__tmp176 = factory.MetaOperation();
			__tmp177 = factory.MetaFunctionType();
			__tmp178 = factory.MetaFunctionType();
			MetaNamedElement = factory.MetaClass();
			__tmp179 = factory.MetaAnnotation();
			MetaNamedElement_NameProperty = factory.MetaProperty();
			MetaTypedElement = factory.MetaClass();
			__tmp180 = factory.MetaAnnotation();
			MetaTypedElement_TypeProperty = factory.MetaProperty();
			__tmp181 = factory.MetaAnnotation();
			MetaType = factory.MetaClass();
			MetaAnnotation = factory.MetaClass();
			__tmp182 = factory.MetaCollectionType();
			MetaAnnotation_PropertiesProperty = factory.MetaProperty();
			MetaAnnotationProperty = factory.MetaClass();
			MetaAnnotationProperty_ValueProperty = factory.MetaProperty();
			__tmp183 = factory.MetaConstructor();
			__tmp184 = factory.MetaInheritedPropertyInitializer();
			__tmp185 = factory.MetaTypeOfExpression();
			__tmp186 = factory.MetaAnnotation();
			MetaNamespace = factory.MetaClass();
			MetaNamespace_ParentProperty = factory.MetaProperty();
			__tmp187 = factory.MetaAnnotation();
			__tmp188 = factory.MetaCollectionType();
			MetaNamespace_UsingsProperty = factory.MetaProperty();
			MetaNamespace_MetaModelProperty = factory.MetaProperty();
			__tmp189 = factory.MetaAnnotation();
			__tmp190 = factory.MetaCollectionType();
			MetaNamespace_NamespacesProperty = factory.MetaProperty();
			__tmp191 = factory.MetaAnnotation();
			__tmp192 = factory.MetaCollectionType();
			MetaNamespace_DeclarationsProperty = factory.MetaProperty();
			MetaDeclaration = factory.MetaClass();
			__tmp193 = factory.MetaConstructor();
			__tmp194 = factory.MetaSynthetizedPropertyInitializer();
			__tmp195 = factory.MetaMemberAccessExpression();
			__tmp196 = factory.MetaIdentifierExpression();
			MetaDeclaration_NamespaceProperty = factory.MetaProperty();
			MetaDeclaration_ModelProperty = factory.MetaProperty();
			MetaModel = factory.MetaClass();
			MetaModel_UriProperty = factory.MetaProperty();
			MetaModel_NamespaceProperty = factory.MetaProperty();
			MetaCollectionKind = factory.MetaEnum();
			__tmp197 = factory.MetaEnumLiteral();
			__tmp198 = factory.MetaEnumLiteral();
			__tmp199 = factory.MetaEnumLiteral();
			__tmp200 = factory.MetaEnumLiteral();
			MetaCollectionType = factory.MetaClass();
			MetaCollectionType_KindProperty = factory.MetaProperty();
			MetaCollectionType_InnerTypeProperty = factory.MetaProperty();
			MetaNullableType = factory.MetaClass();
			MetaNullableType_InnerTypeProperty = factory.MetaProperty();
			MetaPrimitiveType = factory.MetaClass();
			__tmp201 = factory.MetaAnnotation();
			MetaEnum = factory.MetaClass();
			__tmp202 = factory.MetaAnnotation();
			__tmp203 = factory.MetaCollectionType();
			MetaEnum_EnumLiteralsProperty = factory.MetaProperty();
			__tmp204 = factory.MetaAnnotation();
			__tmp205 = factory.MetaCollectionType();
			MetaEnum_OperationsProperty = factory.MetaProperty();
			MetaEnumLiteral = factory.MetaClass();
			__tmp206 = factory.MetaConstructor();
			__tmp207 = factory.MetaSynthetizedPropertyInitializer();
			__tmp208 = factory.MetaIdentifierExpression();
			MetaEnumLiteral_EnumProperty = factory.MetaProperty();
			__tmp209 = factory.MetaAnnotation();
			MetaClass = factory.MetaClass();
			MetaClass_IsAbstractProperty = factory.MetaProperty();
			__tmp210 = factory.MetaAnnotation();
			__tmp211 = factory.MetaCollectionType();
			MetaClass_SuperClassesProperty = factory.MetaProperty();
			__tmp212 = factory.MetaAnnotation();
			__tmp213 = factory.MetaCollectionType();
			MetaClass_PropertiesProperty = factory.MetaProperty();
			__tmp214 = factory.MetaAnnotation();
			__tmp215 = factory.MetaCollectionType();
			MetaClass_OperationsProperty = factory.MetaProperty();
			MetaClass_ConstructorProperty = factory.MetaProperty();
			__tmp216 = factory.MetaCollectionType();
			__tmp217 = factory.MetaOperation();
			__tmp218 = factory.MetaFunctionType();
			__tmp219 = factory.MetaFunctionType();
			__tmp220 = factory.MetaCollectionType();
			__tmp221 = factory.MetaOperation();
			__tmp222 = factory.MetaFunctionType();
			__tmp223 = factory.MetaFunctionType();
			__tmp224 = factory.MetaCollectionType();
			__tmp225 = factory.MetaOperation();
			__tmp226 = factory.MetaFunctionType();
			__tmp227 = factory.MetaFunctionType();
			__tmp228 = factory.MetaCollectionType();
			__tmp229 = factory.MetaOperation();
			__tmp230 = factory.MetaFunctionType();
			__tmp231 = factory.MetaFunctionType();
			__tmp232 = factory.MetaCollectionType();
			__tmp233 = factory.MetaOperation();
			__tmp234 = factory.MetaFunctionType();
			__tmp235 = factory.MetaFunctionType();
			MetaFunctionType = factory.MetaClass();
			__tmp236 = factory.MetaCollectionType();
			MetaFunctionType_ParameterTypesProperty = factory.MetaProperty();
			MetaFunctionType_ReturnTypeProperty = factory.MetaProperty();
			MetaFunction = factory.MetaClass();
			__tmp237 = factory.MetaConstructor();
			__tmp238 = factory.MetaAnnotation();
			MetaFunction_TypeProperty = factory.MetaProperty();
			__tmp239 = factory.MetaCollectionType();
			MetaFunction_ParametersProperty = factory.MetaProperty();
			MetaFunction_ReturnTypeProperty = factory.MetaProperty();
			MetaGlobalFunction = factory.MetaClass();
			MetaOperation = factory.MetaClass();
			MetaOperation_ParentProperty = factory.MetaProperty();
			MetaConstant = factory.MetaClass();
			__tmp240 = factory.MetaConstructor();
			__tmp241 = factory.MetaInheritedPropertyInitializer();
			__tmp242 = factory.MetaIdentifierExpression();
			MetaConstant_ValueProperty = factory.MetaProperty();
			MetaConstructor = factory.MetaClass();
			MetaConstructor_ParentProperty = factory.MetaProperty();
			__tmp243 = factory.MetaCollectionType();
			MetaConstructor_InitializersProperty = factory.MetaProperty();
			MetaParameter = factory.MetaClass();
			MetaParameter_FunctionProperty = factory.MetaProperty();
			MetaPropertyKind = factory.MetaEnum();
			__tmp244 = factory.MetaEnumLiteral();
			__tmp245 = factory.MetaEnumLiteral();
			__tmp246 = factory.MetaEnumLiteral();
			__tmp247 = factory.MetaEnumLiteral();
			__tmp248 = factory.MetaEnumLiteral();
			__tmp249 = factory.MetaEnumLiteral();
			__tmp250 = factory.MetaEnumLiteral();
			MetaProperty = factory.MetaClass();
			MetaProperty_KindProperty = factory.MetaProperty();
			MetaProperty_ClassProperty = factory.MetaProperty();
			__tmp251 = factory.MetaCollectionType();
			MetaProperty_OppositePropertiesProperty = factory.MetaProperty();
			__tmp252 = factory.MetaCollectionType();
			MetaProperty_SubsettedPropertiesProperty = factory.MetaProperty();
			__tmp253 = factory.MetaCollectionType();
			MetaProperty_SubsettingPropertiesProperty = factory.MetaProperty();
			__tmp254 = factory.MetaCollectionType();
			MetaProperty_RedefinedPropertiesProperty = factory.MetaProperty();
			__tmp255 = factory.MetaCollectionType();
			MetaProperty_RedefiningPropertiesProperty = factory.MetaProperty();
			MetaPropertyInitializer = factory.MetaClass();
			MetaPropertyInitializer_ConstructorProperty = factory.MetaProperty();
			MetaPropertyInitializer_PropertyNameProperty = factory.MetaProperty();
			MetaPropertyInitializer_PropertyContextProperty = factory.MetaProperty();
			MetaPropertyInitializer_PropertyProperty = factory.MetaProperty();
			MetaPropertyInitializer_ValueProperty = factory.MetaProperty();
			__tmp256 = factory.MetaConstructor();
			__tmp257 = factory.MetaSynthetizedPropertyInitializer();
			__tmp258 = factory.MetaTypeAsExpression();
			__tmp259 = factory.MetaFunctionCallExpression();
			__tmp260 = factory.MetaIdentifierExpression();
			__tmp261 = factory.MetaThisExpression();
			__tmp262 = factory.MetaSynthetizedPropertyInitializer();
			__tmp263 = factory.MetaFunctionCallExpression();
			__tmp264 = factory.MetaIdentifierExpression();
			__tmp265 = factory.MetaFunctionCallExpression();
			__tmp266 = factory.MetaIdentifierExpression();
			__tmp267 = factory.MetaMemberAccessExpression();
			__tmp268 = factory.MetaThisExpression();
			__tmp269 = factory.MetaIdentifierExpression();
			__tmp270 = factory.MetaInheritedPropertyInitializer();
			__tmp271 = factory.MetaFunctionCallExpression();
			__tmp272 = factory.MetaIdentifierExpression();
			__tmp273 = factory.MetaIdentifierExpression();
			MetaSynthetizedPropertyInitializer = factory.MetaClass();
			MetaInheritedPropertyInitializer = factory.MetaClass();
			MetaInheritedPropertyInitializer_ObjectNameProperty = factory.MetaProperty();
			MetaInheritedPropertyInitializer_ObjectProperty = factory.MetaProperty();
			__tmp274 = factory.MetaConstructor();
			__tmp275 = factory.MetaSynthetizedPropertyInitializer();
			__tmp276 = factory.MetaFunctionCallExpression();
			__tmp277 = factory.MetaIdentifierExpression();
			__tmp278 = factory.MetaFunctionCallExpression();
			__tmp279 = factory.MetaIdentifierExpression();
			__tmp280 = factory.MetaIdentifierExpression();
			__tmp281 = factory.MetaSynthetizedPropertyInitializer();
			__tmp282 = factory.MetaTypeAsExpression();
			__tmp283 = factory.MetaFunctionCallExpression();
			__tmp284 = factory.MetaIdentifierExpression();
			__tmp285 = factory.MetaIdentifierExpression();
			__tmp286 = factory.MetaSynthetizedPropertyInitializer();
			__tmp287 = factory.MetaFunctionCallExpression();
			__tmp288 = factory.MetaIdentifierExpression();
			__tmp289 = factory.MetaFunctionCallExpression();
			__tmp290 = factory.MetaIdentifierExpression();
			__tmp291 = factory.MetaIdentifierExpression();
			__tmp292 = factory.MetaIdentifierExpression();
			MetaExpression = factory.MetaClass();
			__tmp293 = factory.MetaConstructor();
			__tmp294 = factory.MetaSynthetizedPropertyInitializer();
			__tmp295 = factory.MetaFunctionCallExpression();
			__tmp296 = factory.MetaIdentifierExpression();
			__tmp297 = factory.MetaThisExpression();
			MetaExpression_NoTypeErrorProperty = factory.MetaProperty();
			MetaExpression_ExpectedTypeProperty = factory.MetaProperty();
			MetaBracketExpression = factory.MetaClass();
			__tmp298 = factory.MetaConstructor();
			__tmp299 = factory.MetaSynthetizedPropertyInitializer();
			__tmp300 = factory.MetaMemberAccessExpression();
			__tmp301 = factory.MetaIdentifierExpression();
			__tmp302 = factory.MetaInheritedPropertyInitializer();
			__tmp303 = factory.MetaIdentifierExpression();
			MetaBracketExpression_ExpressionProperty = factory.MetaProperty();
			MetaBoundExpression = factory.MetaClass();
			__tmp304 = factory.MetaConstructor();
			__tmp305 = factory.MetaSynthetizedPropertyInitializer();
			__tmp306 = factory.MetaConstantExpression();
			__tmp307 = factory.MetaSynthetizedPropertyInitializer();
			__tmp308 = factory.MetaConditionalExpression();
			__tmp309 = factory.MetaIdentifierExpression();
			__tmp310 = factory.MetaFunctionCallExpression();
			__tmp311 = factory.MetaIdentifierExpression();
			__tmp312 = factory.MetaThisExpression();
			__tmp313 = factory.MetaIdentifierExpression();
			__tmp314 = factory.MetaConstantExpression();
			__tmp315 = factory.MetaNullExpression();
			__tmp316 = factory.MetaSynthetizedPropertyInitializer();
			__tmp317 = factory.MetaFunctionCallExpression();
			__tmp318 = factory.MetaIdentifierExpression();
			__tmp319 = factory.MetaIdentifierExpression();
			MetaBoundExpression_UniqueDefinitionProperty = factory.MetaProperty();
			__tmp320 = factory.MetaCollectionType();
			MetaBoundExpression_ArgumentsProperty = factory.MetaProperty();
			MetaBoundExpression_DefinitionsProperty = factory.MetaProperty();
			MetaBoundExpression_DefinitionProperty = factory.MetaProperty();
			MetaThisExpression = factory.MetaClass();
			__tmp321 = factory.MetaConstructor();
			__tmp322 = factory.MetaSynthetizedPropertyInitializer();
			__tmp323 = factory.MetaFunctionCallExpression();
			__tmp324 = factory.MetaIdentifierExpression();
			__tmp325 = factory.MetaThisExpression();
			MetaNullExpression = factory.MetaClass();
			__tmp326 = factory.MetaConstructor();
			__tmp327 = factory.MetaSynthetizedPropertyInitializer();
			__tmp328 = factory.MetaTypeOfExpression();
			MetaTypeConversionExpression = factory.MetaClass();
			MetaTypeConversionExpression_TypeReferenceProperty = factory.MetaProperty();
			MetaTypeConversionExpression_ExpressionProperty = factory.MetaProperty();
			__tmp329 = factory.MetaConstructor();
			__tmp330 = factory.MetaSynthetizedPropertyInitializer();
			__tmp331 = factory.MetaIdentifierExpression();
			__tmp332 = factory.MetaInheritedPropertyInitializer();
			__tmp333 = factory.MetaTypeOfExpression();
			MetaTypeAsExpression = factory.MetaClass();
			MetaTypeCastExpression = factory.MetaClass();
			MetaTypeCheckExpression = factory.MetaClass();
			MetaTypeCheckExpression_TypeReferenceProperty = factory.MetaProperty();
			MetaTypeCheckExpression_ExpressionProperty = factory.MetaProperty();
			__tmp334 = factory.MetaConstructor();
			__tmp335 = factory.MetaSynthetizedPropertyInitializer();
			__tmp336 = factory.MetaTypeOfExpression();
			__tmp337 = factory.MetaInheritedPropertyInitializer();
			__tmp338 = factory.MetaTypeOfExpression();
			MetaTypeOfExpression = factory.MetaClass();
			MetaTypeOfExpression_TypeReferenceProperty = factory.MetaProperty();
			__tmp339 = factory.MetaConstructor();
			__tmp340 = factory.MetaSynthetizedPropertyInitializer();
			__tmp341 = factory.MetaTypeOfExpression();
			MetaConditionalExpression = factory.MetaClass();
			MetaConditionalExpression_ConditionProperty = factory.MetaProperty();
			MetaConditionalExpression_BalancedTypeProperty = factory.MetaProperty();
			MetaConditionalExpression_ThenProperty = factory.MetaProperty();
			MetaConditionalExpression_ElseProperty = factory.MetaProperty();
			__tmp342 = factory.MetaConstructor();
			__tmp343 = factory.MetaInheritedPropertyInitializer();
			__tmp344 = factory.MetaTypeOfExpression();
			__tmp345 = factory.MetaSynthetizedPropertyInitializer();
			__tmp346 = factory.MetaFunctionCallExpression();
			__tmp347 = factory.MetaIdentifierExpression();
			__tmp348 = factory.MetaMemberAccessExpression();
			__tmp349 = factory.MetaIdentifierExpression();
			__tmp350 = factory.MetaMemberAccessExpression();
			__tmp351 = factory.MetaIdentifierExpression();
			__tmp352 = factory.MetaInheritedPropertyInitializer();
			__tmp353 = factory.MetaIdentifierExpression();
			__tmp354 = factory.MetaInheritedPropertyInitializer();
			__tmp355 = factory.MetaIdentifierExpression();
			MetaConstantExpression = factory.MetaClass();
			MetaConstantExpression_ValueProperty = factory.MetaProperty();
			__tmp356 = factory.MetaConstructor();
			__tmp357 = factory.MetaSynthetizedPropertyInitializer();
			__tmp358 = factory.MetaFunctionCallExpression();
			__tmp359 = factory.MetaIdentifierExpression();
			__tmp360 = factory.MetaIdentifierExpression();
			MetaIdentifierExpression = factory.MetaClass();
			MetaIdentifierExpression_NameProperty = factory.MetaProperty();
			__tmp361 = factory.MetaConstructor();
			__tmp362 = factory.MetaSynthetizedPropertyInitializer();
			__tmp363 = factory.MetaFunctionCallExpression();
			__tmp364 = factory.MetaIdentifierExpression();
			__tmp365 = factory.MetaIdentifierExpression();
			MetaMemberAccessExpression = factory.MetaClass();
			MetaMemberAccessExpression_ExpressionProperty = factory.MetaProperty();
			MetaMemberAccessExpression_NameProperty = factory.MetaProperty();
			__tmp366 = factory.MetaConstructor();
			__tmp367 = factory.MetaInheritedPropertyInitializer();
			__tmp368 = factory.MetaTypeOfExpression();
			__tmp369 = factory.MetaSynthetizedPropertyInitializer();
			__tmp370 = factory.MetaFunctionCallExpression();
			__tmp371 = factory.MetaIdentifierExpression();
			__tmp372 = factory.MetaMemberAccessExpression();
			__tmp373 = factory.MetaIdentifierExpression();
			__tmp374 = factory.MetaIdentifierExpression();
			MetaFunctionCallExpression = factory.MetaClass();
			MetaFunctionCallExpression_ExpressionProperty = factory.MetaProperty();
			__tmp375 = factory.MetaConstructor();
			__tmp376 = factory.MetaInheritedPropertyInitializer();
			__tmp377 = factory.MetaConstantExpression();
			__tmp378 = factory.MetaInheritedPropertyInitializer();
			__tmp379 = factory.MetaTypeOfExpression();
			__tmp380 = factory.MetaSynthetizedPropertyInitializer();
			__tmp381 = factory.MetaConditionalExpression();
			__tmp382 = factory.MetaTypeCheckExpression();
			__tmp383 = factory.MetaIdentifierExpression();
			__tmp384 = factory.MetaMemberAccessExpression();
			__tmp385 = factory.MetaBracketExpression();
			__tmp386 = factory.MetaTypeCastExpression();
			__tmp387 = factory.MetaIdentifierExpression();
			__tmp388 = factory.MetaFunctionCallExpression();
			__tmp389 = factory.MetaIdentifierExpression();
			__tmp390 = factory.MetaMemberAccessExpression();
			__tmp391 = factory.MetaIdentifierExpression();
			__tmp392 = factory.MetaSynthetizedPropertyInitializer();
			__tmp393 = factory.MetaFunctionCallExpression();
			__tmp394 = factory.MetaIdentifierExpression();
			__tmp395 = factory.MetaIdentifierExpression();
			MetaIndexerExpression = factory.MetaClass();
			MetaIndexerExpression_ExpressionProperty = factory.MetaProperty();
			__tmp396 = factory.MetaConstructor();
			__tmp397 = factory.MetaInheritedPropertyInitializer();
			__tmp398 = factory.MetaConstantExpression();
			__tmp399 = factory.MetaInheritedPropertyInitializer();
			__tmp400 = factory.MetaTypeOfExpression();
			__tmp401 = factory.MetaSynthetizedPropertyInitializer();
			__tmp402 = factory.MetaConditionalExpression();
			__tmp403 = factory.MetaTypeCheckExpression();
			__tmp404 = factory.MetaIdentifierExpression();
			__tmp405 = factory.MetaMemberAccessExpression();
			__tmp406 = factory.MetaBracketExpression();
			__tmp407 = factory.MetaTypeCastExpression();
			__tmp408 = factory.MetaIdentifierExpression();
			__tmp409 = factory.MetaFunctionCallExpression();
			__tmp410 = factory.MetaIdentifierExpression();
			__tmp411 = factory.MetaMemberAccessExpression();
			__tmp412 = factory.MetaIdentifierExpression();
			MetaNewExpression = factory.MetaClass();
			MetaNewExpression_TypeReferenceProperty = factory.MetaProperty();
			__tmp413 = factory.MetaCollectionType();
			MetaNewExpression_PropertyInitializersProperty = factory.MetaProperty();
			__tmp414 = factory.MetaConstructor();
			__tmp415 = factory.MetaSynthetizedPropertyInitializer();
			__tmp416 = factory.MetaIdentifierExpression();
			MetaNewPropertyInitializer = factory.MetaClass();
			MetaNewPropertyInitializer_ParentProperty = factory.MetaProperty();
			MetaNewPropertyInitializer_PropertyNameProperty = factory.MetaProperty();
			MetaNewPropertyInitializer_ValueProperty = factory.MetaProperty();
			MetaNewPropertyInitializer_PropertyProperty = factory.MetaProperty();
			__tmp417 = factory.MetaConstructor();
			__tmp418 = factory.MetaSynthetizedPropertyInitializer();
			__tmp419 = factory.MetaFunctionCallExpression();
			__tmp420 = factory.MetaIdentifierExpression();
			__tmp421 = factory.MetaFunctionCallExpression();
			__tmp422 = factory.MetaIdentifierExpression();
			__tmp423 = factory.MetaMemberAccessExpression();
			__tmp424 = factory.MetaIdentifierExpression();
			__tmp425 = factory.MetaIdentifierExpression();
			__tmp426 = factory.MetaInheritedPropertyInitializer();
			__tmp427 = factory.MetaFunctionCallExpression();
			__tmp428 = factory.MetaIdentifierExpression();
			__tmp429 = factory.MetaIdentifierExpression();
			MetaNewCollectionExpression = factory.MetaClass();
			MetaNewCollectionExpression_TypeReferenceProperty = factory.MetaProperty();
			__tmp430 = factory.MetaCollectionType();
			MetaNewCollectionExpression_ValuesProperty = factory.MetaProperty();
			__tmp431 = factory.MetaConstructor();
			__tmp432 = factory.MetaSynthetizedPropertyInitializer();
			__tmp433 = factory.MetaIdentifierExpression();
			MetaOperatorExpression = factory.MetaClass();
			MetaOperatorExpression_NameProperty = factory.MetaProperty();
			__tmp434 = factory.MetaConstructor();
			__tmp435 = factory.MetaSynthetizedPropertyInitializer();
			__tmp436 = factory.MetaFunctionCallExpression();
			__tmp437 = factory.MetaIdentifierExpression();
			__tmp438 = factory.MetaIdentifierExpression();
			MetaUnaryExpression = factory.MetaClass();
			__tmp439 = factory.MetaConstructor();
			MetaUnaryExpression_ExpressionProperty = factory.MetaProperty();
			MetaUnaryPlusExpression = factory.MetaClass();
			__tmp440 = factory.MetaConstructor();
			__tmp441 = factory.MetaSynthetizedPropertyInitializer();
			__tmp442 = factory.MetaConstantExpression();
			MetaNegateExpression = factory.MetaClass();
			__tmp443 = factory.MetaConstructor();
			__tmp444 = factory.MetaSynthetizedPropertyInitializer();
			__tmp445 = factory.MetaConstantExpression();
			MetaOnesComplementExpression = factory.MetaClass();
			__tmp446 = factory.MetaConstructor();
			__tmp447 = factory.MetaSynthetizedPropertyInitializer();
			__tmp448 = factory.MetaConstantExpression();
			MetaNotExpression = factory.MetaClass();
			__tmp449 = factory.MetaConstructor();
			__tmp450 = factory.MetaSynthetizedPropertyInitializer();
			__tmp451 = factory.MetaConstantExpression();
			MetaUnaryAssignExpression = factory.MetaClass();
			MetaPostIncrementAssignExpression = factory.MetaClass();
			__tmp452 = factory.MetaConstructor();
			__tmp453 = factory.MetaSynthetizedPropertyInitializer();
			__tmp454 = factory.MetaConstantExpression();
			MetaPostDecrementAssignExpression = factory.MetaClass();
			__tmp455 = factory.MetaConstructor();
			__tmp456 = factory.MetaSynthetizedPropertyInitializer();
			__tmp457 = factory.MetaConstantExpression();
			MetaPreIncrementAssignExpression = factory.MetaClass();
			__tmp458 = factory.MetaConstructor();
			__tmp459 = factory.MetaSynthetizedPropertyInitializer();
			__tmp460 = factory.MetaConstantExpression();
			MetaPreDecrementAssignExpression = factory.MetaClass();
			__tmp461 = factory.MetaConstructor();
			__tmp462 = factory.MetaSynthetizedPropertyInitializer();
			__tmp463 = factory.MetaConstantExpression();
			MetaBinaryExpression = factory.MetaClass();
			__tmp464 = factory.MetaConstructor();
			MetaBinaryExpression_LeftProperty = factory.MetaProperty();
			MetaBinaryExpression_RightProperty = factory.MetaProperty();
			MetaBinaryArithmeticExpression = factory.MetaClass();
			MetaMultiplyExpression = factory.MetaClass();
			__tmp465 = factory.MetaConstructor();
			__tmp466 = factory.MetaSynthetizedPropertyInitializer();
			__tmp467 = factory.MetaConstantExpression();
			MetaDivideExpression = factory.MetaClass();
			__tmp468 = factory.MetaConstructor();
			__tmp469 = factory.MetaSynthetizedPropertyInitializer();
			__tmp470 = factory.MetaConstantExpression();
			MetaModuloExpression = factory.MetaClass();
			__tmp471 = factory.MetaConstructor();
			__tmp472 = factory.MetaSynthetizedPropertyInitializer();
			__tmp473 = factory.MetaConstantExpression();
			MetaAddExpression = factory.MetaClass();
			__tmp474 = factory.MetaConstructor();
			__tmp475 = factory.MetaSynthetizedPropertyInitializer();
			__tmp476 = factory.MetaConstantExpression();
			MetaSubtractExpression = factory.MetaClass();
			__tmp477 = factory.MetaConstructor();
			__tmp478 = factory.MetaSynthetizedPropertyInitializer();
			__tmp479 = factory.MetaConstantExpression();
			MetaLeftShiftExpression = factory.MetaClass();
			__tmp480 = factory.MetaConstructor();
			__tmp481 = factory.MetaSynthetizedPropertyInitializer();
			__tmp482 = factory.MetaConstantExpression();
			MetaRightShiftExpression = factory.MetaClass();
			__tmp483 = factory.MetaConstructor();
			__tmp484 = factory.MetaSynthetizedPropertyInitializer();
			__tmp485 = factory.MetaConstantExpression();
			MetaBinaryComparisonExpression = factory.MetaClass();
			MetaLessThanExpression = factory.MetaClass();
			__tmp486 = factory.MetaConstructor();
			__tmp487 = factory.MetaSynthetizedPropertyInitializer();
			__tmp488 = factory.MetaConstantExpression();
			MetaLessThanOrEqualExpression = factory.MetaClass();
			__tmp489 = factory.MetaConstructor();
			__tmp490 = factory.MetaSynthetizedPropertyInitializer();
			__tmp491 = factory.MetaConstantExpression();
			MetaGreaterThanExpression = factory.MetaClass();
			__tmp492 = factory.MetaConstructor();
			__tmp493 = factory.MetaSynthetizedPropertyInitializer();
			__tmp494 = factory.MetaConstantExpression();
			MetaGreaterThanOrEqualExpression = factory.MetaClass();
			__tmp495 = factory.MetaConstructor();
			__tmp496 = factory.MetaSynthetizedPropertyInitializer();
			__tmp497 = factory.MetaConstantExpression();
			MetaEqualExpression = factory.MetaClass();
			__tmp498 = factory.MetaConstructor();
			__tmp499 = factory.MetaSynthetizedPropertyInitializer();
			__tmp500 = factory.MetaConstantExpression();
			MetaNotEqualExpression = factory.MetaClass();
			__tmp501 = factory.MetaConstructor();
			__tmp502 = factory.MetaSynthetizedPropertyInitializer();
			__tmp503 = factory.MetaConstantExpression();
			MetaBinaryLogicalExpression = factory.MetaClass();
			MetaAndExpression = factory.MetaClass();
			__tmp504 = factory.MetaConstructor();
			__tmp505 = factory.MetaSynthetizedPropertyInitializer();
			__tmp506 = factory.MetaConstantExpression();
			MetaOrExpression = factory.MetaClass();
			__tmp507 = factory.MetaConstructor();
			__tmp508 = factory.MetaSynthetizedPropertyInitializer();
			__tmp509 = factory.MetaConstantExpression();
			MetaExclusiveOrExpression = factory.MetaClass();
			__tmp510 = factory.MetaConstructor();
			__tmp511 = factory.MetaSynthetizedPropertyInitializer();
			__tmp512 = factory.MetaConstantExpression();
			MetaAndAlsoExpression = factory.MetaClass();
			__tmp513 = factory.MetaConstructor();
			__tmp514 = factory.MetaSynthetizedPropertyInitializer();
			__tmp515 = factory.MetaConstantExpression();
			MetaOrElseExpression = factory.MetaClass();
			__tmp516 = factory.MetaConstructor();
			__tmp517 = factory.MetaSynthetizedPropertyInitializer();
			__tmp518 = factory.MetaConstantExpression();
			MetaNullCoalescingExpression = factory.MetaClass();
			__tmp519 = factory.MetaConstructor();
			__tmp520 = factory.MetaSynthetizedPropertyInitializer();
			__tmp521 = factory.MetaConstantExpression();
			MetaAssignmentExpression = factory.MetaClass();
			__tmp522 = factory.MetaConstructor();
			__tmp523 = factory.MetaSynthetizedPropertyInitializer();
			__tmp524 = factory.MetaFunctionCallExpression();
			__tmp525 = factory.MetaIdentifierExpression();
			__tmp526 = factory.MetaIdentifierExpression();
			__tmp527 = factory.MetaInheritedPropertyInitializer();
			__tmp528 = factory.MetaIdentifierExpression();
			__tmp529 = factory.MetaInheritedPropertyInitializer();
			__tmp530 = factory.MetaIdentifierExpression();
			MetaAssignExpression = factory.MetaClass();
			__tmp531 = factory.MetaConstructor();
			__tmp532 = factory.MetaSynthetizedPropertyInitializer();
			__tmp533 = factory.MetaConstantExpression();
			MetaArithmeticAssignmentExpression = factory.MetaClass();
			MetaMultiplyAssignExpression = factory.MetaClass();
			__tmp534 = factory.MetaConstructor();
			__tmp535 = factory.MetaSynthetizedPropertyInitializer();
			__tmp536 = factory.MetaConstantExpression();
			MetaDivideAssignExpression = factory.MetaClass();
			__tmp537 = factory.MetaConstructor();
			__tmp538 = factory.MetaSynthetizedPropertyInitializer();
			__tmp539 = factory.MetaConstantExpression();
			MetaModuloAssignExpression = factory.MetaClass();
			__tmp540 = factory.MetaConstructor();
			__tmp541 = factory.MetaSynthetizedPropertyInitializer();
			__tmp542 = factory.MetaConstantExpression();
			MetaAddAssignExpression = factory.MetaClass();
			__tmp543 = factory.MetaConstructor();
			__tmp544 = factory.MetaSynthetizedPropertyInitializer();
			__tmp545 = factory.MetaConstantExpression();
			MetaSubtractAssignExpression = factory.MetaClass();
			__tmp546 = factory.MetaConstructor();
			__tmp547 = factory.MetaSynthetizedPropertyInitializer();
			__tmp548 = factory.MetaConstantExpression();
			MetaLeftShiftAssignExpression = factory.MetaClass();
			__tmp549 = factory.MetaConstructor();
			__tmp550 = factory.MetaSynthetizedPropertyInitializer();
			__tmp551 = factory.MetaConstantExpression();
			MetaRightShiftAssignExpression = factory.MetaClass();
			__tmp552 = factory.MetaConstructor();
			__tmp553 = factory.MetaSynthetizedPropertyInitializer();
			__tmp554 = factory.MetaConstantExpression();
			MetaLogicalAssignmentExpression = factory.MetaClass();
			MetaAndAssignExpression = factory.MetaClass();
			__tmp555 = factory.MetaConstructor();
			__tmp556 = factory.MetaSynthetizedPropertyInitializer();
			__tmp557 = factory.MetaConstantExpression();
			MetaExclusiveOrAssignExpression = factory.MetaClass();
			__tmp558 = factory.MetaConstructor();
			__tmp559 = factory.MetaSynthetizedPropertyInitializer();
			__tmp560 = factory.MetaConstantExpression();
			MetaOrAssignExpression = factory.MetaClass();
			__tmp561 = factory.MetaConstructor();
			__tmp562 = factory.MetaSynthetizedPropertyInitializer();
			__tmp563 = factory.MetaConstantExpression();
			
	
			__tmp1.Name = "object";
			__tmp1.Documentation = null;
			__tmp2.Name = "string";
			__tmp2.Documentation = null;
			__tmp3.Name = "int";
			__tmp3.Documentation = null;
			__tmp4.Name = "long";
			__tmp4.Documentation = null;
			__tmp5.Name = "float";
			__tmp5.Documentation = null;
			__tmp6.Name = "double";
			__tmp6.Documentation = null;
			__tmp7.Name = "byte";
			__tmp7.Documentation = null;
			__tmp8.Name = "bool";
			__tmp8.Documentation = null;
			__tmp9.Name = "void";
			__tmp9.Documentation = null;
			__tmp10.Name = "*none*";
			__tmp10.Documentation = null;
			__tmp11.Name = "*any*";
			__tmp11.Documentation = null;
			__tmp12.Name = "*error*";
			__tmp12.Documentation = null;
			__tmp13.Name = "ModelObject";
			__tmp13.Documentation = null;
			__tmp14.Name = "DefinitionList";
			__tmp14.Documentation = null;
			// __tmp15.Kind = null;
			__tmp15.InnerTypeLazy = () => __tmp13;
			// __tmp16.Parent = null;
			// __tmp16.MetaModel = null;
			__tmp16.Namespaces.AddLazy(() => __tmp17);
			__tmp16.Name = "MetaDslx";
			__tmp16.Documentation = null;
			__tmp17.ParentLazy = () => __tmp16;
			__tmp17.MetaModelLazy = () => __tmp18;
			__tmp17.Declarations.AddLazy(() => __tmp19);
			__tmp17.Declarations.AddLazy(() => __tmp23);
			__tmp17.Declarations.AddLazy(() => __tmp27);
			__tmp17.Declarations.AddLazy(() => __tmp31);
			__tmp17.Declarations.AddLazy(() => __tmp35);
			__tmp17.Declarations.AddLazy(() => __tmp39);
			__tmp17.Declarations.AddLazy(() => __tmp43);
			__tmp17.Declarations.AddLazy(() => __tmp47);
			__tmp17.Declarations.AddLazy(() => __tmp51);
			__tmp17.Declarations.AddLazy(() => __tmp55);
			__tmp17.Declarations.AddLazy(() => __tmp59);
			__tmp17.Declarations.AddLazy(() => __tmp63);
			__tmp17.Declarations.AddLazy(() => __tmp67);
			__tmp17.Declarations.AddLazy(() => __tmp71);
			__tmp17.Declarations.AddLazy(() => __tmp75);
			__tmp17.Declarations.AddLazy(() => TypeOf);
			__tmp17.Declarations.AddLazy(() => GetValueType);
			__tmp17.Declarations.AddLazy(() => GetReturnType);
			__tmp17.Declarations.AddLazy(() => CurrentType);
			__tmp17.Declarations.AddLazy(() => TypeCheck);
			__tmp17.Declarations.AddLazy(() => Balance);
			__tmp17.Declarations.AddLazy(() => Resolve1);
			__tmp17.Declarations.AddLazy(() => Resolve2);
			__tmp17.Declarations.AddLazy(() => ResolveType1);
			__tmp17.Declarations.AddLazy(() => ResolveType2);
			__tmp17.Declarations.AddLazy(() => ResolveName1);
			__tmp17.Declarations.AddLazy(() => ResolveName2);
			__tmp17.Declarations.AddLazy(() => ToDefinitionList);
			__tmp17.Declarations.AddLazy(() => Bind1);
			__tmp17.Declarations.AddLazy(() => Bind2);
			__tmp17.Declarations.AddLazy(() => MetaAnnotatedElement);
			__tmp17.Declarations.AddLazy(() => MetaDocumentedElement);
			__tmp17.Declarations.AddLazy(() => MetaNamedElement);
			__tmp17.Declarations.AddLazy(() => MetaTypedElement);
			__tmp17.Declarations.AddLazy(() => MetaType);
			__tmp17.Declarations.AddLazy(() => MetaAnnotation);
			__tmp17.Declarations.AddLazy(() => MetaAnnotationProperty);
			__tmp17.Declarations.AddLazy(() => MetaNamespace);
			__tmp17.Declarations.AddLazy(() => MetaDeclaration);
			__tmp17.Declarations.AddLazy(() => MetaModel);
			__tmp17.Declarations.AddLazy(() => MetaCollectionKind);
			__tmp17.Declarations.AddLazy(() => MetaCollectionType);
			__tmp17.Declarations.AddLazy(() => MetaNullableType);
			__tmp17.Declarations.AddLazy(() => MetaPrimitiveType);
			__tmp17.Declarations.AddLazy(() => MetaEnum);
			__tmp17.Declarations.AddLazy(() => MetaEnumLiteral);
			__tmp17.Declarations.AddLazy(() => MetaClass);
			__tmp17.Declarations.AddLazy(() => MetaFunctionType);
			__tmp17.Declarations.AddLazy(() => MetaFunction);
			__tmp17.Declarations.AddLazy(() => MetaGlobalFunction);
			__tmp17.Declarations.AddLazy(() => MetaOperation);
			__tmp17.Declarations.AddLazy(() => MetaConstant);
			__tmp17.Declarations.AddLazy(() => MetaConstructor);
			__tmp17.Declarations.AddLazy(() => MetaParameter);
			__tmp17.Declarations.AddLazy(() => MetaPropertyKind);
			__tmp17.Declarations.AddLazy(() => MetaProperty);
			__tmp17.Declarations.AddLazy(() => MetaPropertyInitializer);
			__tmp17.Declarations.AddLazy(() => MetaSynthetizedPropertyInitializer);
			__tmp17.Declarations.AddLazy(() => MetaInheritedPropertyInitializer);
			__tmp17.Declarations.AddLazy(() => MetaExpression);
			__tmp17.Declarations.AddLazy(() => MetaBracketExpression);
			__tmp17.Declarations.AddLazy(() => MetaBoundExpression);
			__tmp17.Declarations.AddLazy(() => MetaThisExpression);
			__tmp17.Declarations.AddLazy(() => MetaNullExpression);
			__tmp17.Declarations.AddLazy(() => MetaTypeConversionExpression);
			__tmp17.Declarations.AddLazy(() => MetaTypeAsExpression);
			__tmp17.Declarations.AddLazy(() => MetaTypeCastExpression);
			__tmp17.Declarations.AddLazy(() => MetaTypeCheckExpression);
			__tmp17.Declarations.AddLazy(() => MetaTypeOfExpression);
			__tmp17.Declarations.AddLazy(() => MetaConditionalExpression);
			__tmp17.Declarations.AddLazy(() => MetaConstantExpression);
			__tmp17.Declarations.AddLazy(() => MetaIdentifierExpression);
			__tmp17.Declarations.AddLazy(() => MetaMemberAccessExpression);
			__tmp17.Declarations.AddLazy(() => MetaFunctionCallExpression);
			__tmp17.Declarations.AddLazy(() => MetaIndexerExpression);
			__tmp17.Declarations.AddLazy(() => MetaNewExpression);
			__tmp17.Declarations.AddLazy(() => MetaNewPropertyInitializer);
			__tmp17.Declarations.AddLazy(() => MetaNewCollectionExpression);
			__tmp17.Declarations.AddLazy(() => MetaOperatorExpression);
			__tmp17.Declarations.AddLazy(() => MetaUnaryExpression);
			__tmp17.Declarations.AddLazy(() => MetaUnaryPlusExpression);
			__tmp17.Declarations.AddLazy(() => MetaNegateExpression);
			__tmp17.Declarations.AddLazy(() => MetaOnesComplementExpression);
			__tmp17.Declarations.AddLazy(() => MetaNotExpression);
			__tmp17.Declarations.AddLazy(() => MetaUnaryAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaPostIncrementAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaPostDecrementAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaPreIncrementAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaPreDecrementAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaBinaryExpression);
			__tmp17.Declarations.AddLazy(() => MetaBinaryArithmeticExpression);
			__tmp17.Declarations.AddLazy(() => MetaMultiplyExpression);
			__tmp17.Declarations.AddLazy(() => MetaDivideExpression);
			__tmp17.Declarations.AddLazy(() => MetaModuloExpression);
			__tmp17.Declarations.AddLazy(() => MetaAddExpression);
			__tmp17.Declarations.AddLazy(() => MetaSubtractExpression);
			__tmp17.Declarations.AddLazy(() => MetaLeftShiftExpression);
			__tmp17.Declarations.AddLazy(() => MetaRightShiftExpression);
			__tmp17.Declarations.AddLazy(() => MetaBinaryComparisonExpression);
			__tmp17.Declarations.AddLazy(() => MetaLessThanExpression);
			__tmp17.Declarations.AddLazy(() => MetaLessThanOrEqualExpression);
			__tmp17.Declarations.AddLazy(() => MetaGreaterThanExpression);
			__tmp17.Declarations.AddLazy(() => MetaGreaterThanOrEqualExpression);
			__tmp17.Declarations.AddLazy(() => MetaEqualExpression);
			__tmp17.Declarations.AddLazy(() => MetaNotEqualExpression);
			__tmp17.Declarations.AddLazy(() => MetaBinaryLogicalExpression);
			__tmp17.Declarations.AddLazy(() => MetaAndExpression);
			__tmp17.Declarations.AddLazy(() => MetaOrExpression);
			__tmp17.Declarations.AddLazy(() => MetaExclusiveOrExpression);
			__tmp17.Declarations.AddLazy(() => MetaAndAlsoExpression);
			__tmp17.Declarations.AddLazy(() => MetaOrElseExpression);
			__tmp17.Declarations.AddLazy(() => MetaNullCoalescingExpression);
			__tmp17.Declarations.AddLazy(() => MetaAssignmentExpression);
			__tmp17.Declarations.AddLazy(() => MetaAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaArithmeticAssignmentExpression);
			__tmp17.Declarations.AddLazy(() => MetaMultiplyAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaDivideAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaModuloAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaAddAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaSubtractAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaLeftShiftAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaRightShiftAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaLogicalAssignmentExpression);
			__tmp17.Declarations.AddLazy(() => MetaAndAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaExclusiveOrAssignExpression);
			__tmp17.Declarations.AddLazy(() => MetaOrAssignExpression);
			__tmp17.Name = "Core";
			__tmp17.Documentation = null;
			__tmp18.Uri = "http://metadslx.core/1.0";
			__tmp18.NamespaceLazy = () => __tmp17;
			__tmp18.Name = "Meta";
			__tmp18.Documentation = null;
			__tmp19.ValueLazy = () => __tmp20;
			__tmp19.TypeLazy = () => MetaPrimitiveType;
			__tmp19.NamespaceLazy = () => __tmp17;
			__tmp19.Name = "Object";
			__tmp19.Documentation = null;
			__tmp20.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp20.PropertyInitializers.AddLazy(() => __tmp21);
			__tmp20.TypeLazy = () => MetaPrimitiveType;
			__tmp21.ParentLazy = () => __tmp20;
			__tmp21.PropertyName = "Name";
			__tmp21.ValueLazy = () => __tmp22;
			__tmp21.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp22.Value = "object";
			__tmp22.TypeLazy = () => __tmp2;
			__tmp23.ValueLazy = () => __tmp24;
			__tmp23.TypeLazy = () => MetaPrimitiveType;
			__tmp23.NamespaceLazy = () => __tmp17;
			__tmp23.Name = "String";
			__tmp23.Documentation = null;
			__tmp24.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp24.PropertyInitializers.AddLazy(() => __tmp25);
			__tmp24.TypeLazy = () => MetaPrimitiveType;
			__tmp25.ParentLazy = () => __tmp24;
			__tmp25.PropertyName = "Name";
			__tmp25.ValueLazy = () => __tmp26;
			__tmp25.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp26.Value = "string";
			__tmp26.TypeLazy = () => __tmp2;
			__tmp27.ValueLazy = () => __tmp28;
			__tmp27.TypeLazy = () => MetaPrimitiveType;
			__tmp27.NamespaceLazy = () => __tmp17;
			__tmp27.Name = "Int";
			__tmp27.Documentation = null;
			__tmp28.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp28.PropertyInitializers.AddLazy(() => __tmp29);
			__tmp28.TypeLazy = () => MetaPrimitiveType;
			__tmp29.ParentLazy = () => __tmp28;
			__tmp29.PropertyName = "Name";
			__tmp29.ValueLazy = () => __tmp30;
			__tmp29.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp30.Value = "int";
			__tmp30.TypeLazy = () => __tmp2;
			__tmp31.ValueLazy = () => __tmp32;
			__tmp31.TypeLazy = () => MetaPrimitiveType;
			__tmp31.NamespaceLazy = () => __tmp17;
			__tmp31.Name = "Long";
			__tmp31.Documentation = null;
			__tmp32.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp32.PropertyInitializers.AddLazy(() => __tmp33);
			__tmp32.TypeLazy = () => MetaPrimitiveType;
			__tmp33.ParentLazy = () => __tmp32;
			__tmp33.PropertyName = "Name";
			__tmp33.ValueLazy = () => __tmp34;
			__tmp33.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp34.Value = "long";
			__tmp34.TypeLazy = () => __tmp2;
			__tmp35.ValueLazy = () => __tmp36;
			__tmp35.TypeLazy = () => MetaPrimitiveType;
			__tmp35.NamespaceLazy = () => __tmp17;
			__tmp35.Name = "Float";
			__tmp35.Documentation = null;
			__tmp36.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp36.PropertyInitializers.AddLazy(() => __tmp37);
			__tmp36.TypeLazy = () => MetaPrimitiveType;
			__tmp37.ParentLazy = () => __tmp36;
			__tmp37.PropertyName = "Name";
			__tmp37.ValueLazy = () => __tmp38;
			__tmp37.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp38.Value = "float";
			__tmp38.TypeLazy = () => __tmp2;
			__tmp39.ValueLazy = () => __tmp40;
			__tmp39.TypeLazy = () => MetaPrimitiveType;
			__tmp39.NamespaceLazy = () => __tmp17;
			__tmp39.Name = "Double";
			__tmp39.Documentation = null;
			__tmp40.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp40.PropertyInitializers.AddLazy(() => __tmp41);
			__tmp40.TypeLazy = () => MetaPrimitiveType;
			__tmp41.ParentLazy = () => __tmp40;
			__tmp41.PropertyName = "Name";
			__tmp41.ValueLazy = () => __tmp42;
			__tmp41.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp42.Value = "double";
			__tmp42.TypeLazy = () => __tmp2;
			__tmp43.ValueLazy = () => __tmp44;
			__tmp43.TypeLazy = () => MetaPrimitiveType;
			__tmp43.NamespaceLazy = () => __tmp17;
			__tmp43.Name = "Byte";
			__tmp43.Documentation = null;
			__tmp44.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp44.PropertyInitializers.AddLazy(() => __tmp45);
			__tmp44.TypeLazy = () => MetaPrimitiveType;
			__tmp45.ParentLazy = () => __tmp44;
			__tmp45.PropertyName = "Name";
			__tmp45.ValueLazy = () => __tmp46;
			__tmp45.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp46.Value = "byte";
			__tmp46.TypeLazy = () => __tmp2;
			__tmp47.ValueLazy = () => __tmp48;
			__tmp47.TypeLazy = () => MetaPrimitiveType;
			__tmp47.NamespaceLazy = () => __tmp17;
			__tmp47.Name = "Bool";
			__tmp47.Documentation = null;
			__tmp48.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp48.PropertyInitializers.AddLazy(() => __tmp49);
			__tmp48.TypeLazy = () => MetaPrimitiveType;
			__tmp49.ParentLazy = () => __tmp48;
			__tmp49.PropertyName = "Name";
			__tmp49.ValueLazy = () => __tmp50;
			__tmp49.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp50.Value = "bool";
			__tmp50.TypeLazy = () => __tmp2;
			__tmp51.ValueLazy = () => __tmp52;
			__tmp51.TypeLazy = () => MetaPrimitiveType;
			__tmp51.NamespaceLazy = () => __tmp17;
			__tmp51.Name = "Void";
			__tmp51.Documentation = null;
			__tmp52.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp52.PropertyInitializers.AddLazy(() => __tmp53);
			__tmp52.TypeLazy = () => MetaPrimitiveType;
			__tmp53.ParentLazy = () => __tmp52;
			__tmp53.PropertyName = "Name";
			__tmp53.ValueLazy = () => __tmp54;
			__tmp53.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp54.Value = "void";
			__tmp54.TypeLazy = () => __tmp2;
			__tmp55.ValueLazy = () => __tmp56;
			__tmp55.TypeLazy = () => MetaPrimitiveType;
			__tmp55.NamespaceLazy = () => __tmp17;
			__tmp55.Name = "None";
			__tmp55.Documentation = null;
			__tmp56.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp56.PropertyInitializers.AddLazy(() => __tmp57);
			__tmp56.TypeLazy = () => MetaPrimitiveType;
			__tmp57.ParentLazy = () => __tmp56;
			__tmp57.PropertyName = "Name";
			__tmp57.ValueLazy = () => __tmp58;
			__tmp57.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp58.Value = "*none*";
			__tmp58.TypeLazy = () => __tmp2;
			__tmp59.ValueLazy = () => __tmp60;
			__tmp59.TypeLazy = () => MetaPrimitiveType;
			__tmp59.NamespaceLazy = () => __tmp17;
			__tmp59.Name = "Any";
			__tmp59.Documentation = null;
			__tmp60.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp60.PropertyInitializers.AddLazy(() => __tmp61);
			__tmp60.TypeLazy = () => MetaPrimitiveType;
			__tmp61.ParentLazy = () => __tmp60;
			__tmp61.PropertyName = "Name";
			__tmp61.ValueLazy = () => __tmp62;
			__tmp61.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp62.Value = "*any*";
			__tmp62.TypeLazy = () => __tmp2;
			__tmp63.ValueLazy = () => __tmp64;
			__tmp63.TypeLazy = () => MetaPrimitiveType;
			__tmp63.NamespaceLazy = () => __tmp17;
			__tmp63.Name = "Error";
			__tmp63.Documentation = null;
			__tmp64.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp64.PropertyInitializers.AddLazy(() => __tmp65);
			__tmp64.TypeLazy = () => MetaPrimitiveType;
			__tmp65.ParentLazy = () => __tmp64;
			__tmp65.PropertyName = "Name";
			__tmp65.ValueLazy = () => __tmp66;
			__tmp65.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp66.Value = "*error*";
			__tmp66.TypeLazy = () => __tmp2;
			__tmp67.ValueLazy = () => __tmp68;
			__tmp67.TypeLazy = () => MetaPrimitiveType;
			__tmp67.NamespaceLazy = () => __tmp17;
			__tmp67.Name = "ModelObject";
			__tmp67.Documentation = null;
			__tmp68.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp68.PropertyInitializers.AddLazy(() => __tmp69);
			__tmp68.TypeLazy = () => MetaPrimitiveType;
			__tmp69.ParentLazy = () => __tmp68;
			__tmp69.PropertyName = "Name";
			__tmp69.ValueLazy = () => __tmp70;
			__tmp69.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp70.Value = "ModelObject";
			__tmp70.TypeLazy = () => __tmp2;
			__tmp71.ValueLazy = () => __tmp72;
			__tmp71.TypeLazy = () => MetaPrimitiveType;
			__tmp71.NamespaceLazy = () => __tmp17;
			__tmp71.Name = "DefinitionList";
			__tmp71.Documentation = null;
			__tmp72.TypeReferenceLazy = () => MetaPrimitiveType;
			__tmp72.PropertyInitializers.AddLazy(() => __tmp73);
			__tmp72.TypeLazy = () => MetaPrimitiveType;
			__tmp73.ParentLazy = () => __tmp72;
			__tmp73.PropertyName = "Name";
			__tmp73.ValueLazy = () => __tmp74;
			__tmp73.PropertyLazy = () => MetaNamedElement_NameProperty;
			__tmp74.Value = "DefinitionList";
			__tmp74.TypeLazy = () => __tmp2;
			__tmp75.ValueLazy = () => __tmp76;
			__tmp75.TypeLazy = () => MetaCollectionType;
			__tmp75.NamespaceLazy = () => __tmp17;
			__tmp75.Name = "ModelObjectList";
			__tmp75.Documentation = null;
			__tmp76.TypeReferenceLazy = () => MetaCollectionType;
			__tmp76.PropertyInitializers.AddLazy(() => __tmp77);
			__tmp76.TypeLazy = () => MetaCollectionType;
			__tmp77.ParentLazy = () => __tmp76;
			__tmp77.PropertyName = "InnerType";
			__tmp77.ValueLazy = () => __tmp78;
			__tmp77.PropertyLazy = () => MetaCollectionType_InnerTypeProperty;
			__tmp78.TypeReferenceLazy = () => __tmp13;
			// __tmp78.Type = null;
			__tmp79.Properties.AddLazy(() => __tmp80);
			__tmp79.Name = "BuiltInName";
			__tmp79.Documentation = null;
			__tmp80.ValueLazy = () => __tmp81;
			__tmp80.Name = "Name";
			__tmp80.Documentation = null;
			__tmp81.Value = "TypeOf";
			__tmp81.TypeLazy = () => __tmp2;
			TypeOf.Parameters.AddLazy(() => __tmp84);
			TypeOf.ReturnTypeLazy = () => MetaType;
			TypeOf.Name = "typeof";
			TypeOf.Documentation = null;
			TypeOf.Annotations.AddLazy(() => __tmp79);
			TypeOf.NamespaceLazy = () => __tmp17;
			__tmp82.ParameterTypes.AddLazy(() => __tmp1);
			__tmp82.ReturnTypeLazy = () => MetaType;
			__tmp83.ParameterTypes.AddLazy(() => __tmp1);
			__tmp83.ReturnTypeLazy = () => MetaType;
			__tmp84.FunctionLazy = () => TypeOf;
			__tmp84.Name = "type";
			__tmp84.Documentation = null;
			__tmp84.TypeLazy = () => __tmp1;
			__tmp85.Properties.AddLazy(() => __tmp86);
			__tmp85.Name = "BuiltInName";
			__tmp85.Documentation = null;
			__tmp86.ValueLazy = () => __tmp87;
			__tmp86.Name = "Name";
			__tmp86.Documentation = null;
			__tmp87.Value = "GetValueType";
			__tmp87.TypeLazy = () => __tmp2;
			GetValueType.Parameters.AddLazy(() => __tmp90);
			GetValueType.ReturnTypeLazy = () => MetaType;
			GetValueType.Name = "get_type";
			GetValueType.Documentation = null;
			GetValueType.Annotations.AddLazy(() => __tmp85);
			GetValueType.NamespaceLazy = () => __tmp17;
			__tmp88.ParameterTypes.AddLazy(() => __tmp1);
			__tmp88.ReturnTypeLazy = () => MetaType;
			__tmp89.ParameterTypes.AddLazy(() => __tmp1);
			__tmp89.ReturnTypeLazy = () => MetaType;
			__tmp90.FunctionLazy = () => GetValueType;
			__tmp90.Name = "value";
			__tmp90.Documentation = null;
			__tmp90.TypeLazy = () => __tmp1;
			__tmp91.Properties.AddLazy(() => __tmp92);
			__tmp91.Name = "BuiltInName";
			__tmp91.Documentation = null;
			__tmp92.ValueLazy = () => __tmp93;
			__tmp92.Name = "Name";
			__tmp92.Documentation = null;
			__tmp93.Value = "GetReturnType";
			__tmp93.TypeLazy = () => __tmp2;
			GetReturnType.Parameters.AddLazy(() => __tmp96);
			GetReturnType.ReturnTypeLazy = () => MetaType;
			GetReturnType.Name = "get_return_type";
			GetReturnType.Documentation = null;
			GetReturnType.Annotations.AddLazy(() => __tmp91);
			GetReturnType.NamespaceLazy = () => __tmp17;
			__tmp94.ParameterTypes.AddLazy(() => __tmp1);
			__tmp94.ReturnTypeLazy = () => MetaType;
			__tmp95.ParameterTypes.AddLazy(() => __tmp1);
			__tmp95.ReturnTypeLazy = () => MetaType;
			__tmp96.FunctionLazy = () => GetReturnType;
			__tmp96.Name = "value";
			__tmp96.Documentation = null;
			__tmp96.TypeLazy = () => __tmp1;
			__tmp97.Properties.AddLazy(() => __tmp98);
			__tmp97.Name = "BuiltInName";
			__tmp97.Documentation = null;
			__tmp98.ValueLazy = () => __tmp99;
			__tmp98.Name = "Name";
			__tmp98.Documentation = null;
			__tmp99.Value = "CurrentType";
			__tmp99.TypeLazy = () => __tmp2;
			CurrentType.Parameters.AddLazy(() => __tmp102);
			CurrentType.ReturnTypeLazy = () => MetaType;
			CurrentType.Name = "current_type";
			CurrentType.Documentation = null;
			CurrentType.Annotations.AddLazy(() => __tmp97);
			CurrentType.NamespaceLazy = () => __tmp17;
			__tmp100.ParameterTypes.AddLazy(() => __tmp13);
			__tmp100.ReturnTypeLazy = () => MetaType;
			__tmp101.ParameterTypes.AddLazy(() => __tmp13);
			__tmp101.ReturnTypeLazy = () => MetaType;
			__tmp102.FunctionLazy = () => CurrentType;
			__tmp102.Name = "symbol";
			__tmp102.Documentation = null;
			__tmp102.TypeLazy = () => __tmp13;
			__tmp103.Properties.AddLazy(() => __tmp104);
			__tmp103.Name = "BuiltInName";
			__tmp103.Documentation = null;
			__tmp104.ValueLazy = () => __tmp105;
			__tmp104.Name = "Name";
			__tmp104.Documentation = null;
			__tmp105.Value = "TypeCheck";
			__tmp105.TypeLazy = () => __tmp2;
			TypeCheck.Parameters.AddLazy(() => __tmp108);
			TypeCheck.ReturnTypeLazy = () => __tmp8;
			TypeCheck.Name = "type_check";
			TypeCheck.Documentation = null;
			TypeCheck.Annotations.AddLazy(() => __tmp103);
			TypeCheck.NamespaceLazy = () => __tmp17;
			__tmp106.ParameterTypes.AddLazy(() => __tmp13);
			__tmp106.ReturnTypeLazy = () => __tmp8;
			__tmp107.ParameterTypes.AddLazy(() => __tmp13);
			__tmp107.ReturnTypeLazy = () => __tmp8;
			__tmp108.FunctionLazy = () => TypeCheck;
			__tmp108.Name = "symbol";
			__tmp108.Documentation = null;
			__tmp108.TypeLazy = () => __tmp13;
			__tmp109.Properties.AddLazy(() => __tmp110);
			__tmp109.Name = "BuiltInName";
			__tmp109.Documentation = null;
			__tmp110.ValueLazy = () => __tmp111;
			__tmp110.Name = "Name";
			__tmp110.Documentation = null;
			__tmp111.Value = "Balance";
			__tmp111.TypeLazy = () => __tmp2;
			Balance.Parameters.AddLazy(() => __tmp114);
			Balance.Parameters.AddLazy(() => __tmp115);
			Balance.ReturnTypeLazy = () => MetaType;
			Balance.Name = "balance";
			Balance.Documentation = null;
			Balance.Annotations.AddLazy(() => __tmp109);
			Balance.NamespaceLazy = () => __tmp17;
			__tmp112.ParameterTypes.AddLazy(() => MetaType);
			__tmp112.ParameterTypes.AddLazy(() => MetaType);
			__tmp112.ReturnTypeLazy = () => MetaType;
			__tmp113.ParameterTypes.AddLazy(() => MetaType);
			__tmp113.ParameterTypes.AddLazy(() => MetaType);
			__tmp113.ReturnTypeLazy = () => MetaType;
			__tmp114.FunctionLazy = () => Balance;
			__tmp114.Name = "left";
			__tmp114.Documentation = null;
			__tmp114.TypeLazy = () => MetaType;
			__tmp115.FunctionLazy = () => Balance;
			__tmp115.Name = "right";
			__tmp115.Documentation = null;
			__tmp115.TypeLazy = () => MetaType;
			__tmp116.Properties.AddLazy(() => __tmp117);
			__tmp116.Name = "BuiltInName";
			__tmp116.Documentation = null;
			__tmp117.ValueLazy = () => __tmp118;
			__tmp117.Name = "Name";
			__tmp117.Documentation = null;
			__tmp118.Value = "Resolve1";
			__tmp118.TypeLazy = () => __tmp2;
			Resolve1.Parameters.AddLazy(() => __tmp121);
			Resolve1.ReturnTypeLazy = () => __tmp14;
			Resolve1.Name = "resolve";
			Resolve1.Documentation = null;
			Resolve1.Annotations.AddLazy(() => __tmp116);
			Resolve1.NamespaceLazy = () => __tmp17;
			__tmp119.ParameterTypes.AddLazy(() => __tmp2);
			__tmp119.ReturnTypeLazy = () => __tmp14;
			__tmp120.ParameterTypes.AddLazy(() => __tmp2);
			__tmp120.ReturnTypeLazy = () => __tmp14;
			__tmp121.FunctionLazy = () => Resolve1;
			__tmp121.Name = "name";
			__tmp121.Documentation = null;
			__tmp121.TypeLazy = () => __tmp2;
			__tmp122.Properties.AddLazy(() => __tmp123);
			__tmp122.Name = "BuiltInName";
			__tmp122.Documentation = null;
			__tmp123.ValueLazy = () => __tmp124;
			__tmp123.Name = "Name";
			__tmp123.Documentation = null;
			__tmp124.Value = "Resolve2";
			__tmp124.TypeLazy = () => __tmp2;
			Resolve2.Parameters.AddLazy(() => __tmp127);
			Resolve2.Parameters.AddLazy(() => __tmp128);
			Resolve2.ReturnTypeLazy = () => __tmp14;
			Resolve2.Name = "resolve";
			Resolve2.Documentation = null;
			Resolve2.Annotations.AddLazy(() => __tmp122);
			Resolve2.NamespaceLazy = () => __tmp17;
			__tmp125.ParameterTypes.AddLazy(() => __tmp13);
			__tmp125.ParameterTypes.AddLazy(() => __tmp2);
			__tmp125.ReturnTypeLazy = () => __tmp14;
			__tmp126.ParameterTypes.AddLazy(() => __tmp13);
			__tmp126.ParameterTypes.AddLazy(() => __tmp2);
			__tmp126.ReturnTypeLazy = () => __tmp14;
			__tmp127.FunctionLazy = () => Resolve2;
			__tmp127.Name = "context";
			__tmp127.Documentation = null;
			__tmp127.TypeLazy = () => __tmp13;
			__tmp128.FunctionLazy = () => Resolve2;
			__tmp128.Name = "name";
			__tmp128.Documentation = null;
			__tmp128.TypeLazy = () => __tmp2;
			__tmp129.Properties.AddLazy(() => __tmp130);
			__tmp129.Name = "BuiltInName";
			__tmp129.Documentation = null;
			__tmp130.ValueLazy = () => __tmp131;
			__tmp130.Name = "Name";
			__tmp130.Documentation = null;
			__tmp131.Value = "ResolveType1";
			__tmp131.TypeLazy = () => __tmp2;
			ResolveType1.Parameters.AddLazy(() => __tmp134);
			ResolveType1.ReturnTypeLazy = () => __tmp14;
			ResolveType1.Name = "resolve_type";
			ResolveType1.Documentation = null;
			ResolveType1.Annotations.AddLazy(() => __tmp129);
			ResolveType1.NamespaceLazy = () => __tmp17;
			__tmp132.ParameterTypes.AddLazy(() => __tmp2);
			__tmp132.ReturnTypeLazy = () => __tmp14;
			__tmp133.ParameterTypes.AddLazy(() => __tmp2);
			__tmp133.ReturnTypeLazy = () => __tmp14;
			__tmp134.FunctionLazy = () => ResolveType1;
			__tmp134.Name = "name";
			__tmp134.Documentation = null;
			__tmp134.TypeLazy = () => __tmp2;
			__tmp135.Properties.AddLazy(() => __tmp136);
			__tmp135.Name = "BuiltInName";
			__tmp135.Documentation = null;
			__tmp136.ValueLazy = () => __tmp137;
			__tmp136.Name = "Name";
			__tmp136.Documentation = null;
			__tmp137.Value = "ResolveType2";
			__tmp137.TypeLazy = () => __tmp2;
			ResolveType2.Parameters.AddLazy(() => __tmp140);
			ResolveType2.Parameters.AddLazy(() => __tmp141);
			ResolveType2.ReturnTypeLazy = () => __tmp14;
			ResolveType2.Name = "resolve_type";
			ResolveType2.Documentation = null;
			ResolveType2.Annotations.AddLazy(() => __tmp135);
			ResolveType2.NamespaceLazy = () => __tmp17;
			__tmp138.ParameterTypes.AddLazy(() => __tmp13);
			__tmp138.ParameterTypes.AddLazy(() => __tmp2);
			__tmp138.ReturnTypeLazy = () => __tmp14;
			__tmp139.ParameterTypes.AddLazy(() => __tmp13);
			__tmp139.ParameterTypes.AddLazy(() => __tmp2);
			__tmp139.ReturnTypeLazy = () => __tmp14;
			__tmp140.FunctionLazy = () => ResolveType2;
			__tmp140.Name = "context";
			__tmp140.Documentation = null;
			__tmp140.TypeLazy = () => __tmp13;
			__tmp141.FunctionLazy = () => ResolveType2;
			__tmp141.Name = "name";
			__tmp141.Documentation = null;
			__tmp141.TypeLazy = () => __tmp2;
			__tmp142.Properties.AddLazy(() => __tmp143);
			__tmp142.Name = "BuiltInName";
			__tmp142.Documentation = null;
			__tmp143.ValueLazy = () => __tmp144;
			__tmp143.Name = "Name";
			__tmp143.Documentation = null;
			__tmp144.Value = "ResolveName1";
			__tmp144.TypeLazy = () => __tmp2;
			ResolveName1.Parameters.AddLazy(() => __tmp147);
			ResolveName1.ReturnTypeLazy = () => __tmp14;
			ResolveName1.Name = "resolve_name";
			ResolveName1.Documentation = null;
			ResolveName1.Annotations.AddLazy(() => __tmp142);
			ResolveName1.NamespaceLazy = () => __tmp17;
			__tmp145.ParameterTypes.AddLazy(() => __tmp2);
			__tmp145.ReturnTypeLazy = () => __tmp14;
			__tmp146.ParameterTypes.AddLazy(() => __tmp2);
			__tmp146.ReturnTypeLazy = () => __tmp14;
			__tmp147.FunctionLazy = () => ResolveName1;
			__tmp147.Name = "name";
			__tmp147.Documentation = null;
			__tmp147.TypeLazy = () => __tmp2;
			__tmp148.Properties.AddLazy(() => __tmp149);
			__tmp148.Name = "BuiltInName";
			__tmp148.Documentation = null;
			__tmp149.ValueLazy = () => __tmp150;
			__tmp149.Name = "Name";
			__tmp149.Documentation = null;
			__tmp150.Value = "ResolveName2";
			__tmp150.TypeLazy = () => __tmp2;
			ResolveName2.Parameters.AddLazy(() => __tmp153);
			ResolveName2.Parameters.AddLazy(() => __tmp154);
			ResolveName2.ReturnTypeLazy = () => __tmp14;
			ResolveName2.Name = "resolve_name";
			ResolveName2.Documentation = null;
			ResolveName2.Annotations.AddLazy(() => __tmp148);
			ResolveName2.NamespaceLazy = () => __tmp17;
			__tmp151.ParameterTypes.AddLazy(() => __tmp13);
			__tmp151.ParameterTypes.AddLazy(() => __tmp2);
			__tmp151.ReturnTypeLazy = () => __tmp14;
			__tmp152.ParameterTypes.AddLazy(() => __tmp13);
			__tmp152.ParameterTypes.AddLazy(() => __tmp2);
			__tmp152.ReturnTypeLazy = () => __tmp14;
			__tmp153.FunctionLazy = () => ResolveName2;
			__tmp153.Name = "context";
			__tmp153.Documentation = null;
			__tmp153.TypeLazy = () => __tmp13;
			__tmp154.FunctionLazy = () => ResolveName2;
			__tmp154.Name = "name";
			__tmp154.Documentation = null;
			__tmp154.TypeLazy = () => __tmp2;
			__tmp155.Properties.AddLazy(() => __tmp156);
			__tmp155.Name = "BuiltInName";
			__tmp155.Documentation = null;
			__tmp156.ValueLazy = () => __tmp157;
			__tmp156.Name = "Name";
			__tmp156.Documentation = null;
			__tmp157.Value = "ToDefinitionList";
			__tmp157.TypeLazy = () => __tmp2;
			ToDefinitionList.Parameters.AddLazy(() => __tmp160);
			ToDefinitionList.ReturnTypeLazy = () => __tmp14;
			ToDefinitionList.Name = "definition_list";
			ToDefinitionList.Documentation = null;
			ToDefinitionList.Annotations.AddLazy(() => __tmp155);
			ToDefinitionList.NamespaceLazy = () => __tmp17;
			__tmp158.ParameterTypes.AddLazy(() => __tmp13);
			__tmp158.ReturnTypeLazy = () => __tmp14;
			__tmp159.ParameterTypes.AddLazy(() => __tmp13);
			__tmp159.ReturnTypeLazy = () => __tmp14;
			__tmp160.FunctionLazy = () => ToDefinitionList;
			__tmp160.Name = "definition";
			__tmp160.Documentation = null;
			__tmp160.TypeLazy = () => __tmp13;
			__tmp161.Properties.AddLazy(() => __tmp162);
			__tmp161.Name = "BuiltInName";
			__tmp161.Documentation = null;
			__tmp162.ValueLazy = () => __tmp163;
			__tmp162.Name = "Name";
			__tmp162.Documentation = null;
			__tmp163.Value = "Bind1";
			__tmp163.TypeLazy = () => __tmp2;
			Bind1.Parameters.AddLazy(() => __tmp166);
			Bind1.ReturnTypeLazy = () => __tmp13;
			Bind1.Name = "bind";
			Bind1.Documentation = null;
			Bind1.Annotations.AddLazy(() => __tmp161);
			Bind1.NamespaceLazy = () => __tmp17;
			__tmp164.ParameterTypes.AddLazy(() => __tmp14);
			__tmp164.ReturnTypeLazy = () => __tmp13;
			__tmp165.ParameterTypes.AddLazy(() => __tmp14);
			__tmp165.ReturnTypeLazy = () => __tmp13;
			__tmp166.FunctionLazy = () => Bind1;
			__tmp166.Name = "definitions";
			__tmp166.Documentation = null;
			__tmp166.TypeLazy = () => __tmp14;
			__tmp167.Properties.AddLazy(() => __tmp168);
			__tmp167.Name = "BuiltInName";
			__tmp167.Documentation = null;
			__tmp168.ValueLazy = () => __tmp169;
			__tmp168.Name = "Name";
			__tmp168.Documentation = null;
			__tmp169.Value = "Bind2";
			__tmp169.TypeLazy = () => __tmp2;
			Bind2.Parameters.AddLazy(() => __tmp172);
			Bind2.Parameters.AddLazy(() => __tmp173);
			Bind2.ReturnTypeLazy = () => __tmp13;
			Bind2.Name = "bind";
			Bind2.Documentation = null;
			Bind2.Annotations.AddLazy(() => __tmp167);
			Bind2.NamespaceLazy = () => __tmp17;
			__tmp170.ParameterTypes.AddLazy(() => __tmp13);
			__tmp170.ParameterTypes.AddLazy(() => __tmp14);
			__tmp170.ReturnTypeLazy = () => __tmp13;
			__tmp171.ParameterTypes.AddLazy(() => __tmp13);
			__tmp171.ParameterTypes.AddLazy(() => __tmp14);
			__tmp171.ReturnTypeLazy = () => __tmp13;
			__tmp172.FunctionLazy = () => Bind2;
			__tmp172.Name = "context";
			__tmp172.Documentation = null;
			__tmp172.TypeLazy = () => __tmp13;
			__tmp173.FunctionLazy = () => Bind2;
			__tmp173.Name = "definitions";
			__tmp173.Documentation = null;
			__tmp173.TypeLazy = () => __tmp14;
			MetaAnnotatedElement.IsAbstract = true;
			MetaAnnotatedElement.Properties.AddLazy(() => MetaAnnotatedElement_AnnotationsProperty);
			// MetaAnnotatedElement.Constructor = null;
			MetaAnnotatedElement.NamespaceLazy = () => __tmp17;
			MetaAnnotatedElement.Name = "MetaAnnotatedElement";
			MetaAnnotatedElement.Documentation = "Represents an annotated element.";
			__tmp174.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp174.InnerTypeLazy = () => MetaAnnotation;
			MetaAnnotatedElement_AnnotationsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaAnnotatedElement_AnnotationsProperty.ClassLazy = () => MetaAnnotatedElement;
			MetaAnnotatedElement_AnnotationsProperty.Name = "Annotations";
			MetaAnnotatedElement_AnnotationsProperty.Documentation = "List of annotations";
			MetaAnnotatedElement_AnnotationsProperty.TypeLazy = () => __tmp174;
			MetaDocumentedElement.IsAbstract = true;
			MetaDocumentedElement.Properties.AddLazy(() => MetaDocumentedElement_DocumentationProperty);
			MetaDocumentedElement.Operations.AddLazy(() => __tmp176);
			// MetaDocumentedElement.Constructor = null;
			MetaDocumentedElement.NamespaceLazy = () => __tmp17;
			MetaDocumentedElement.Name = "MetaDocumentedElement";
			MetaDocumentedElement.Documentation = null;
			// MetaDocumentedElement_DocumentationProperty.Kind = null;
			MetaDocumentedElement_DocumentationProperty.ClassLazy = () => MetaDocumentedElement;
			MetaDocumentedElement_DocumentationProperty.Name = "Documentation";
			MetaDocumentedElement_DocumentationProperty.Documentation = null;
			MetaDocumentedElement_DocumentationProperty.TypeLazy = () => __tmp2;
			__tmp175.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp175.InnerTypeLazy = () => __tmp2;
			__tmp176.ParentLazy = () => MetaDocumentedElement;
			__tmp176.ReturnTypeLazy = () => __tmp175;
			__tmp176.Name = "GetDocumentationLines";
			__tmp176.Documentation = null;
			__tmp177.ReturnTypeLazy = () => __tmp175;
			__tmp178.ReturnTypeLazy = () => __tmp175;
			MetaNamedElement.IsAbstract = true;
			MetaNamedElement.SuperClasses.AddLazy(() => MetaDocumentedElement);
			MetaNamedElement.Properties.AddLazy(() => MetaNamedElement_NameProperty);
			// MetaNamedElement.Constructor = null;
			MetaNamedElement.NamespaceLazy = () => __tmp17;
			MetaNamedElement.Name = "MetaNamedElement";
			MetaNamedElement.Documentation = null;
			__tmp179.Name = "Name";
			__tmp179.Documentation = null;
			// MetaNamedElement_NameProperty.Kind = null;
			MetaNamedElement_NameProperty.ClassLazy = () => MetaNamedElement;
			MetaNamedElement_NameProperty.Name = "Name";
			MetaNamedElement_NameProperty.Documentation = null;
			MetaNamedElement_NameProperty.TypeLazy = () => __tmp2;
			MetaNamedElement_NameProperty.Annotations.AddLazy(() => __tmp179);
			MetaTypedElement.IsAbstract = true;
			MetaTypedElement.Properties.AddLazy(() => MetaTypedElement_TypeProperty);
			// MetaTypedElement.Constructor = null;
			MetaTypedElement.NamespaceLazy = () => __tmp17;
			MetaTypedElement.Name = "MetaTypedElement";
			MetaTypedElement.Documentation = null;
			__tmp180.Name = "Type";
			__tmp180.Documentation = null;
			// MetaTypedElement_TypeProperty.Kind = null;
			MetaTypedElement_TypeProperty.ClassLazy = () => MetaTypedElement;
			MetaTypedElement_TypeProperty.RedefiningProperties.AddLazy(() => MetaFunction_TypeProperty);
			MetaTypedElement_TypeProperty.Name = "Type";
			MetaTypedElement_TypeProperty.Documentation = null;
			MetaTypedElement_TypeProperty.TypeLazy = () => MetaType;
			MetaTypedElement_TypeProperty.Annotations.AddLazy(() => __tmp180);
			__tmp181.Name = "Type";
			__tmp181.Documentation = null;
			MetaType.IsAbstract = true;
			// MetaType.Constructor = null;
			MetaType.NamespaceLazy = () => __tmp17;
			MetaType.Name = "MetaType";
			MetaType.Documentation = null;
			MetaType.Annotations.AddLazy(() => __tmp181);
			// MetaAnnotation.IsAbstract = null;
			MetaAnnotation.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaAnnotation.Properties.AddLazy(() => MetaAnnotation_PropertiesProperty);
			// MetaAnnotation.Constructor = null;
			MetaAnnotation.NamespaceLazy = () => __tmp17;
			MetaAnnotation.Name = "MetaAnnotation";
			MetaAnnotation.Documentation = null;
			__tmp182.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp182.InnerTypeLazy = () => MetaAnnotationProperty;
			MetaAnnotation_PropertiesProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaAnnotation_PropertiesProperty.ClassLazy = () => MetaAnnotation;
			MetaAnnotation_PropertiesProperty.Name = "Properties";
			MetaAnnotation_PropertiesProperty.Documentation = null;
			MetaAnnotation_PropertiesProperty.TypeLazy = () => __tmp182;
			// MetaAnnotationProperty.IsAbstract = null;
			MetaAnnotationProperty.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaAnnotationProperty.Properties.AddLazy(() => MetaAnnotationProperty_ValueProperty);
			MetaAnnotationProperty.ConstructorLazy = () => __tmp183;
			MetaAnnotationProperty.NamespaceLazy = () => __tmp17;
			MetaAnnotationProperty.Name = "MetaAnnotationProperty";
			MetaAnnotationProperty.Documentation = null;
			MetaAnnotationProperty_ValueProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaAnnotationProperty_ValueProperty.ClassLazy = () => MetaAnnotationProperty;
			MetaAnnotationProperty_ValueProperty.Name = "Value";
			MetaAnnotationProperty_ValueProperty.Documentation = null;
			MetaAnnotationProperty_ValueProperty.TypeLazy = () => MetaExpression;
			__tmp183.ParentLazy = () => MetaAnnotationProperty;
			__tmp183.Initializers.AddLazy(() => __tmp184);
			__tmp183.Name = "MetaAnnotationProperty";
			__tmp183.Documentation = null;
			__tmp184.ObjectName = "Value";
			__tmp184.ObjectLazy = () => MetaAnnotationProperty_ValueProperty;
			__tmp184.ConstructorLazy = () => __tmp183;
			__tmp184.PropertyName = "ExpectedType";
			__tmp184.PropertyContextLazy = () => MetaExpression;
			__tmp184.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp184.ValueLazy = () => __tmp185;
			__tmp185.TypeReferenceLazy = () => __tmp11;
			// __tmp185.Type = null;
			__tmp186.Name = "Scope";
			__tmp186.Documentation = null;
			// MetaNamespace.IsAbstract = null;
			MetaNamespace.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaNamespace.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaNamespace.Properties.AddLazy(() => MetaNamespace_ParentProperty);
			MetaNamespace.Properties.AddLazy(() => MetaNamespace_UsingsProperty);
			MetaNamespace.Properties.AddLazy(() => MetaNamespace_MetaModelProperty);
			MetaNamespace.Properties.AddLazy(() => MetaNamespace_NamespacesProperty);
			MetaNamespace.Properties.AddLazy(() => MetaNamespace_DeclarationsProperty);
			// MetaNamespace.Constructor = null;
			MetaNamespace.NamespaceLazy = () => __tmp17;
			MetaNamespace.Name = "MetaNamespace";
			MetaNamespace.Documentation = null;
			MetaNamespace.Annotations.AddLazy(() => __tmp186);
			// MetaNamespace_ParentProperty.Kind = null;
			MetaNamespace_ParentProperty.ClassLazy = () => MetaNamespace;
			MetaNamespace_ParentProperty.OppositeProperties.AddLazy(() => MetaNamespace_NamespacesProperty);
			MetaNamespace_ParentProperty.Name = "Parent";
			MetaNamespace_ParentProperty.Documentation = null;
			MetaNamespace_ParentProperty.TypeLazy = () => MetaNamespace;
			__tmp187.Name = "ImportedScope";
			__tmp187.Documentation = null;
			__tmp188.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp188.InnerTypeLazy = () => MetaNamespace;
			// MetaNamespace_UsingsProperty.Kind = null;
			MetaNamespace_UsingsProperty.ClassLazy = () => MetaNamespace;
			MetaNamespace_UsingsProperty.Name = "Usings";
			MetaNamespace_UsingsProperty.Documentation = null;
			MetaNamespace_UsingsProperty.TypeLazy = () => __tmp188;
			MetaNamespace_UsingsProperty.Annotations.AddLazy(() => __tmp187);
			MetaNamespace_MetaModelProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNamespace_MetaModelProperty.ClassLazy = () => MetaNamespace;
			MetaNamespace_MetaModelProperty.OppositeProperties.AddLazy(() => MetaModel_NamespaceProperty);
			MetaNamespace_MetaModelProperty.Name = "MetaModel";
			MetaNamespace_MetaModelProperty.Documentation = null;
			MetaNamespace_MetaModelProperty.TypeLazy = () => MetaModel;
			__tmp189.Name = "ScopeEntry";
			__tmp189.Documentation = null;
			__tmp190.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp190.InnerTypeLazy = () => MetaNamespace;
			MetaNamespace_NamespacesProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNamespace_NamespacesProperty.ClassLazy = () => MetaNamespace;
			MetaNamespace_NamespacesProperty.OppositeProperties.AddLazy(() => MetaNamespace_ParentProperty);
			MetaNamespace_NamespacesProperty.Name = "Namespaces";
			MetaNamespace_NamespacesProperty.Documentation = null;
			MetaNamespace_NamespacesProperty.TypeLazy = () => __tmp190;
			MetaNamespace_NamespacesProperty.Annotations.AddLazy(() => __tmp189);
			__tmp191.Name = "ScopeEntry";
			__tmp191.Documentation = null;
			__tmp192.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp192.InnerTypeLazy = () => MetaDeclaration;
			MetaNamespace_DeclarationsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNamespace_DeclarationsProperty.ClassLazy = () => MetaNamespace;
			MetaNamespace_DeclarationsProperty.OppositeProperties.AddLazy(() => MetaDeclaration_NamespaceProperty);
			MetaNamespace_DeclarationsProperty.Name = "Declarations";
			MetaNamespace_DeclarationsProperty.Documentation = null;
			MetaNamespace_DeclarationsProperty.TypeLazy = () => __tmp192;
			MetaNamespace_DeclarationsProperty.Annotations.AddLazy(() => __tmp191);
			MetaDeclaration.IsAbstract = true;
			MetaDeclaration.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaDeclaration.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaDeclaration.Properties.AddLazy(() => MetaDeclaration_NamespaceProperty);
			MetaDeclaration.Properties.AddLazy(() => MetaDeclaration_ModelProperty);
			MetaDeclaration.ConstructorLazy = () => __tmp193;
			MetaDeclaration.NamespaceLazy = () => __tmp17;
			MetaDeclaration.Name = "MetaDeclaration";
			MetaDeclaration.Documentation = null;
			__tmp193.ParentLazy = () => MetaDeclaration;
			__tmp193.Initializers.AddLazy(() => __tmp194);
			__tmp193.Name = "MetaDeclaration";
			__tmp193.Documentation = null;
			__tmp194.ConstructorLazy = () => __tmp193;
			__tmp194.PropertyName = "Model";
			__tmp194.PropertyContextLazy = () => MetaDeclaration;
			__tmp194.PropertyLazy = () => MetaDeclaration_ModelProperty;
			__tmp194.ValueLazy = () => __tmp195;
			__tmp195.ExpressionLazy = () => __tmp196;
			__tmp195.Name = "MetaModel";
			__tmp195.TypeLazy = () => MetaModel;
			__tmp196.Name = "Namespace";
			__tmp196.TypeLazy = () => MetaNamespace;
			// MetaDeclaration_NamespaceProperty.Kind = null;
			MetaDeclaration_NamespaceProperty.ClassLazy = () => MetaDeclaration;
			MetaDeclaration_NamespaceProperty.OppositeProperties.AddLazy(() => MetaNamespace_DeclarationsProperty);
			MetaDeclaration_NamespaceProperty.Name = "Namespace";
			MetaDeclaration_NamespaceProperty.Documentation = null;
			MetaDeclaration_NamespaceProperty.TypeLazy = () => MetaNamespace;
			MetaDeclaration_ModelProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Derived;
			MetaDeclaration_ModelProperty.ClassLazy = () => MetaDeclaration;
			MetaDeclaration_ModelProperty.Name = "Model";
			MetaDeclaration_ModelProperty.Documentation = null;
			MetaDeclaration_ModelProperty.TypeLazy = () => MetaModel;
			// MetaModel.IsAbstract = null;
			MetaModel.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaModel.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaModel.Properties.AddLazy(() => MetaModel_UriProperty);
			MetaModel.Properties.AddLazy(() => MetaModel_NamespaceProperty);
			// MetaModel.Constructor = null;
			MetaModel.NamespaceLazy = () => __tmp17;
			MetaModel.Name = "MetaModel";
			MetaModel.Documentation = null;
			// MetaModel_UriProperty.Kind = null;
			MetaModel_UriProperty.ClassLazy = () => MetaModel;
			MetaModel_UriProperty.Name = "Uri";
			MetaModel_UriProperty.Documentation = null;
			MetaModel_UriProperty.TypeLazy = () => __tmp2;
			// MetaModel_NamespaceProperty.Kind = null;
			MetaModel_NamespaceProperty.ClassLazy = () => MetaModel;
			MetaModel_NamespaceProperty.OppositeProperties.AddLazy(() => MetaNamespace_MetaModelProperty);
			MetaModel_NamespaceProperty.Name = "Namespace";
			MetaModel_NamespaceProperty.Documentation = null;
			MetaModel_NamespaceProperty.TypeLazy = () => MetaNamespace;
			MetaCollectionKind.EnumLiterals.AddLazy(() => __tmp197);
			MetaCollectionKind.EnumLiterals.AddLazy(() => __tmp198);
			MetaCollectionKind.EnumLiterals.AddLazy(() => __tmp199);
			MetaCollectionKind.EnumLiterals.AddLazy(() => __tmp200);
			MetaCollectionKind.NamespaceLazy = () => __tmp17;
			MetaCollectionKind.Name = "MetaCollectionKind";
			MetaCollectionKind.Documentation = null;
			__tmp197.EnumLazy = () => MetaCollectionKind;
			__tmp197.Name = "List";
			__tmp197.Documentation = null;
			__tmp197.TypeLazy = () => MetaCollectionKind;
			__tmp198.EnumLazy = () => MetaCollectionKind;
			__tmp198.Name = "Set";
			__tmp198.Documentation = null;
			__tmp198.TypeLazy = () => MetaCollectionKind;
			__tmp199.EnumLazy = () => MetaCollectionKind;
			__tmp199.Name = "MultiList";
			__tmp199.Documentation = null;
			__tmp199.TypeLazy = () => MetaCollectionKind;
			__tmp200.EnumLazy = () => MetaCollectionKind;
			__tmp200.Name = "MultiSet";
			__tmp200.Documentation = null;
			__tmp200.TypeLazy = () => MetaCollectionKind;
			// MetaCollectionType.IsAbstract = null;
			MetaCollectionType.SuperClasses.AddLazy(() => MetaType);
			MetaCollectionType.Properties.AddLazy(() => MetaCollectionType_KindProperty);
			MetaCollectionType.Properties.AddLazy(() => MetaCollectionType_InnerTypeProperty);
			// MetaCollectionType.Constructor = null;
			MetaCollectionType.NamespaceLazy = () => __tmp17;
			MetaCollectionType.Name = "MetaCollectionType";
			MetaCollectionType.Documentation = null;
			// MetaCollectionType_KindProperty.Kind = null;
			MetaCollectionType_KindProperty.ClassLazy = () => MetaCollectionType;
			MetaCollectionType_KindProperty.Name = "Kind";
			MetaCollectionType_KindProperty.Documentation = null;
			MetaCollectionType_KindProperty.TypeLazy = () => MetaCollectionKind;
			// MetaCollectionType_InnerTypeProperty.Kind = null;
			MetaCollectionType_InnerTypeProperty.ClassLazy = () => MetaCollectionType;
			MetaCollectionType_InnerTypeProperty.Name = "InnerType";
			MetaCollectionType_InnerTypeProperty.Documentation = null;
			MetaCollectionType_InnerTypeProperty.TypeLazy = () => MetaType;
			// MetaNullableType.IsAbstract = null;
			MetaNullableType.SuperClasses.AddLazy(() => MetaType);
			MetaNullableType.Properties.AddLazy(() => MetaNullableType_InnerTypeProperty);
			// MetaNullableType.Constructor = null;
			MetaNullableType.NamespaceLazy = () => __tmp17;
			MetaNullableType.Name = "MetaNullableType";
			MetaNullableType.Documentation = null;
			// MetaNullableType_InnerTypeProperty.Kind = null;
			MetaNullableType_InnerTypeProperty.ClassLazy = () => MetaNullableType;
			MetaNullableType_InnerTypeProperty.Name = "InnerType";
			MetaNullableType_InnerTypeProperty.Documentation = null;
			MetaNullableType_InnerTypeProperty.TypeLazy = () => MetaType;
			// MetaPrimitiveType.IsAbstract = null;
			MetaPrimitiveType.SuperClasses.AddLazy(() => MetaType);
			MetaPrimitiveType.SuperClasses.AddLazy(() => MetaNamedElement);
			// MetaPrimitiveType.Constructor = null;
			MetaPrimitiveType.NamespaceLazy = () => __tmp17;
			MetaPrimitiveType.Name = "MetaPrimitiveType";
			MetaPrimitiveType.Documentation = null;
			__tmp201.Name = "Scope";
			__tmp201.Documentation = null;
			// MetaEnum.IsAbstract = null;
			MetaEnum.SuperClasses.AddLazy(() => MetaType);
			MetaEnum.SuperClasses.AddLazy(() => MetaDeclaration);
			MetaEnum.Properties.AddLazy(() => MetaEnum_EnumLiteralsProperty);
			MetaEnum.Properties.AddLazy(() => MetaEnum_OperationsProperty);
			// MetaEnum.Constructor = null;
			MetaEnum.NamespaceLazy = () => __tmp17;
			MetaEnum.Name = "MetaEnum";
			MetaEnum.Documentation = null;
			MetaEnum.Annotations.AddLazy(() => __tmp201);
			__tmp202.Name = "ScopeEntry";
			__tmp202.Documentation = null;
			__tmp203.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp203.InnerTypeLazy = () => MetaEnumLiteral;
			MetaEnum_EnumLiteralsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaEnum_EnumLiteralsProperty.ClassLazy = () => MetaEnum;
			MetaEnum_EnumLiteralsProperty.OppositeProperties.AddLazy(() => MetaEnumLiteral_EnumProperty);
			MetaEnum_EnumLiteralsProperty.Name = "EnumLiterals";
			MetaEnum_EnumLiteralsProperty.Documentation = null;
			MetaEnum_EnumLiteralsProperty.TypeLazy = () => __tmp203;
			MetaEnum_EnumLiteralsProperty.Annotations.AddLazy(() => __tmp202);
			__tmp204.Name = "ScopeEntry";
			__tmp204.Documentation = null;
			__tmp205.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp205.InnerTypeLazy = () => MetaOperation;
			MetaEnum_OperationsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaEnum_OperationsProperty.ClassLazy = () => MetaEnum;
			MetaEnum_OperationsProperty.OppositeProperties.AddLazy(() => MetaOperation_ParentProperty);
			MetaEnum_OperationsProperty.Name = "Operations";
			MetaEnum_OperationsProperty.Documentation = null;
			MetaEnum_OperationsProperty.TypeLazy = () => __tmp205;
			MetaEnum_OperationsProperty.Annotations.AddLazy(() => __tmp204);
			// MetaEnumLiteral.IsAbstract = null;
			MetaEnumLiteral.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaEnumLiteral.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaEnumLiteral.Properties.AddLazy(() => MetaEnumLiteral_EnumProperty);
			MetaEnumLiteral.ConstructorLazy = () => __tmp206;
			MetaEnumLiteral.NamespaceLazy = () => __tmp17;
			MetaEnumLiteral.Name = "MetaEnumLiteral";
			MetaEnumLiteral.Documentation = null;
			__tmp206.ParentLazy = () => MetaEnumLiteral;
			__tmp206.Initializers.AddLazy(() => __tmp207);
			__tmp206.Name = "MetaEnumLiteral";
			__tmp206.Documentation = null;
			__tmp207.ConstructorLazy = () => __tmp206;
			__tmp207.PropertyName = "Type";
			__tmp207.PropertyContextLazy = () => MetaEnumLiteral;
			__tmp207.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp207.ValueLazy = () => __tmp208;
			__tmp208.Name = "Enum";
			__tmp208.TypeLazy = () => MetaEnum;
			// MetaEnumLiteral_EnumProperty.Kind = null;
			MetaEnumLiteral_EnumProperty.ClassLazy = () => MetaEnumLiteral;
			MetaEnumLiteral_EnumProperty.OppositeProperties.AddLazy(() => MetaEnum_EnumLiteralsProperty);
			MetaEnumLiteral_EnumProperty.Name = "Enum";
			MetaEnumLiteral_EnumProperty.Documentation = null;
			MetaEnumLiteral_EnumProperty.TypeLazy = () => MetaEnum;
			__tmp209.Name = "Scope";
			__tmp209.Documentation = null;
			// MetaClass.IsAbstract = null;
			MetaClass.SuperClasses.AddLazy(() => MetaType);
			MetaClass.SuperClasses.AddLazy(() => MetaDeclaration);
			MetaClass.Properties.AddLazy(() => MetaClass_IsAbstractProperty);
			MetaClass.Properties.AddLazy(() => MetaClass_SuperClassesProperty);
			MetaClass.Properties.AddLazy(() => MetaClass_PropertiesProperty);
			MetaClass.Properties.AddLazy(() => MetaClass_OperationsProperty);
			MetaClass.Properties.AddLazy(() => MetaClass_ConstructorProperty);
			MetaClass.Operations.AddLazy(() => __tmp217);
			MetaClass.Operations.AddLazy(() => __tmp221);
			MetaClass.Operations.AddLazy(() => __tmp225);
			MetaClass.Operations.AddLazy(() => __tmp229);
			MetaClass.Operations.AddLazy(() => __tmp233);
			// MetaClass.Constructor = null;
			MetaClass.NamespaceLazy = () => __tmp17;
			MetaClass.Name = "MetaClass";
			MetaClass.Documentation = null;
			MetaClass.Annotations.AddLazy(() => __tmp209);
			// MetaClass_IsAbstractProperty.Kind = null;
			MetaClass_IsAbstractProperty.ClassLazy = () => MetaClass;
			MetaClass_IsAbstractProperty.Name = "IsAbstract";
			MetaClass_IsAbstractProperty.Documentation = null;
			MetaClass_IsAbstractProperty.TypeLazy = () => __tmp8;
			__tmp210.Name = "InheritedScope";
			__tmp210.Documentation = null;
			__tmp211.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp211.InnerTypeLazy = () => MetaClass;
			// MetaClass_SuperClassesProperty.Kind = null;
			MetaClass_SuperClassesProperty.ClassLazy = () => MetaClass;
			MetaClass_SuperClassesProperty.Name = "SuperClasses";
			MetaClass_SuperClassesProperty.Documentation = null;
			MetaClass_SuperClassesProperty.TypeLazy = () => __tmp211;
			MetaClass_SuperClassesProperty.Annotations.AddLazy(() => __tmp210);
			__tmp212.Name = "ScopeEntry";
			__tmp212.Documentation = null;
			__tmp213.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp213.InnerTypeLazy = () => MetaProperty;
			MetaClass_PropertiesProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaClass_PropertiesProperty.ClassLazy = () => MetaClass;
			MetaClass_PropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_ClassProperty);
			MetaClass_PropertiesProperty.Name = "Properties";
			MetaClass_PropertiesProperty.Documentation = null;
			MetaClass_PropertiesProperty.TypeLazy = () => __tmp213;
			MetaClass_PropertiesProperty.Annotations.AddLazy(() => __tmp212);
			__tmp214.Name = "ScopeEntry";
			__tmp214.Documentation = null;
			__tmp215.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp215.InnerTypeLazy = () => MetaOperation;
			MetaClass_OperationsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaClass_OperationsProperty.ClassLazy = () => MetaClass;
			MetaClass_OperationsProperty.OppositeProperties.AddLazy(() => MetaOperation_ParentProperty);
			MetaClass_OperationsProperty.Name = "Operations";
			MetaClass_OperationsProperty.Documentation = null;
			MetaClass_OperationsProperty.TypeLazy = () => __tmp215;
			MetaClass_OperationsProperty.Annotations.AddLazy(() => __tmp214);
			MetaClass_ConstructorProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaClass_ConstructorProperty.ClassLazy = () => MetaClass;
			MetaClass_ConstructorProperty.OppositeProperties.AddLazy(() => MetaConstructor_ParentProperty);
			MetaClass_ConstructorProperty.Name = "Constructor";
			MetaClass_ConstructorProperty.Documentation = null;
			MetaClass_ConstructorProperty.TypeLazy = () => MetaConstructor;
			__tmp216.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp216.InnerTypeLazy = () => MetaClass;
			__tmp217.ParentLazy = () => MetaClass;
			__tmp217.ReturnTypeLazy = () => __tmp216;
			__tmp217.Name = "GetAllSuperClasses";
			__tmp217.Documentation = null;
			__tmp218.ReturnTypeLazy = () => __tmp216;
			__tmp219.ReturnTypeLazy = () => __tmp216;
			__tmp220.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp220.InnerTypeLazy = () => MetaProperty;
			__tmp221.ParentLazy = () => MetaClass;
			__tmp221.ReturnTypeLazy = () => __tmp220;
			__tmp221.Name = "GetAllProperties";
			__tmp221.Documentation = null;
			__tmp222.ReturnTypeLazy = () => __tmp220;
			__tmp223.ReturnTypeLazy = () => __tmp220;
			__tmp224.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp224.InnerTypeLazy = () => MetaOperation;
			__tmp225.ParentLazy = () => MetaClass;
			__tmp225.ReturnTypeLazy = () => __tmp224;
			__tmp225.Name = "GetAllOperations";
			__tmp225.Documentation = null;
			__tmp226.ReturnTypeLazy = () => __tmp224;
			__tmp227.ReturnTypeLazy = () => __tmp224;
			__tmp228.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp228.InnerTypeLazy = () => MetaProperty;
			__tmp229.ParentLazy = () => MetaClass;
			__tmp229.ReturnTypeLazy = () => __tmp228;
			__tmp229.Name = "GetAllImplementedProperties";
			__tmp229.Documentation = null;
			__tmp230.ReturnTypeLazy = () => __tmp228;
			__tmp231.ReturnTypeLazy = () => __tmp228;
			__tmp232.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp232.InnerTypeLazy = () => MetaOperation;
			__tmp233.ParentLazy = () => MetaClass;
			__tmp233.ReturnTypeLazy = () => __tmp232;
			__tmp233.Name = "GetAllImplementedOperations";
			__tmp233.Documentation = null;
			__tmp234.ReturnTypeLazy = () => __tmp232;
			__tmp235.ReturnTypeLazy = () => __tmp232;
			// MetaFunctionType.IsAbstract = null;
			MetaFunctionType.SuperClasses.AddLazy(() => MetaType);
			MetaFunctionType.Properties.AddLazy(() => MetaFunctionType_ParameterTypesProperty);
			MetaFunctionType.Properties.AddLazy(() => MetaFunctionType_ReturnTypeProperty);
			// MetaFunctionType.Constructor = null;
			MetaFunctionType.NamespaceLazy = () => __tmp17;
			MetaFunctionType.Name = "MetaFunctionType";
			MetaFunctionType.Documentation = null;
			__tmp236.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.MultiList;
			__tmp236.InnerTypeLazy = () => MetaType;
			// MetaFunctionType_ParameterTypesProperty.Kind = null;
			MetaFunctionType_ParameterTypesProperty.ClassLazy = () => MetaFunctionType;
			MetaFunctionType_ParameterTypesProperty.Name = "ParameterTypes";
			MetaFunctionType_ParameterTypesProperty.Documentation = null;
			MetaFunctionType_ParameterTypesProperty.TypeLazy = () => __tmp236;
			// MetaFunctionType_ReturnTypeProperty.Kind = null;
			MetaFunctionType_ReturnTypeProperty.ClassLazy = () => MetaFunctionType;
			MetaFunctionType_ReturnTypeProperty.Name = "ReturnType";
			MetaFunctionType_ReturnTypeProperty.Documentation = null;
			MetaFunctionType_ReturnTypeProperty.TypeLazy = () => MetaType;
			MetaFunction.IsAbstract = true;
			MetaFunction.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaFunction.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaFunction.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaFunction.Properties.AddLazy(() => MetaFunction_TypeProperty);
			MetaFunction.Properties.AddLazy(() => MetaFunction_ParametersProperty);
			MetaFunction.Properties.AddLazy(() => MetaFunction_ReturnTypeProperty);
			MetaFunction.ConstructorLazy = () => __tmp237;
			MetaFunction.NamespaceLazy = () => __tmp17;
			MetaFunction.Name = "MetaFunction";
			MetaFunction.Documentation = null;
			__tmp237.ParentLazy = () => MetaFunction;
			__tmp237.Name = "MetaFunction";
			__tmp237.Documentation = null;
			__tmp238.Name = "Type";
			__tmp238.Documentation = null;
			MetaFunction_TypeProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Readonly;
			MetaFunction_TypeProperty.ClassLazy = () => MetaFunction;
			MetaFunction_TypeProperty.RedefinedProperties.AddLazy(() => MetaTypedElement_TypeProperty);
			MetaFunction_TypeProperty.Name = "Type";
			MetaFunction_TypeProperty.Documentation = null;
			MetaFunction_TypeProperty.TypeLazy = () => MetaFunctionType;
			MetaFunction_TypeProperty.Annotations.AddLazy(() => __tmp238);
			__tmp239.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp239.InnerTypeLazy = () => MetaParameter;
			MetaFunction_ParametersProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaFunction_ParametersProperty.ClassLazy = () => MetaFunction;
			MetaFunction_ParametersProperty.OppositeProperties.AddLazy(() => MetaParameter_FunctionProperty);
			MetaFunction_ParametersProperty.Name = "Parameters";
			MetaFunction_ParametersProperty.Documentation = null;
			MetaFunction_ParametersProperty.TypeLazy = () => __tmp239;
			// MetaFunction_ReturnTypeProperty.Kind = null;
			MetaFunction_ReturnTypeProperty.ClassLazy = () => MetaFunction;
			MetaFunction_ReturnTypeProperty.Name = "ReturnType";
			MetaFunction_ReturnTypeProperty.Documentation = null;
			MetaFunction_ReturnTypeProperty.TypeLazy = () => MetaType;
			// MetaGlobalFunction.IsAbstract = null;
			MetaGlobalFunction.SuperClasses.AddLazy(() => MetaFunction);
			MetaGlobalFunction.SuperClasses.AddLazy(() => MetaDeclaration);
			// MetaGlobalFunction.Constructor = null;
			MetaGlobalFunction.NamespaceLazy = () => __tmp17;
			MetaGlobalFunction.Name = "MetaGlobalFunction";
			MetaGlobalFunction.Documentation = null;
			// MetaOperation.IsAbstract = null;
			MetaOperation.SuperClasses.AddLazy(() => MetaFunction);
			MetaOperation.Properties.AddLazy(() => MetaOperation_ParentProperty);
			// MetaOperation.Constructor = null;
			MetaOperation.NamespaceLazy = () => __tmp17;
			MetaOperation.Name = "MetaOperation";
			MetaOperation.Documentation = null;
			// MetaOperation_ParentProperty.Kind = null;
			MetaOperation_ParentProperty.ClassLazy = () => MetaOperation;
			MetaOperation_ParentProperty.OppositeProperties.AddLazy(() => MetaClass_OperationsProperty);
			MetaOperation_ParentProperty.OppositeProperties.AddLazy(() => MetaEnum_OperationsProperty);
			MetaOperation_ParentProperty.Name = "Parent";
			MetaOperation_ParentProperty.Documentation = null;
			MetaOperation_ParentProperty.TypeLazy = () => MetaType;
			// MetaConstant.IsAbstract = null;
			MetaConstant.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaConstant.SuperClasses.AddLazy(() => MetaDeclaration);
			MetaConstant.Properties.AddLazy(() => MetaConstant_ValueProperty);
			MetaConstant.ConstructorLazy = () => __tmp240;
			MetaConstant.NamespaceLazy = () => __tmp17;
			MetaConstant.Name = "MetaConstant";
			MetaConstant.Documentation = null;
			__tmp240.ParentLazy = () => MetaConstant;
			__tmp240.Initializers.AddLazy(() => __tmp241);
			__tmp240.Name = "MetaConstant";
			__tmp240.Documentation = null;
			__tmp241.ObjectName = "Value";
			__tmp241.ObjectLazy = () => MetaConstant_ValueProperty;
			__tmp241.ConstructorLazy = () => __tmp240;
			__tmp241.PropertyName = "ExpectedType";
			__tmp241.PropertyContextLazy = () => MetaExpression;
			__tmp241.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp241.ValueLazy = () => __tmp242;
			__tmp242.Name = "Type";
			__tmp242.TypeLazy = () => MetaType;
			MetaConstant_ValueProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaConstant_ValueProperty.ClassLazy = () => MetaConstant;
			MetaConstant_ValueProperty.Name = "Value";
			MetaConstant_ValueProperty.Documentation = null;
			MetaConstant_ValueProperty.TypeLazy = () => MetaExpression;
			// MetaConstructor.IsAbstract = null;
			MetaConstructor.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaConstructor.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaConstructor.Properties.AddLazy(() => MetaConstructor_ParentProperty);
			MetaConstructor.Properties.AddLazy(() => MetaConstructor_InitializersProperty);
			// MetaConstructor.Constructor = null;
			MetaConstructor.NamespaceLazy = () => __tmp17;
			MetaConstructor.Name = "MetaConstructor";
			MetaConstructor.Documentation = null;
			// MetaConstructor_ParentProperty.Kind = null;
			MetaConstructor_ParentProperty.ClassLazy = () => MetaConstructor;
			MetaConstructor_ParentProperty.OppositeProperties.AddLazy(() => MetaClass_ConstructorProperty);
			MetaConstructor_ParentProperty.Name = "Parent";
			MetaConstructor_ParentProperty.Documentation = null;
			MetaConstructor_ParentProperty.TypeLazy = () => MetaClass;
			__tmp243.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp243.InnerTypeLazy = () => MetaPropertyInitializer;
			MetaConstructor_InitializersProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaConstructor_InitializersProperty.ClassLazy = () => MetaConstructor;
			MetaConstructor_InitializersProperty.OppositeProperties.AddLazy(() => MetaPropertyInitializer_ConstructorProperty);
			MetaConstructor_InitializersProperty.Name = "Initializers";
			MetaConstructor_InitializersProperty.Documentation = null;
			MetaConstructor_InitializersProperty.TypeLazy = () => __tmp243;
			// MetaParameter.IsAbstract = null;
			MetaParameter.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaParameter.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaParameter.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaParameter.Properties.AddLazy(() => MetaParameter_FunctionProperty);
			// MetaParameter.Constructor = null;
			MetaParameter.NamespaceLazy = () => __tmp17;
			MetaParameter.Name = "MetaParameter";
			MetaParameter.Documentation = null;
			// MetaParameter_FunctionProperty.Kind = null;
			MetaParameter_FunctionProperty.ClassLazy = () => MetaParameter;
			MetaParameter_FunctionProperty.OppositeProperties.AddLazy(() => MetaFunction_ParametersProperty);
			MetaParameter_FunctionProperty.Name = "Function";
			MetaParameter_FunctionProperty.Documentation = null;
			MetaParameter_FunctionProperty.TypeLazy = () => MetaFunction;
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp244);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp245);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp246);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp247);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp248);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp249);
			MetaPropertyKind.EnumLiterals.AddLazy(() => __tmp250);
			MetaPropertyKind.NamespaceLazy = () => __tmp17;
			MetaPropertyKind.Name = "MetaPropertyKind";
			MetaPropertyKind.Documentation = null;
			__tmp244.EnumLazy = () => MetaPropertyKind;
			__tmp244.Name = "Normal";
			__tmp244.Documentation = null;
			__tmp244.TypeLazy = () => MetaPropertyKind;
			__tmp245.EnumLazy = () => MetaPropertyKind;
			__tmp245.Name = "Readonly";
			__tmp245.Documentation = null;
			__tmp245.TypeLazy = () => MetaPropertyKind;
			__tmp246.EnumLazy = () => MetaPropertyKind;
			__tmp246.Name = "Lazy";
			__tmp246.Documentation = null;
			__tmp246.TypeLazy = () => MetaPropertyKind;
			__tmp247.EnumLazy = () => MetaPropertyKind;
			__tmp247.Name = "Derived";
			__tmp247.Documentation = null;
			__tmp247.TypeLazy = () => MetaPropertyKind;
			__tmp248.EnumLazy = () => MetaPropertyKind;
			__tmp248.Name = "Containment";
			__tmp248.Documentation = null;
			__tmp248.TypeLazy = () => MetaPropertyKind;
			__tmp249.EnumLazy = () => MetaPropertyKind;
			__tmp249.Name = "Synthetized";
			__tmp249.Documentation = null;
			__tmp249.TypeLazy = () => MetaPropertyKind;
			__tmp250.EnumLazy = () => MetaPropertyKind;
			__tmp250.Name = "Inherited";
			__tmp250.Documentation = null;
			__tmp250.TypeLazy = () => MetaPropertyKind;
			// MetaProperty.IsAbstract = null;
			MetaProperty.SuperClasses.AddLazy(() => MetaNamedElement);
			MetaProperty.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaProperty.SuperClasses.AddLazy(() => MetaAnnotatedElement);
			MetaProperty.Properties.AddLazy(() => MetaProperty_KindProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_ClassProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_OppositePropertiesProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_SubsettedPropertiesProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_SubsettingPropertiesProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_RedefinedPropertiesProperty);
			MetaProperty.Properties.AddLazy(() => MetaProperty_RedefiningPropertiesProperty);
			// MetaProperty.Constructor = null;
			MetaProperty.NamespaceLazy = () => __tmp17;
			MetaProperty.Name = "MetaProperty";
			MetaProperty.Documentation = null;
			// MetaProperty_KindProperty.Kind = null;
			MetaProperty_KindProperty.ClassLazy = () => MetaProperty;
			MetaProperty_KindProperty.Name = "Kind";
			MetaProperty_KindProperty.Documentation = null;
			MetaProperty_KindProperty.TypeLazy = () => MetaPropertyKind;
			// MetaProperty_ClassProperty.Kind = null;
			MetaProperty_ClassProperty.ClassLazy = () => MetaProperty;
			MetaProperty_ClassProperty.OppositeProperties.AddLazy(() => MetaClass_PropertiesProperty);
			MetaProperty_ClassProperty.Name = "Class";
			MetaProperty_ClassProperty.Documentation = null;
			MetaProperty_ClassProperty.TypeLazy = () => MetaClass;
			__tmp251.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp251.InnerTypeLazy = () => MetaProperty;
			// MetaProperty_OppositePropertiesProperty.Kind = null;
			MetaProperty_OppositePropertiesProperty.ClassLazy = () => MetaProperty;
			MetaProperty_OppositePropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_OppositePropertiesProperty);
			MetaProperty_OppositePropertiesProperty.Name = "OppositeProperties";
			MetaProperty_OppositePropertiesProperty.Documentation = null;
			MetaProperty_OppositePropertiesProperty.TypeLazy = () => __tmp251;
			__tmp252.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp252.InnerTypeLazy = () => MetaProperty;
			// MetaProperty_SubsettedPropertiesProperty.Kind = null;
			MetaProperty_SubsettedPropertiesProperty.ClassLazy = () => MetaProperty;
			MetaProperty_SubsettedPropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_SubsettingPropertiesProperty);
			MetaProperty_SubsettedPropertiesProperty.Name = "SubsettedProperties";
			MetaProperty_SubsettedPropertiesProperty.Documentation = null;
			MetaProperty_SubsettedPropertiesProperty.TypeLazy = () => __tmp252;
			__tmp253.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp253.InnerTypeLazy = () => MetaProperty;
			// MetaProperty_SubsettingPropertiesProperty.Kind = null;
			MetaProperty_SubsettingPropertiesProperty.ClassLazy = () => MetaProperty;
			MetaProperty_SubsettingPropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_SubsettedPropertiesProperty);
			MetaProperty_SubsettingPropertiesProperty.Name = "SubsettingProperties";
			MetaProperty_SubsettingPropertiesProperty.Documentation = null;
			MetaProperty_SubsettingPropertiesProperty.TypeLazy = () => __tmp253;
			__tmp254.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp254.InnerTypeLazy = () => MetaProperty;
			// MetaProperty_RedefinedPropertiesProperty.Kind = null;
			MetaProperty_RedefinedPropertiesProperty.ClassLazy = () => MetaProperty;
			MetaProperty_RedefinedPropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_RedefiningPropertiesProperty);
			MetaProperty_RedefinedPropertiesProperty.Name = "RedefinedProperties";
			MetaProperty_RedefinedPropertiesProperty.Documentation = null;
			MetaProperty_RedefinedPropertiesProperty.TypeLazy = () => __tmp254;
			__tmp255.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp255.InnerTypeLazy = () => MetaProperty;
			// MetaProperty_RedefiningPropertiesProperty.Kind = null;
			MetaProperty_RedefiningPropertiesProperty.ClassLazy = () => MetaProperty;
			MetaProperty_RedefiningPropertiesProperty.OppositeProperties.AddLazy(() => MetaProperty_RedefinedPropertiesProperty);
			MetaProperty_RedefiningPropertiesProperty.Name = "RedefiningProperties";
			MetaProperty_RedefiningPropertiesProperty.Documentation = null;
			MetaProperty_RedefiningPropertiesProperty.TypeLazy = () => __tmp255;
			MetaPropertyInitializer.IsAbstract = true;
			MetaPropertyInitializer.Properties.AddLazy(() => MetaPropertyInitializer_ConstructorProperty);
			MetaPropertyInitializer.Properties.AddLazy(() => MetaPropertyInitializer_PropertyNameProperty);
			MetaPropertyInitializer.Properties.AddLazy(() => MetaPropertyInitializer_PropertyContextProperty);
			MetaPropertyInitializer.Properties.AddLazy(() => MetaPropertyInitializer_PropertyProperty);
			MetaPropertyInitializer.Properties.AddLazy(() => MetaPropertyInitializer_ValueProperty);
			MetaPropertyInitializer.ConstructorLazy = () => __tmp256;
			MetaPropertyInitializer.NamespaceLazy = () => __tmp17;
			MetaPropertyInitializer.Name = "MetaPropertyInitializer";
			MetaPropertyInitializer.Documentation = null;
			// MetaPropertyInitializer_ConstructorProperty.Kind = null;
			MetaPropertyInitializer_ConstructorProperty.ClassLazy = () => MetaPropertyInitializer;
			MetaPropertyInitializer_ConstructorProperty.OppositeProperties.AddLazy(() => MetaConstructor_InitializersProperty);
			MetaPropertyInitializer_ConstructorProperty.Name = "Constructor";
			MetaPropertyInitializer_ConstructorProperty.Documentation = null;
			MetaPropertyInitializer_ConstructorProperty.TypeLazy = () => MetaConstructor;
			// MetaPropertyInitializer_PropertyNameProperty.Kind = null;
			MetaPropertyInitializer_PropertyNameProperty.ClassLazy = () => MetaPropertyInitializer;
			MetaPropertyInitializer_PropertyNameProperty.Name = "PropertyName";
			MetaPropertyInitializer_PropertyNameProperty.Documentation = null;
			MetaPropertyInitializer_PropertyNameProperty.TypeLazy = () => __tmp2;
			// MetaPropertyInitializer_PropertyContextProperty.Kind = null;
			MetaPropertyInitializer_PropertyContextProperty.ClassLazy = () => MetaPropertyInitializer;
			MetaPropertyInitializer_PropertyContextProperty.Name = "PropertyContext";
			MetaPropertyInitializer_PropertyContextProperty.Documentation = null;
			MetaPropertyInitializer_PropertyContextProperty.TypeLazy = () => MetaClass;
			// MetaPropertyInitializer_PropertyProperty.Kind = null;
			MetaPropertyInitializer_PropertyProperty.ClassLazy = () => MetaPropertyInitializer;
			MetaPropertyInitializer_PropertyProperty.Name = "Property";
			MetaPropertyInitializer_PropertyProperty.Documentation = null;
			MetaPropertyInitializer_PropertyProperty.TypeLazy = () => MetaProperty;
			MetaPropertyInitializer_ValueProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaPropertyInitializer_ValueProperty.ClassLazy = () => MetaPropertyInitializer;
			MetaPropertyInitializer_ValueProperty.Name = "Value";
			MetaPropertyInitializer_ValueProperty.Documentation = null;
			MetaPropertyInitializer_ValueProperty.TypeLazy = () => MetaExpression;
			__tmp256.ParentLazy = () => MetaPropertyInitializer;
			__tmp256.Initializers.AddLazy(() => __tmp257);
			__tmp256.Initializers.AddLazy(() => __tmp262);
			__tmp256.Initializers.AddLazy(() => __tmp270);
			__tmp256.Name = "MetaPropertyInitializer";
			__tmp256.Documentation = null;
			__tmp257.ConstructorLazy = () => __tmp256;
			__tmp257.PropertyName = "PropertyContext";
			__tmp257.PropertyContextLazy = () => MetaPropertyInitializer;
			__tmp257.PropertyLazy = () => MetaPropertyInitializer_PropertyContextProperty;
			__tmp257.ValueLazy = () => __tmp258;
			__tmp258.TypeReferenceLazy = () => MetaClass;
			__tmp258.ExpressionLazy = () => __tmp259;
			__tmp258.TypeLazy = () => MetaClass;
			__tmp259.ExpressionLazy = () => __tmp260;
			__tmp259.Arguments.AddLazy(() => __tmp261);
			__tmp259.TypeLazy = () => MetaType;
			__tmp260.Name = "current_type";
			__tmp260.TypeLazy = () => __tmp10;
			__tmp261.TypeLazy = () => MetaPropertyInitializer;
			__tmp262.ConstructorLazy = () => __tmp256;
			__tmp262.PropertyName = "Property";
			__tmp262.PropertyContextLazy = () => MetaPropertyInitializer;
			__tmp262.PropertyLazy = () => MetaPropertyInitializer_PropertyProperty;
			__tmp262.ValueLazy = () => __tmp263;
			__tmp263.ExpressionLazy = () => __tmp264;
			__tmp263.Arguments.AddLazy(() => __tmp265);
			__tmp263.TypeLazy = () => __tmp13;
			__tmp264.Name = "bind";
			__tmp264.TypeLazy = () => __tmp10;
			__tmp265.ExpressionLazy = () => __tmp266;
			__tmp265.Arguments.AddLazy(() => __tmp267);
			__tmp265.Arguments.AddLazy(() => __tmp269);
			__tmp265.TypeLazy = () => __tmp14;
			__tmp266.Name = "resolve_name";
			__tmp266.TypeLazy = () => __tmp10;
			__tmp267.ExpressionLazy = () => __tmp268;
			__tmp267.Name = "PropertyContext";
			__tmp267.TypeLazy = () => MetaClass;
			__tmp268.TypeLazy = () => MetaPropertyInitializer;
			__tmp269.Name = "PropertyName";
			__tmp269.TypeLazy = () => __tmp2;
			__tmp270.ObjectName = "Value";
			__tmp270.ObjectLazy = () => MetaPropertyInitializer_ValueProperty;
			__tmp270.ConstructorLazy = () => __tmp256;
			__tmp270.PropertyName = "ExpectedType";
			__tmp270.PropertyContextLazy = () => MetaExpression;
			__tmp270.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp270.ValueLazy = () => __tmp271;
			__tmp271.ExpressionLazy = () => __tmp272;
			__tmp271.Arguments.AddLazy(() => __tmp273);
			__tmp271.TypeLazy = () => MetaType;
			__tmp272.Name = "get_type";
			__tmp272.TypeLazy = () => __tmp10;
			__tmp273.Name = "Property";
			__tmp273.TypeLazy = () => MetaProperty;
			// MetaSynthetizedPropertyInitializer.IsAbstract = null;
			MetaSynthetizedPropertyInitializer.SuperClasses.AddLazy(() => MetaPropertyInitializer);
			// MetaSynthetizedPropertyInitializer.Constructor = null;
			MetaSynthetizedPropertyInitializer.NamespaceLazy = () => __tmp17;
			MetaSynthetizedPropertyInitializer.Name = "MetaSynthetizedPropertyInitializer";
			MetaSynthetizedPropertyInitializer.Documentation = null;
			// MetaInheritedPropertyInitializer.IsAbstract = null;
			MetaInheritedPropertyInitializer.SuperClasses.AddLazy(() => MetaPropertyInitializer);
			MetaInheritedPropertyInitializer.Properties.AddLazy(() => MetaInheritedPropertyInitializer_ObjectNameProperty);
			MetaInheritedPropertyInitializer.Properties.AddLazy(() => MetaInheritedPropertyInitializer_ObjectProperty);
			MetaInheritedPropertyInitializer.ConstructorLazy = () => __tmp274;
			MetaInheritedPropertyInitializer.NamespaceLazy = () => __tmp17;
			MetaInheritedPropertyInitializer.Name = "MetaInheritedPropertyInitializer";
			MetaInheritedPropertyInitializer.Documentation = null;
			// MetaInheritedPropertyInitializer_ObjectNameProperty.Kind = null;
			MetaInheritedPropertyInitializer_ObjectNameProperty.ClassLazy = () => MetaInheritedPropertyInitializer;
			MetaInheritedPropertyInitializer_ObjectNameProperty.Name = "ObjectName";
			MetaInheritedPropertyInitializer_ObjectNameProperty.Documentation = null;
			MetaInheritedPropertyInitializer_ObjectNameProperty.TypeLazy = () => __tmp2;
			// MetaInheritedPropertyInitializer_ObjectProperty.Kind = null;
			MetaInheritedPropertyInitializer_ObjectProperty.ClassLazy = () => MetaInheritedPropertyInitializer;
			MetaInheritedPropertyInitializer_ObjectProperty.Name = "Object";
			MetaInheritedPropertyInitializer_ObjectProperty.Documentation = null;
			MetaInheritedPropertyInitializer_ObjectProperty.TypeLazy = () => MetaProperty;
			__tmp274.ParentLazy = () => MetaInheritedPropertyInitializer;
			__tmp274.Initializers.AddLazy(() => __tmp275);
			__tmp274.Initializers.AddLazy(() => __tmp281);
			__tmp274.Initializers.AddLazy(() => __tmp286);
			__tmp274.Name = "MetaPropertyInitializer";
			__tmp274.Documentation = null;
			__tmp275.ConstructorLazy = () => __tmp274;
			__tmp275.PropertyName = "Object";
			__tmp275.PropertyContextLazy = () => MetaInheritedPropertyInitializer;
			__tmp275.PropertyLazy = () => MetaInheritedPropertyInitializer_ObjectProperty;
			__tmp275.ValueLazy = () => __tmp276;
			__tmp276.ExpressionLazy = () => __tmp277;
			__tmp276.Arguments.AddLazy(() => __tmp278);
			__tmp276.TypeLazy = () => __tmp13;
			__tmp277.Name = "bind";
			__tmp277.TypeLazy = () => __tmp10;
			__tmp278.ExpressionLazy = () => __tmp279;
			__tmp278.Arguments.AddLazy(() => __tmp280);
			__tmp278.TypeLazy = () => __tmp14;
			__tmp279.Name = "resolve_name";
			__tmp279.TypeLazy = () => __tmp10;
			__tmp280.Name = "ObjectName";
			__tmp280.TypeLazy = () => __tmp2;
			__tmp281.ConstructorLazy = () => __tmp274;
			__tmp281.PropertyName = "PropertyContext";
			__tmp281.PropertyContextLazy = () => MetaInheritedPropertyInitializer;
			__tmp281.PropertyLazy = () => MetaPropertyInitializer_PropertyContextProperty;
			__tmp281.ValueLazy = () => __tmp282;
			__tmp282.TypeReferenceLazy = () => MetaClass;
			__tmp282.ExpressionLazy = () => __tmp283;
			__tmp282.TypeLazy = () => MetaClass;
			__tmp283.ExpressionLazy = () => __tmp284;
			__tmp283.Arguments.AddLazy(() => __tmp285);
			__tmp283.TypeLazy = () => MetaType;
			__tmp284.Name = "get_type";
			__tmp284.TypeLazy = () => __tmp10;
			__tmp285.Name = "Object";
			__tmp285.TypeLazy = () => MetaProperty;
			__tmp286.ConstructorLazy = () => __tmp274;
			__tmp286.PropertyName = "Property";
			__tmp286.PropertyContextLazy = () => MetaInheritedPropertyInitializer;
			__tmp286.PropertyLazy = () => MetaPropertyInitializer_PropertyProperty;
			__tmp286.ValueLazy = () => __tmp287;
			__tmp287.ExpressionLazy = () => __tmp288;
			__tmp287.Arguments.AddLazy(() => __tmp289);
			__tmp287.TypeLazy = () => __tmp13;
			__tmp288.Name = "bind";
			__tmp288.TypeLazy = () => __tmp10;
			__tmp289.ExpressionLazy = () => __tmp290;
			__tmp289.Arguments.AddLazy(() => __tmp291);
			__tmp289.Arguments.AddLazy(() => __tmp292);
			__tmp289.TypeLazy = () => __tmp14;
			__tmp290.Name = "resolve_name";
			__tmp290.TypeLazy = () => __tmp10;
			__tmp291.Name = "PropertyContext";
			__tmp291.TypeLazy = () => MetaClass;
			__tmp292.Name = "PropertyName";
			__tmp292.TypeLazy = () => __tmp2;
			MetaExpression.IsAbstract = true;
			MetaExpression.SuperClasses.AddLazy(() => MetaTypedElement);
			MetaExpression.Properties.AddLazy(() => MetaExpression_NoTypeErrorProperty);
			MetaExpression.Properties.AddLazy(() => MetaExpression_ExpectedTypeProperty);
			MetaExpression.ConstructorLazy = () => __tmp293;
			MetaExpression.NamespaceLazy = () => __tmp17;
			MetaExpression.Name = "MetaExpression";
			MetaExpression.Documentation = null;
			__tmp293.ParentLazy = () => MetaExpression;
			__tmp293.Initializers.AddLazy(() => __tmp294);
			__tmp293.Name = "MetaExpression";
			__tmp293.Documentation = null;
			__tmp294.ConstructorLazy = () => __tmp293;
			__tmp294.PropertyName = "NoTypeError";
			__tmp294.PropertyContextLazy = () => MetaExpression;
			__tmp294.PropertyLazy = () => MetaExpression_NoTypeErrorProperty;
			__tmp294.ValueLazy = () => __tmp295;
			__tmp295.ExpressionLazy = () => __tmp296;
			__tmp295.Arguments.AddLazy(() => __tmp297);
			__tmp295.TypeLazy = () => __tmp8;
			__tmp296.Name = "type_check";
			__tmp296.TypeLazy = () => __tmp10;
			__tmp297.TypeLazy = () => MetaExpression;
			MetaExpression_NoTypeErrorProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Readonly;
			MetaExpression_NoTypeErrorProperty.ClassLazy = () => MetaExpression;
			MetaExpression_NoTypeErrorProperty.Name = "NoTypeError";
			MetaExpression_NoTypeErrorProperty.Documentation = null;
			MetaExpression_NoTypeErrorProperty.TypeLazy = () => __tmp8;
			MetaExpression_ExpectedTypeProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Inherited;
			MetaExpression_ExpectedTypeProperty.ClassLazy = () => MetaExpression;
			MetaExpression_ExpectedTypeProperty.Name = "ExpectedType";
			MetaExpression_ExpectedTypeProperty.Documentation = null;
			MetaExpression_ExpectedTypeProperty.TypeLazy = () => MetaType;
			// MetaBracketExpression.IsAbstract = null;
			MetaBracketExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaBracketExpression.Properties.AddLazy(() => MetaBracketExpression_ExpressionProperty);
			MetaBracketExpression.ConstructorLazy = () => __tmp298;
			MetaBracketExpression.NamespaceLazy = () => __tmp17;
			MetaBracketExpression.Name = "MetaBracketExpression";
			MetaBracketExpression.Documentation = null;
			__tmp298.ParentLazy = () => MetaBracketExpression;
			__tmp298.Initializers.AddLazy(() => __tmp299);
			__tmp298.Initializers.AddLazy(() => __tmp302);
			__tmp298.Name = "MetaBracketExpression";
			__tmp298.Documentation = null;
			__tmp299.ConstructorLazy = () => __tmp298;
			__tmp299.PropertyName = "Type";
			__tmp299.PropertyContextLazy = () => MetaBracketExpression;
			__tmp299.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp299.ValueLazy = () => __tmp300;
			__tmp300.ExpressionLazy = () => __tmp301;
			__tmp300.Name = "Type";
			__tmp300.TypeLazy = () => MetaType;
			__tmp301.Name = "Expression";
			__tmp301.TypeLazy = () => MetaExpression;
			__tmp302.ObjectName = "Expression";
			__tmp302.ObjectLazy = () => MetaBracketExpression_ExpressionProperty;
			__tmp302.ConstructorLazy = () => __tmp298;
			__tmp302.PropertyName = "ExpectedType";
			__tmp302.PropertyContextLazy = () => MetaExpression;
			__tmp302.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp302.ValueLazy = () => __tmp303;
			__tmp303.Name = "ExpectedType";
			__tmp303.TypeLazy = () => MetaType;
			MetaBracketExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaBracketExpression_ExpressionProperty.ClassLazy = () => MetaBracketExpression;
			MetaBracketExpression_ExpressionProperty.Name = "Expression";
			MetaBracketExpression_ExpressionProperty.Documentation = null;
			MetaBracketExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			MetaBoundExpression.IsAbstract = true;
			MetaBoundExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaBoundExpression.Properties.AddLazy(() => MetaBoundExpression_UniqueDefinitionProperty);
			MetaBoundExpression.Properties.AddLazy(() => MetaBoundExpression_ArgumentsProperty);
			MetaBoundExpression.Properties.AddLazy(() => MetaBoundExpression_DefinitionsProperty);
			MetaBoundExpression.Properties.AddLazy(() => MetaBoundExpression_DefinitionProperty);
			MetaBoundExpression.ConstructorLazy = () => __tmp304;
			MetaBoundExpression.NamespaceLazy = () => __tmp17;
			MetaBoundExpression.Name = "MetaBoundExpression";
			MetaBoundExpression.Documentation = null;
			__tmp304.ParentLazy = () => MetaBoundExpression;
			__tmp304.Initializers.AddLazy(() => __tmp305);
			__tmp304.Initializers.AddLazy(() => __tmp307);
			__tmp304.Initializers.AddLazy(() => __tmp316);
			__tmp304.Name = "MetaBoundExpression";
			__tmp304.Documentation = null;
			__tmp305.ConstructorLazy = () => __tmp304;
			__tmp305.PropertyName = "UniqueDefinition";
			__tmp305.PropertyContextLazy = () => MetaBoundExpression;
			__tmp305.PropertyLazy = () => MetaBoundExpression_UniqueDefinitionProperty;
			__tmp305.ValueLazy = () => __tmp306;
			__tmp306.Value = true;
			__tmp306.TypeLazy = () => __tmp8;
			__tmp307.ConstructorLazy = () => __tmp304;
			__tmp307.PropertyName = "Definition";
			__tmp307.PropertyContextLazy = () => MetaBoundExpression;
			__tmp307.PropertyLazy = () => MetaBoundExpression_DefinitionProperty;
			__tmp307.ValueLazy = () => __tmp308;
			__tmp308.ConditionLazy = () => __tmp309;
			// __tmp308.BalancedType = null;
			__tmp308.ThenLazy = () => __tmp310;
			__tmp308.ElseLazy = () => __tmp314;
			__tmp308.TypeLazy = () => __tmp13;
			__tmp309.Name = "UniqueDefinition";
			__tmp309.TypeLazy = () => __tmp8;
			__tmp310.ExpressionLazy = () => __tmp311;
			__tmp310.Arguments.AddLazy(() => __tmp312);
			__tmp310.Arguments.AddLazy(() => __tmp313);
			__tmp310.TypeLazy = () => __tmp13;
			__tmp311.Name = "bind";
			__tmp311.TypeLazy = () => __tmp10;
			__tmp312.TypeLazy = () => MetaBoundExpression;
			__tmp313.Name = "Definitions";
			__tmp313.TypeLazy = () => __tmp14;
			__tmp314.ValueLazy = () => __tmp315;
			__tmp314.TypeLazy = () => __tmp11;
			__tmp315.TypeLazy = () => __tmp11;
			__tmp316.ConstructorLazy = () => __tmp304;
			__tmp316.PropertyName = "Type";
			__tmp316.PropertyContextLazy = () => MetaBoundExpression;
			__tmp316.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp316.ValueLazy = () => __tmp317;
			__tmp317.ExpressionLazy = () => __tmp318;
			__tmp317.Arguments.AddLazy(() => __tmp319);
			__tmp317.TypeLazy = () => MetaType;
			__tmp318.Name = "get_type";
			__tmp318.TypeLazy = () => __tmp10;
			__tmp319.Name = "Definition";
			__tmp319.TypeLazy = () => __tmp13;
			MetaBoundExpression_UniqueDefinitionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Inherited;
			MetaBoundExpression_UniqueDefinitionProperty.ClassLazy = () => MetaBoundExpression;
			MetaBoundExpression_UniqueDefinitionProperty.Name = "UniqueDefinition";
			MetaBoundExpression_UniqueDefinitionProperty.Documentation = null;
			MetaBoundExpression_UniqueDefinitionProperty.TypeLazy = () => __tmp8;
			__tmp320.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp320.InnerTypeLazy = () => MetaExpression;
			MetaBoundExpression_ArgumentsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaBoundExpression_ArgumentsProperty.ClassLazy = () => MetaBoundExpression;
			MetaBoundExpression_ArgumentsProperty.Name = "Arguments";
			MetaBoundExpression_ArgumentsProperty.Documentation = null;
			MetaBoundExpression_ArgumentsProperty.TypeLazy = () => __tmp320;
			MetaBoundExpression_DefinitionsProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Synthetized;
			MetaBoundExpression_DefinitionsProperty.ClassLazy = () => MetaBoundExpression;
			MetaBoundExpression_DefinitionsProperty.Name = "Definitions";
			MetaBoundExpression_DefinitionsProperty.Documentation = null;
			MetaBoundExpression_DefinitionsProperty.TypeLazy = () => __tmp14;
			MetaBoundExpression_DefinitionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Synthetized;
			MetaBoundExpression_DefinitionProperty.ClassLazy = () => MetaBoundExpression;
			MetaBoundExpression_DefinitionProperty.Name = "Definition";
			MetaBoundExpression_DefinitionProperty.Documentation = null;
			MetaBoundExpression_DefinitionProperty.TypeLazy = () => __tmp13;
			// MetaThisExpression.IsAbstract = null;
			MetaThisExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaThisExpression.ConstructorLazy = () => __tmp321;
			MetaThisExpression.NamespaceLazy = () => __tmp17;
			MetaThisExpression.Name = "MetaThisExpression";
			MetaThisExpression.Documentation = null;
			__tmp321.ParentLazy = () => MetaThisExpression;
			__tmp321.Initializers.AddLazy(() => __tmp322);
			__tmp321.Name = "MetaThisExpression";
			__tmp321.Documentation = null;
			__tmp322.ConstructorLazy = () => __tmp321;
			__tmp322.PropertyName = "Definition";
			__tmp322.PropertyContextLazy = () => MetaThisExpression;
			__tmp322.PropertyLazy = () => MetaBoundExpression_DefinitionProperty;
			__tmp322.ValueLazy = () => __tmp323;
			__tmp323.ExpressionLazy = () => __tmp324;
			__tmp323.Arguments.AddLazy(() => __tmp325);
			__tmp323.TypeLazy = () => MetaType;
			__tmp324.Name = "current_type";
			__tmp324.TypeLazy = () => __tmp10;
			__tmp325.TypeLazy = () => MetaThisExpression;
			// MetaNullExpression.IsAbstract = null;
			MetaNullExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaNullExpression.ConstructorLazy = () => __tmp326;
			MetaNullExpression.NamespaceLazy = () => __tmp17;
			MetaNullExpression.Name = "MetaNullExpression";
			MetaNullExpression.Documentation = null;
			__tmp326.ParentLazy = () => MetaNullExpression;
			__tmp326.Initializers.AddLazy(() => __tmp327);
			__tmp326.Name = "NullExpression";
			__tmp326.Documentation = null;
			__tmp327.ConstructorLazy = () => __tmp326;
			__tmp327.PropertyName = "Type";
			__tmp327.PropertyContextLazy = () => MetaNullExpression;
			__tmp327.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp327.ValueLazy = () => __tmp328;
			__tmp328.TypeReferenceLazy = () => __tmp11;
			// __tmp328.Type = null;
			MetaTypeConversionExpression.IsAbstract = true;
			MetaTypeConversionExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaTypeConversionExpression.Properties.AddLazy(() => MetaTypeConversionExpression_TypeReferenceProperty);
			MetaTypeConversionExpression.Properties.AddLazy(() => MetaTypeConversionExpression_ExpressionProperty);
			MetaTypeConversionExpression.ConstructorLazy = () => __tmp329;
			MetaTypeConversionExpression.NamespaceLazy = () => __tmp17;
			MetaTypeConversionExpression.Name = "MetaTypeConversionExpression";
			MetaTypeConversionExpression.Documentation = null;
			// MetaTypeConversionExpression_TypeReferenceProperty.Kind = null;
			MetaTypeConversionExpression_TypeReferenceProperty.ClassLazy = () => MetaTypeConversionExpression;
			MetaTypeConversionExpression_TypeReferenceProperty.Name = "TypeReference";
			MetaTypeConversionExpression_TypeReferenceProperty.Documentation = null;
			MetaTypeConversionExpression_TypeReferenceProperty.TypeLazy = () => MetaType;
			MetaTypeConversionExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaTypeConversionExpression_ExpressionProperty.ClassLazy = () => MetaTypeConversionExpression;
			MetaTypeConversionExpression_ExpressionProperty.Name = "Expression";
			MetaTypeConversionExpression_ExpressionProperty.Documentation = null;
			MetaTypeConversionExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			__tmp329.ParentLazy = () => MetaTypeConversionExpression;
			__tmp329.Initializers.AddLazy(() => __tmp330);
			__tmp329.Initializers.AddLazy(() => __tmp332);
			__tmp329.Name = "MetaTypeConversionExpression";
			__tmp329.Documentation = null;
			__tmp330.ConstructorLazy = () => __tmp329;
			__tmp330.PropertyName = "Type";
			__tmp330.PropertyContextLazy = () => MetaTypeConversionExpression;
			__tmp330.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp330.ValueLazy = () => __tmp331;
			__tmp331.Name = "TypeReference";
			__tmp331.TypeLazy = () => MetaType;
			__tmp332.ObjectName = "Expression";
			__tmp332.ObjectLazy = () => MetaTypeConversionExpression_ExpressionProperty;
			__tmp332.ConstructorLazy = () => __tmp329;
			__tmp332.PropertyName = "ExpectedType";
			__tmp332.PropertyContextLazy = () => MetaExpression;
			__tmp332.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp332.ValueLazy = () => __tmp333;
			__tmp333.TypeReferenceLazy = () => __tmp11;
			// __tmp333.Type = null;
			// MetaTypeAsExpression.IsAbstract = null;
			MetaTypeAsExpression.SuperClasses.AddLazy(() => MetaTypeConversionExpression);
			// MetaTypeAsExpression.Constructor = null;
			MetaTypeAsExpression.NamespaceLazy = () => __tmp17;
			MetaTypeAsExpression.Name = "MetaTypeAsExpression";
			MetaTypeAsExpression.Documentation = null;
			// MetaTypeCastExpression.IsAbstract = null;
			MetaTypeCastExpression.SuperClasses.AddLazy(() => MetaTypeConversionExpression);
			// MetaTypeCastExpression.Constructor = null;
			MetaTypeCastExpression.NamespaceLazy = () => __tmp17;
			MetaTypeCastExpression.Name = "MetaTypeCastExpression";
			MetaTypeCastExpression.Documentation = null;
			// MetaTypeCheckExpression.IsAbstract = null;
			MetaTypeCheckExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaTypeCheckExpression.Properties.AddLazy(() => MetaTypeCheckExpression_TypeReferenceProperty);
			MetaTypeCheckExpression.Properties.AddLazy(() => MetaTypeCheckExpression_ExpressionProperty);
			MetaTypeCheckExpression.ConstructorLazy = () => __tmp334;
			MetaTypeCheckExpression.NamespaceLazy = () => __tmp17;
			MetaTypeCheckExpression.Name = "MetaTypeCheckExpression";
			MetaTypeCheckExpression.Documentation = null;
			// MetaTypeCheckExpression_TypeReferenceProperty.Kind = null;
			MetaTypeCheckExpression_TypeReferenceProperty.ClassLazy = () => MetaTypeCheckExpression;
			MetaTypeCheckExpression_TypeReferenceProperty.Name = "TypeReference";
			MetaTypeCheckExpression_TypeReferenceProperty.Documentation = null;
			MetaTypeCheckExpression_TypeReferenceProperty.TypeLazy = () => MetaType;
			MetaTypeCheckExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaTypeCheckExpression_ExpressionProperty.ClassLazy = () => MetaTypeCheckExpression;
			MetaTypeCheckExpression_ExpressionProperty.Name = "Expression";
			MetaTypeCheckExpression_ExpressionProperty.Documentation = null;
			MetaTypeCheckExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			__tmp334.ParentLazy = () => MetaTypeCheckExpression;
			__tmp334.Initializers.AddLazy(() => __tmp335);
			__tmp334.Initializers.AddLazy(() => __tmp337);
			__tmp334.Name = "MetaTypeCheckExpression";
			__tmp334.Documentation = null;
			__tmp335.ConstructorLazy = () => __tmp334;
			__tmp335.PropertyName = "Type";
			__tmp335.PropertyContextLazy = () => MetaTypeCheckExpression;
			__tmp335.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp335.ValueLazy = () => __tmp336;
			__tmp336.TypeReferenceLazy = () => __tmp8;
			// __tmp336.Type = null;
			__tmp337.ObjectName = "Expression";
			__tmp337.ObjectLazy = () => MetaTypeCheckExpression_ExpressionProperty;
			__tmp337.ConstructorLazy = () => __tmp334;
			__tmp337.PropertyName = "ExpectedType";
			__tmp337.PropertyContextLazy = () => MetaExpression;
			__tmp337.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp337.ValueLazy = () => __tmp338;
			__tmp338.TypeReferenceLazy = () => __tmp11;
			// __tmp338.Type = null;
			// MetaTypeOfExpression.IsAbstract = null;
			MetaTypeOfExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaTypeOfExpression.Properties.AddLazy(() => MetaTypeOfExpression_TypeReferenceProperty);
			MetaTypeOfExpression.ConstructorLazy = () => __tmp339;
			MetaTypeOfExpression.NamespaceLazy = () => __tmp17;
			MetaTypeOfExpression.Name = "MetaTypeOfExpression";
			MetaTypeOfExpression.Documentation = null;
			// MetaTypeOfExpression_TypeReferenceProperty.Kind = null;
			MetaTypeOfExpression_TypeReferenceProperty.ClassLazy = () => MetaTypeOfExpression;
			MetaTypeOfExpression_TypeReferenceProperty.Name = "TypeReference";
			MetaTypeOfExpression_TypeReferenceProperty.Documentation = null;
			MetaTypeOfExpression_TypeReferenceProperty.TypeLazy = () => MetaType;
			__tmp339.ParentLazy = () => MetaTypeOfExpression;
			__tmp339.Initializers.AddLazy(() => __tmp340);
			__tmp339.Name = "MetaTypeOfExpression";
			__tmp339.Documentation = null;
			__tmp340.ConstructorLazy = () => __tmp339;
			__tmp340.PropertyName = "Type";
			__tmp340.PropertyContextLazy = () => MetaTypeOfExpression;
			__tmp340.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp340.ValueLazy = () => __tmp341;
			__tmp341.TypeReferenceLazy = () => MetaType;
			// __tmp341.Type = null;
			// MetaConditionalExpression.IsAbstract = null;
			MetaConditionalExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaConditionalExpression.Properties.AddLazy(() => MetaConditionalExpression_ConditionProperty);
			MetaConditionalExpression.Properties.AddLazy(() => MetaConditionalExpression_BalancedTypeProperty);
			MetaConditionalExpression.Properties.AddLazy(() => MetaConditionalExpression_ThenProperty);
			MetaConditionalExpression.Properties.AddLazy(() => MetaConditionalExpression_ElseProperty);
			MetaConditionalExpression.ConstructorLazy = () => __tmp342;
			MetaConditionalExpression.NamespaceLazy = () => __tmp17;
			MetaConditionalExpression.Name = "MetaConditionalExpression";
			MetaConditionalExpression.Documentation = null;
			MetaConditionalExpression_ConditionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaConditionalExpression_ConditionProperty.ClassLazy = () => MetaConditionalExpression;
			MetaConditionalExpression_ConditionProperty.Name = "Condition";
			MetaConditionalExpression_ConditionProperty.Documentation = null;
			MetaConditionalExpression_ConditionProperty.TypeLazy = () => MetaExpression;
			// MetaConditionalExpression_BalancedTypeProperty.Kind = null;
			MetaConditionalExpression_BalancedTypeProperty.ClassLazy = () => MetaConditionalExpression;
			MetaConditionalExpression_BalancedTypeProperty.Name = "BalancedType";
			MetaConditionalExpression_BalancedTypeProperty.Documentation = null;
			MetaConditionalExpression_BalancedTypeProperty.TypeLazy = () => MetaType;
			MetaConditionalExpression_ThenProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaConditionalExpression_ThenProperty.ClassLazy = () => MetaConditionalExpression;
			MetaConditionalExpression_ThenProperty.Name = "Then";
			MetaConditionalExpression_ThenProperty.Documentation = null;
			MetaConditionalExpression_ThenProperty.TypeLazy = () => MetaExpression;
			MetaConditionalExpression_ElseProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaConditionalExpression_ElseProperty.ClassLazy = () => MetaConditionalExpression;
			MetaConditionalExpression_ElseProperty.Name = "Else";
			MetaConditionalExpression_ElseProperty.Documentation = null;
			MetaConditionalExpression_ElseProperty.TypeLazy = () => MetaExpression;
			__tmp342.ParentLazy = () => MetaConditionalExpression;
			__tmp342.Initializers.AddLazy(() => __tmp343);
			__tmp342.Initializers.AddLazy(() => __tmp345);
			__tmp342.Initializers.AddLazy(() => __tmp352);
			__tmp342.Initializers.AddLazy(() => __tmp354);
			__tmp342.Name = "MetaConditionalExpression";
			__tmp342.Documentation = null;
			__tmp343.ObjectName = "Condition";
			__tmp343.ObjectLazy = () => MetaConditionalExpression_ConditionProperty;
			__tmp343.ConstructorLazy = () => __tmp342;
			__tmp343.PropertyName = "ExpectedType";
			__tmp343.PropertyContextLazy = () => MetaExpression;
			__tmp343.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp343.ValueLazy = () => __tmp344;
			__tmp344.TypeReferenceLazy = () => __tmp8;
			// __tmp344.Type = null;
			__tmp345.ConstructorLazy = () => __tmp342;
			__tmp345.PropertyName = "Type";
			__tmp345.PropertyContextLazy = () => MetaConditionalExpression;
			__tmp345.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp345.ValueLazy = () => __tmp346;
			__tmp346.ExpressionLazy = () => __tmp347;
			__tmp346.Arguments.AddLazy(() => __tmp348);
			__tmp346.Arguments.AddLazy(() => __tmp350);
			__tmp346.TypeLazy = () => MetaType;
			__tmp347.Name = "balance";
			__tmp347.TypeLazy = () => __tmp10;
			__tmp348.ExpressionLazy = () => __tmp349;
			__tmp348.Name = "Type";
			__tmp348.TypeLazy = () => MetaType;
			__tmp349.Name = "Then";
			__tmp349.TypeLazy = () => MetaExpression;
			__tmp350.ExpressionLazy = () => __tmp351;
			__tmp350.Name = "Type";
			__tmp350.TypeLazy = () => MetaType;
			__tmp351.Name = "Else";
			__tmp351.TypeLazy = () => MetaExpression;
			__tmp352.ObjectName = "Then";
			__tmp352.ObjectLazy = () => MetaConditionalExpression_ThenProperty;
			__tmp352.ConstructorLazy = () => __tmp342;
			__tmp352.PropertyName = "ExpectedType";
			__tmp352.PropertyContextLazy = () => MetaExpression;
			__tmp352.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp352.ValueLazy = () => __tmp353;
			__tmp353.Name = "ExpectedType";
			__tmp353.TypeLazy = () => MetaType;
			__tmp354.ObjectName = "Else";
			__tmp354.ObjectLazy = () => MetaConditionalExpression_ElseProperty;
			__tmp354.ConstructorLazy = () => __tmp342;
			__tmp354.PropertyName = "ExpectedType";
			__tmp354.PropertyContextLazy = () => MetaExpression;
			__tmp354.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp354.ValueLazy = () => __tmp355;
			__tmp355.Name = "ExpectedType";
			__tmp355.TypeLazy = () => MetaType;
			// MetaConstantExpression.IsAbstract = null;
			MetaConstantExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaConstantExpression.Properties.AddLazy(() => MetaConstantExpression_ValueProperty);
			MetaConstantExpression.ConstructorLazy = () => __tmp356;
			MetaConstantExpression.NamespaceLazy = () => __tmp17;
			MetaConstantExpression.Name = "MetaConstantExpression";
			MetaConstantExpression.Documentation = null;
			// MetaConstantExpression_ValueProperty.Kind = null;
			MetaConstantExpression_ValueProperty.ClassLazy = () => MetaConstantExpression;
			MetaConstantExpression_ValueProperty.Name = "Value";
			MetaConstantExpression_ValueProperty.Documentation = null;
			MetaConstantExpression_ValueProperty.TypeLazy = () => __tmp1;
			__tmp356.ParentLazy = () => MetaConstantExpression;
			__tmp356.Initializers.AddLazy(() => __tmp357);
			__tmp356.Name = "MetaConstantExpression";
			__tmp356.Documentation = null;
			__tmp357.ConstructorLazy = () => __tmp356;
			__tmp357.PropertyName = "Type";
			__tmp357.PropertyContextLazy = () => MetaConstantExpression;
			__tmp357.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp357.ValueLazy = () => __tmp358;
			__tmp358.ExpressionLazy = () => __tmp359;
			__tmp358.Arguments.AddLazy(() => __tmp360);
			__tmp358.TypeLazy = () => MetaType;
			__tmp359.Name = "get_type";
			__tmp359.TypeLazy = () => __tmp10;
			__tmp360.Name = "Value";
			__tmp360.TypeLazy = () => __tmp1;
			// MetaIdentifierExpression.IsAbstract = null;
			MetaIdentifierExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaIdentifierExpression.Properties.AddLazy(() => MetaIdentifierExpression_NameProperty);
			MetaIdentifierExpression.ConstructorLazy = () => __tmp361;
			MetaIdentifierExpression.NamespaceLazy = () => __tmp17;
			MetaIdentifierExpression.Name = "MetaIdentifierExpression";
			MetaIdentifierExpression.Documentation = null;
			// MetaIdentifierExpression_NameProperty.Kind = null;
			MetaIdentifierExpression_NameProperty.ClassLazy = () => MetaIdentifierExpression;
			MetaIdentifierExpression_NameProperty.Name = "Name";
			MetaIdentifierExpression_NameProperty.Documentation = null;
			MetaIdentifierExpression_NameProperty.TypeLazy = () => __tmp2;
			__tmp361.ParentLazy = () => MetaIdentifierExpression;
			__tmp361.Initializers.AddLazy(() => __tmp362);
			__tmp361.Name = "MetaIdentifierExpression";
			__tmp361.Documentation = null;
			__tmp362.ConstructorLazy = () => __tmp361;
			__tmp362.PropertyName = "Definitions";
			__tmp362.PropertyContextLazy = () => MetaIdentifierExpression;
			__tmp362.PropertyLazy = () => MetaBoundExpression_DefinitionsProperty;
			__tmp362.ValueLazy = () => __tmp363;
			__tmp363.ExpressionLazy = () => __tmp364;
			__tmp363.Arguments.AddLazy(() => __tmp365);
			__tmp363.TypeLazy = () => __tmp14;
			__tmp364.Name = "resolve_name";
			__tmp364.TypeLazy = () => __tmp10;
			__tmp365.Name = "Name";
			__tmp365.TypeLazy = () => __tmp2;
			// MetaMemberAccessExpression.IsAbstract = null;
			MetaMemberAccessExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaMemberAccessExpression.Properties.AddLazy(() => MetaMemberAccessExpression_ExpressionProperty);
			MetaMemberAccessExpression.Properties.AddLazy(() => MetaMemberAccessExpression_NameProperty);
			MetaMemberAccessExpression.ConstructorLazy = () => __tmp366;
			MetaMemberAccessExpression.NamespaceLazy = () => __tmp17;
			MetaMemberAccessExpression.Name = "MetaMemberAccessExpression";
			MetaMemberAccessExpression.Documentation = null;
			MetaMemberAccessExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaMemberAccessExpression_ExpressionProperty.ClassLazy = () => MetaMemberAccessExpression;
			MetaMemberAccessExpression_ExpressionProperty.Name = "Expression";
			MetaMemberAccessExpression_ExpressionProperty.Documentation = null;
			MetaMemberAccessExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			// MetaMemberAccessExpression_NameProperty.Kind = null;
			MetaMemberAccessExpression_NameProperty.ClassLazy = () => MetaMemberAccessExpression;
			MetaMemberAccessExpression_NameProperty.Name = "Name";
			MetaMemberAccessExpression_NameProperty.Documentation = null;
			MetaMemberAccessExpression_NameProperty.TypeLazy = () => __tmp2;
			__tmp366.ParentLazy = () => MetaMemberAccessExpression;
			__tmp366.Initializers.AddLazy(() => __tmp367);
			__tmp366.Initializers.AddLazy(() => __tmp369);
			__tmp366.Name = "MetaMemberAccessExpression";
			__tmp366.Documentation = null;
			__tmp367.ObjectName = "Expression";
			__tmp367.ObjectLazy = () => MetaMemberAccessExpression_ExpressionProperty;
			__tmp367.ConstructorLazy = () => __tmp366;
			__tmp367.PropertyName = "ExpectedType";
			__tmp367.PropertyContextLazy = () => MetaExpression;
			__tmp367.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp367.ValueLazy = () => __tmp368;
			__tmp368.TypeReferenceLazy = () => __tmp10;
			// __tmp368.Type = null;
			__tmp369.ConstructorLazy = () => __tmp366;
			__tmp369.PropertyName = "Definitions";
			__tmp369.PropertyContextLazy = () => MetaMemberAccessExpression;
			__tmp369.PropertyLazy = () => MetaBoundExpression_DefinitionsProperty;
			__tmp369.ValueLazy = () => __tmp370;
			__tmp370.ExpressionLazy = () => __tmp371;
			__tmp370.Arguments.AddLazy(() => __tmp372);
			__tmp370.Arguments.AddLazy(() => __tmp374);
			__tmp370.TypeLazy = () => __tmp14;
			__tmp371.Name = "resolve_name";
			__tmp371.TypeLazy = () => __tmp10;
			__tmp372.ExpressionLazy = () => __tmp373;
			__tmp372.Name = "Type";
			__tmp372.TypeLazy = () => MetaType;
			__tmp373.Name = "Expression";
			__tmp373.TypeLazy = () => MetaExpression;
			__tmp374.Name = "Name";
			__tmp374.TypeLazy = () => __tmp2;
			// MetaFunctionCallExpression.IsAbstract = null;
			MetaFunctionCallExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaFunctionCallExpression.Properties.AddLazy(() => MetaFunctionCallExpression_ExpressionProperty);
			MetaFunctionCallExpression.ConstructorLazy = () => __tmp375;
			MetaFunctionCallExpression.NamespaceLazy = () => __tmp17;
			MetaFunctionCallExpression.Name = "MetaFunctionCallExpression";
			MetaFunctionCallExpression.Documentation = null;
			MetaFunctionCallExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaFunctionCallExpression_ExpressionProperty.ClassLazy = () => MetaFunctionCallExpression;
			MetaFunctionCallExpression_ExpressionProperty.Name = "Expression";
			MetaFunctionCallExpression_ExpressionProperty.Documentation = null;
			MetaFunctionCallExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			__tmp375.ParentLazy = () => MetaFunctionCallExpression;
			__tmp375.Initializers.AddLazy(() => __tmp376);
			__tmp375.Initializers.AddLazy(() => __tmp378);
			__tmp375.Initializers.AddLazy(() => __tmp380);
			__tmp375.Initializers.AddLazy(() => __tmp392);
			__tmp375.Name = "MetaFunctionCallExpression";
			__tmp375.Documentation = null;
			__tmp376.ObjectName = "Expression";
			__tmp376.ObjectLazy = () => MetaFunctionCallExpression_ExpressionProperty;
			__tmp376.ConstructorLazy = () => __tmp375;
			__tmp376.PropertyName = "UniqueDefinition";
			__tmp376.PropertyContextLazy = () => MetaBoundExpression;
			__tmp376.PropertyLazy = () => MetaBoundExpression_UniqueDefinitionProperty;
			__tmp376.ValueLazy = () => __tmp377;
			__tmp377.Value = false;
			__tmp377.TypeLazy = () => __tmp8;
			__tmp378.ObjectName = "Expression";
			__tmp378.ObjectLazy = () => MetaFunctionCallExpression_ExpressionProperty;
			__tmp378.ConstructorLazy = () => __tmp375;
			__tmp378.PropertyName = "ExpectedType";
			__tmp378.PropertyContextLazy = () => MetaExpression;
			__tmp378.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp378.ValueLazy = () => __tmp379;
			__tmp379.TypeReferenceLazy = () => __tmp10;
			// __tmp379.Type = null;
			__tmp380.ConstructorLazy = () => __tmp375;
			__tmp380.PropertyName = "Definitions";
			__tmp380.PropertyContextLazy = () => MetaFunctionCallExpression;
			__tmp380.PropertyLazy = () => MetaBoundExpression_DefinitionsProperty;
			__tmp380.ValueLazy = () => __tmp381;
			__tmp381.ConditionLazy = () => __tmp382;
			// __tmp381.BalancedType = null;
			__tmp381.ThenLazy = () => __tmp384;
			__tmp381.ElseLazy = () => __tmp388;
			__tmp381.TypeLazy = () => __tmp14;
			__tmp382.TypeReferenceLazy = () => MetaBoundExpression;
			__tmp382.ExpressionLazy = () => __tmp383;
			__tmp382.TypeLazy = () => __tmp8;
			__tmp383.Name = "Expression";
			__tmp383.TypeLazy = () => MetaExpression;
			__tmp384.ExpressionLazy = () => __tmp385;
			__tmp384.Name = "Definitions";
			__tmp384.TypeLazy = () => __tmp14;
			__tmp385.ExpressionLazy = () => __tmp386;
			__tmp385.TypeLazy = () => MetaBoundExpression;
			__tmp386.TypeReferenceLazy = () => MetaBoundExpression;
			__tmp386.ExpressionLazy = () => __tmp387;
			__tmp386.TypeLazy = () => MetaBoundExpression;
			__tmp387.Name = "Expression";
			__tmp387.TypeLazy = () => MetaExpression;
			__tmp388.ExpressionLazy = () => __tmp389;
			__tmp388.Arguments.AddLazy(() => __tmp390);
			__tmp388.TypeLazy = () => __tmp14;
			__tmp389.Name = "definition_list";
			__tmp389.TypeLazy = () => __tmp10;
			__tmp390.ExpressionLazy = () => __tmp391;
			__tmp390.Name = "Type";
			__tmp390.TypeLazy = () => MetaType;
			__tmp391.Name = "Expression";
			__tmp391.TypeLazy = () => MetaExpression;
			__tmp392.ConstructorLazy = () => __tmp375;
			__tmp392.PropertyName = "Type";
			__tmp392.PropertyContextLazy = () => MetaFunctionCallExpression;
			__tmp392.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp392.ValueLazy = () => __tmp393;
			__tmp393.ExpressionLazy = () => __tmp394;
			__tmp393.Arguments.AddLazy(() => __tmp395);
			__tmp393.TypeLazy = () => MetaType;
			__tmp394.Name = "get_return_type";
			__tmp394.TypeLazy = () => __tmp10;
			__tmp395.Name = "Definition";
			__tmp395.TypeLazy = () => __tmp13;
			// MetaIndexerExpression.IsAbstract = null;
			MetaIndexerExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaIndexerExpression.Properties.AddLazy(() => MetaIndexerExpression_ExpressionProperty);
			MetaIndexerExpression.ConstructorLazy = () => __tmp396;
			MetaIndexerExpression.NamespaceLazy = () => __tmp17;
			MetaIndexerExpression.Name = "MetaIndexerExpression";
			MetaIndexerExpression.Documentation = null;
			MetaIndexerExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaIndexerExpression_ExpressionProperty.ClassLazy = () => MetaIndexerExpression;
			MetaIndexerExpression_ExpressionProperty.Name = "Expression";
			MetaIndexerExpression_ExpressionProperty.Documentation = null;
			MetaIndexerExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			__tmp396.ParentLazy = () => MetaIndexerExpression;
			__tmp396.Initializers.AddLazy(() => __tmp397);
			__tmp396.Initializers.AddLazy(() => __tmp399);
			__tmp396.Initializers.AddLazy(() => __tmp401);
			__tmp396.Name = "MetaIndexerExpression";
			__tmp396.Documentation = null;
			__tmp397.ObjectName = "Expression";
			__tmp397.ObjectLazy = () => MetaIndexerExpression_ExpressionProperty;
			__tmp397.ConstructorLazy = () => __tmp396;
			__tmp397.PropertyName = "UniqueDefinition";
			__tmp397.PropertyContextLazy = () => MetaBoundExpression;
			__tmp397.PropertyLazy = () => MetaBoundExpression_UniqueDefinitionProperty;
			__tmp397.ValueLazy = () => __tmp398;
			__tmp398.Value = false;
			__tmp398.TypeLazy = () => __tmp8;
			__tmp399.ObjectName = "Expression";
			__tmp399.ObjectLazy = () => MetaIndexerExpression_ExpressionProperty;
			__tmp399.ConstructorLazy = () => __tmp396;
			__tmp399.PropertyName = "ExpectedType";
			__tmp399.PropertyContextLazy = () => MetaExpression;
			__tmp399.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp399.ValueLazy = () => __tmp400;
			__tmp400.TypeReferenceLazy = () => __tmp10;
			// __tmp400.Type = null;
			__tmp401.ConstructorLazy = () => __tmp396;
			__tmp401.PropertyName = "Definitions";
			__tmp401.PropertyContextLazy = () => MetaIndexerExpression;
			__tmp401.PropertyLazy = () => MetaBoundExpression_DefinitionsProperty;
			__tmp401.ValueLazy = () => __tmp402;
			__tmp402.ConditionLazy = () => __tmp403;
			// __tmp402.BalancedType = null;
			__tmp402.ThenLazy = () => __tmp405;
			__tmp402.ElseLazy = () => __tmp409;
			__tmp402.TypeLazy = () => __tmp14;
			__tmp403.TypeReferenceLazy = () => MetaBoundExpression;
			__tmp403.ExpressionLazy = () => __tmp404;
			__tmp403.TypeLazy = () => __tmp8;
			__tmp404.Name = "Expression";
			__tmp404.TypeLazy = () => MetaExpression;
			__tmp405.ExpressionLazy = () => __tmp406;
			__tmp405.Name = "Definitions";
			__tmp405.TypeLazy = () => __tmp14;
			__tmp406.ExpressionLazy = () => __tmp407;
			__tmp406.TypeLazy = () => MetaBoundExpression;
			__tmp407.TypeReferenceLazy = () => MetaBoundExpression;
			__tmp407.ExpressionLazy = () => __tmp408;
			__tmp407.TypeLazy = () => MetaBoundExpression;
			__tmp408.Name = "Expression";
			__tmp408.TypeLazy = () => MetaExpression;
			__tmp409.ExpressionLazy = () => __tmp410;
			__tmp409.Arguments.AddLazy(() => __tmp411);
			__tmp409.TypeLazy = () => __tmp14;
			__tmp410.Name = "definition_list";
			__tmp410.TypeLazy = () => __tmp10;
			__tmp411.ExpressionLazy = () => __tmp412;
			__tmp411.Name = "Type";
			__tmp411.TypeLazy = () => MetaType;
			__tmp412.Name = "Expression";
			__tmp412.TypeLazy = () => MetaExpression;
			// MetaNewExpression.IsAbstract = null;
			MetaNewExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaNewExpression.Properties.AddLazy(() => MetaNewExpression_TypeReferenceProperty);
			MetaNewExpression.Properties.AddLazy(() => MetaNewExpression_PropertyInitializersProperty);
			MetaNewExpression.ConstructorLazy = () => __tmp414;
			MetaNewExpression.NamespaceLazy = () => __tmp17;
			MetaNewExpression.Name = "MetaNewExpression";
			MetaNewExpression.Documentation = null;
			// MetaNewExpression_TypeReferenceProperty.Kind = null;
			MetaNewExpression_TypeReferenceProperty.ClassLazy = () => MetaNewExpression;
			MetaNewExpression_TypeReferenceProperty.Name = "TypeReference";
			MetaNewExpression_TypeReferenceProperty.Documentation = null;
			MetaNewExpression_TypeReferenceProperty.TypeLazy = () => MetaClass;
			__tmp413.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp413.InnerTypeLazy = () => MetaNewPropertyInitializer;
			MetaNewExpression_PropertyInitializersProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNewExpression_PropertyInitializersProperty.ClassLazy = () => MetaNewExpression;
			MetaNewExpression_PropertyInitializersProperty.OppositeProperties.AddLazy(() => MetaNewPropertyInitializer_ParentProperty);
			MetaNewExpression_PropertyInitializersProperty.Name = "PropertyInitializers";
			MetaNewExpression_PropertyInitializersProperty.Documentation = null;
			MetaNewExpression_PropertyInitializersProperty.TypeLazy = () => __tmp413;
			__tmp414.ParentLazy = () => MetaNewExpression;
			__tmp414.Initializers.AddLazy(() => __tmp415);
			__tmp414.Name = "MetaNewExpression";
			__tmp414.Documentation = null;
			__tmp415.ConstructorLazy = () => __tmp414;
			__tmp415.PropertyName = "Type";
			__tmp415.PropertyContextLazy = () => MetaNewExpression;
			__tmp415.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp415.ValueLazy = () => __tmp416;
			__tmp416.Name = "TypeReference";
			__tmp416.TypeLazy = () => MetaClass;
			// MetaNewPropertyInitializer.IsAbstract = null;
			MetaNewPropertyInitializer.Properties.AddLazy(() => MetaNewPropertyInitializer_ParentProperty);
			MetaNewPropertyInitializer.Properties.AddLazy(() => MetaNewPropertyInitializer_PropertyNameProperty);
			MetaNewPropertyInitializer.Properties.AddLazy(() => MetaNewPropertyInitializer_ValueProperty);
			MetaNewPropertyInitializer.Properties.AddLazy(() => MetaNewPropertyInitializer_PropertyProperty);
			MetaNewPropertyInitializer.ConstructorLazy = () => __tmp417;
			MetaNewPropertyInitializer.NamespaceLazy = () => __tmp17;
			MetaNewPropertyInitializer.Name = "MetaNewPropertyInitializer";
			MetaNewPropertyInitializer.Documentation = null;
			// MetaNewPropertyInitializer_ParentProperty.Kind = null;
			MetaNewPropertyInitializer_ParentProperty.ClassLazy = () => MetaNewPropertyInitializer;
			MetaNewPropertyInitializer_ParentProperty.OppositeProperties.AddLazy(() => MetaNewExpression_PropertyInitializersProperty);
			MetaNewPropertyInitializer_ParentProperty.Name = "Parent";
			MetaNewPropertyInitializer_ParentProperty.Documentation = null;
			MetaNewPropertyInitializer_ParentProperty.TypeLazy = () => MetaNewExpression;
			// MetaNewPropertyInitializer_PropertyNameProperty.Kind = null;
			MetaNewPropertyInitializer_PropertyNameProperty.ClassLazy = () => MetaNewPropertyInitializer;
			MetaNewPropertyInitializer_PropertyNameProperty.Name = "PropertyName";
			MetaNewPropertyInitializer_PropertyNameProperty.Documentation = null;
			MetaNewPropertyInitializer_PropertyNameProperty.TypeLazy = () => __tmp2;
			MetaNewPropertyInitializer_ValueProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNewPropertyInitializer_ValueProperty.ClassLazy = () => MetaNewPropertyInitializer;
			MetaNewPropertyInitializer_ValueProperty.Name = "Value";
			MetaNewPropertyInitializer_ValueProperty.Documentation = null;
			MetaNewPropertyInitializer_ValueProperty.TypeLazy = () => MetaExpression;
			// MetaNewPropertyInitializer_PropertyProperty.Kind = null;
			MetaNewPropertyInitializer_PropertyProperty.ClassLazy = () => MetaNewPropertyInitializer;
			MetaNewPropertyInitializer_PropertyProperty.Name = "Property";
			MetaNewPropertyInitializer_PropertyProperty.Documentation = null;
			MetaNewPropertyInitializer_PropertyProperty.TypeLazy = () => MetaProperty;
			__tmp417.ParentLazy = () => MetaNewPropertyInitializer;
			__tmp417.Initializers.AddLazy(() => __tmp418);
			__tmp417.Initializers.AddLazy(() => __tmp426);
			__tmp417.Name = "NewPropertyInitializer";
			__tmp417.Documentation = null;
			__tmp418.ConstructorLazy = () => __tmp417;
			__tmp418.PropertyName = "Property";
			__tmp418.PropertyContextLazy = () => MetaNewPropertyInitializer;
			__tmp418.PropertyLazy = () => MetaNewPropertyInitializer_PropertyProperty;
			__tmp418.ValueLazy = () => __tmp419;
			__tmp419.ExpressionLazy = () => __tmp420;
			__tmp419.Arguments.AddLazy(() => __tmp421);
			__tmp419.TypeLazy = () => __tmp13;
			__tmp420.Name = "bind";
			__tmp420.TypeLazy = () => __tmp10;
			__tmp421.ExpressionLazy = () => __tmp422;
			__tmp421.Arguments.AddLazy(() => __tmp423);
			__tmp421.Arguments.AddLazy(() => __tmp425);
			__tmp421.TypeLazy = () => __tmp14;
			__tmp422.Name = "resolve_name";
			__tmp422.TypeLazy = () => __tmp10;
			__tmp423.ExpressionLazy = () => __tmp424;
			__tmp423.Name = "Type";
			__tmp423.TypeLazy = () => MetaType;
			__tmp424.Name = "Parent";
			__tmp424.TypeLazy = () => MetaNewExpression;
			__tmp425.Name = "PropertyName";
			__tmp425.TypeLazy = () => __tmp2;
			__tmp426.ObjectName = "Value";
			__tmp426.ObjectLazy = () => MetaNewPropertyInitializer_ValueProperty;
			__tmp426.ConstructorLazy = () => __tmp417;
			__tmp426.PropertyName = "ExpectedType";
			__tmp426.PropertyContextLazy = () => MetaExpression;
			__tmp426.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp426.ValueLazy = () => __tmp427;
			__tmp427.ExpressionLazy = () => __tmp428;
			__tmp427.Arguments.AddLazy(() => __tmp429);
			__tmp427.TypeLazy = () => MetaType;
			__tmp428.Name = "get_type";
			__tmp428.TypeLazy = () => __tmp10;
			__tmp429.Name = "Property";
			__tmp429.TypeLazy = () => MetaProperty;
			// MetaNewCollectionExpression.IsAbstract = null;
			MetaNewCollectionExpression.SuperClasses.AddLazy(() => MetaExpression);
			MetaNewCollectionExpression.Properties.AddLazy(() => MetaNewCollectionExpression_TypeReferenceProperty);
			MetaNewCollectionExpression.Properties.AddLazy(() => MetaNewCollectionExpression_ValuesProperty);
			MetaNewCollectionExpression.ConstructorLazy = () => __tmp431;
			MetaNewCollectionExpression.NamespaceLazy = () => __tmp17;
			MetaNewCollectionExpression.Name = "MetaNewCollectionExpression";
			MetaNewCollectionExpression.Documentation = null;
			// MetaNewCollectionExpression_TypeReferenceProperty.Kind = null;
			MetaNewCollectionExpression_TypeReferenceProperty.ClassLazy = () => MetaNewCollectionExpression;
			MetaNewCollectionExpression_TypeReferenceProperty.Name = "TypeReference";
			MetaNewCollectionExpression_TypeReferenceProperty.Documentation = null;
			MetaNewCollectionExpression_TypeReferenceProperty.TypeLazy = () => MetaCollectionType;
			__tmp430.Kind = global::MetaDslx.Core.Immutable.MetaCollectionKind.List;
			__tmp430.InnerTypeLazy = () => MetaExpression;
			MetaNewCollectionExpression_ValuesProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaNewCollectionExpression_ValuesProperty.ClassLazy = () => MetaNewCollectionExpression;
			MetaNewCollectionExpression_ValuesProperty.Name = "Values";
			MetaNewCollectionExpression_ValuesProperty.Documentation = null;
			MetaNewCollectionExpression_ValuesProperty.TypeLazy = () => __tmp430;
			__tmp431.ParentLazy = () => MetaNewCollectionExpression;
			__tmp431.Initializers.AddLazy(() => __tmp432);
			__tmp431.Name = "MetaNewCollectionExpression";
			__tmp431.Documentation = null;
			__tmp432.ConstructorLazy = () => __tmp431;
			__tmp432.PropertyName = "Type";
			__tmp432.PropertyContextLazy = () => MetaNewCollectionExpression;
			__tmp432.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp432.ValueLazy = () => __tmp433;
			__tmp433.Name = "TypeReference";
			__tmp433.TypeLazy = () => MetaCollectionType;
			MetaOperatorExpression.IsAbstract = true;
			MetaOperatorExpression.SuperClasses.AddLazy(() => MetaBoundExpression);
			MetaOperatorExpression.Properties.AddLazy(() => MetaOperatorExpression_NameProperty);
			MetaOperatorExpression.ConstructorLazy = () => __tmp434;
			MetaOperatorExpression.NamespaceLazy = () => __tmp17;
			MetaOperatorExpression.Name = "MetaOperatorExpression";
			MetaOperatorExpression.Documentation = null;
			MetaOperatorExpression_NameProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Readonly;
			MetaOperatorExpression_NameProperty.ClassLazy = () => MetaOperatorExpression;
			MetaOperatorExpression_NameProperty.Name = "Name";
			MetaOperatorExpression_NameProperty.Documentation = null;
			MetaOperatorExpression_NameProperty.TypeLazy = () => __tmp2;
			__tmp434.ParentLazy = () => MetaOperatorExpression;
			__tmp434.Initializers.AddLazy(() => __tmp435);
			__tmp434.Name = "MetaOperatorExpression";
			__tmp434.Documentation = null;
			__tmp435.ConstructorLazy = () => __tmp434;
			__tmp435.PropertyName = "Definitions";
			__tmp435.PropertyContextLazy = () => MetaOperatorExpression;
			__tmp435.PropertyLazy = () => MetaBoundExpression_DefinitionsProperty;
			__tmp435.ValueLazy = () => __tmp436;
			__tmp436.ExpressionLazy = () => __tmp437;
			__tmp436.Arguments.AddLazy(() => __tmp438);
			__tmp436.TypeLazy = () => __tmp14;
			__tmp437.Name = "resolve_name";
			__tmp437.TypeLazy = () => __tmp10;
			__tmp438.Name = "Name";
			__tmp438.TypeLazy = () => __tmp2;
			MetaUnaryExpression.IsAbstract = true;
			MetaUnaryExpression.SuperClasses.AddLazy(() => MetaOperatorExpression);
			MetaUnaryExpression.Properties.AddLazy(() => MetaUnaryExpression_ExpressionProperty);
			MetaUnaryExpression.ConstructorLazy = () => __tmp439;
			MetaUnaryExpression.NamespaceLazy = () => __tmp17;
			MetaUnaryExpression.Name = "MetaUnaryExpression";
			MetaUnaryExpression.Documentation = null;
			__tmp439.ParentLazy = () => MetaUnaryExpression;
			__tmp439.Name = "MetaUnaryExpression";
			__tmp439.Documentation = null;
			MetaUnaryExpression_ExpressionProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaUnaryExpression_ExpressionProperty.ClassLazy = () => MetaUnaryExpression;
			MetaUnaryExpression_ExpressionProperty.Name = "Expression";
			MetaUnaryExpression_ExpressionProperty.Documentation = null;
			MetaUnaryExpression_ExpressionProperty.TypeLazy = () => MetaExpression;
			// MetaUnaryPlusExpression.IsAbstract = null;
			MetaUnaryPlusExpression.SuperClasses.AddLazy(() => MetaUnaryExpression);
			MetaUnaryPlusExpression.ConstructorLazy = () => __tmp440;
			MetaUnaryPlusExpression.NamespaceLazy = () => __tmp17;
			MetaUnaryPlusExpression.Name = "MetaUnaryPlusExpression";
			MetaUnaryPlusExpression.Documentation = null;
			__tmp440.ParentLazy = () => MetaUnaryPlusExpression;
			__tmp440.Initializers.AddLazy(() => __tmp441);
			__tmp440.Name = "MetaUnaryPlusExpression";
			__tmp440.Documentation = null;
			__tmp441.ConstructorLazy = () => __tmp440;
			__tmp441.PropertyName = "Name";
			__tmp441.PropertyContextLazy = () => MetaUnaryPlusExpression;
			__tmp441.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp441.ValueLazy = () => __tmp442;
			__tmp442.Value = "operator+()";
			__tmp442.TypeLazy = () => __tmp2;
			// MetaNegateExpression.IsAbstract = null;
			MetaNegateExpression.SuperClasses.AddLazy(() => MetaUnaryExpression);
			MetaNegateExpression.ConstructorLazy = () => __tmp443;
			MetaNegateExpression.NamespaceLazy = () => __tmp17;
			MetaNegateExpression.Name = "MetaNegateExpression";
			MetaNegateExpression.Documentation = null;
			__tmp443.ParentLazy = () => MetaNegateExpression;
			__tmp443.Initializers.AddLazy(() => __tmp444);
			__tmp443.Name = "MetaNegateExpression";
			__tmp443.Documentation = null;
			__tmp444.ConstructorLazy = () => __tmp443;
			__tmp444.PropertyName = "Name";
			__tmp444.PropertyContextLazy = () => MetaNegateExpression;
			__tmp444.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp444.ValueLazy = () => __tmp445;
			__tmp445.Value = "operator-()";
			__tmp445.TypeLazy = () => __tmp2;
			// MetaOnesComplementExpression.IsAbstract = null;
			MetaOnesComplementExpression.SuperClasses.AddLazy(() => MetaUnaryExpression);
			MetaOnesComplementExpression.ConstructorLazy = () => __tmp446;
			MetaOnesComplementExpression.NamespaceLazy = () => __tmp17;
			MetaOnesComplementExpression.Name = "MetaOnesComplementExpression";
			MetaOnesComplementExpression.Documentation = null;
			__tmp446.ParentLazy = () => MetaOnesComplementExpression;
			__tmp446.Initializers.AddLazy(() => __tmp447);
			__tmp446.Name = "MetaOnesComplementExpression";
			__tmp446.Documentation = null;
			__tmp447.ConstructorLazy = () => __tmp446;
			__tmp447.PropertyName = "Name";
			__tmp447.PropertyContextLazy = () => MetaOnesComplementExpression;
			__tmp447.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp447.ValueLazy = () => __tmp448;
			__tmp448.Value = "operator~()";
			__tmp448.TypeLazy = () => __tmp2;
			// MetaNotExpression.IsAbstract = null;
			MetaNotExpression.SuperClasses.AddLazy(() => MetaUnaryExpression);
			MetaNotExpression.ConstructorLazy = () => __tmp449;
			MetaNotExpression.NamespaceLazy = () => __tmp17;
			MetaNotExpression.Name = "MetaNotExpression";
			MetaNotExpression.Documentation = null;
			__tmp449.ParentLazy = () => MetaNotExpression;
			__tmp449.Initializers.AddLazy(() => __tmp450);
			__tmp449.Name = "MetaNotExpression";
			__tmp449.Documentation = null;
			__tmp450.ConstructorLazy = () => __tmp449;
			__tmp450.PropertyName = "Name";
			__tmp450.PropertyContextLazy = () => MetaNotExpression;
			__tmp450.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp450.ValueLazy = () => __tmp451;
			__tmp451.Value = "operator!()";
			__tmp451.TypeLazy = () => __tmp2;
			MetaUnaryAssignExpression.IsAbstract = true;
			MetaUnaryAssignExpression.SuperClasses.AddLazy(() => MetaUnaryExpression);
			// MetaUnaryAssignExpression.Constructor = null;
			MetaUnaryAssignExpression.NamespaceLazy = () => __tmp17;
			MetaUnaryAssignExpression.Name = "MetaUnaryAssignExpression";
			MetaUnaryAssignExpression.Documentation = null;
			// MetaPostIncrementAssignExpression.IsAbstract = null;
			MetaPostIncrementAssignExpression.SuperClasses.AddLazy(() => MetaUnaryAssignExpression);
			MetaPostIncrementAssignExpression.ConstructorLazy = () => __tmp452;
			MetaPostIncrementAssignExpression.NamespaceLazy = () => __tmp17;
			MetaPostIncrementAssignExpression.Name = "MetaPostIncrementAssignExpression";
			MetaPostIncrementAssignExpression.Documentation = null;
			__tmp452.ParentLazy = () => MetaPostIncrementAssignExpression;
			__tmp452.Initializers.AddLazy(() => __tmp453);
			__tmp452.Name = "MetaPostIncrementAssignExpression";
			__tmp452.Documentation = null;
			__tmp453.ConstructorLazy = () => __tmp452;
			__tmp453.PropertyName = "Name";
			__tmp453.PropertyContextLazy = () => MetaPostIncrementAssignExpression;
			__tmp453.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp453.ValueLazy = () => __tmp454;
			__tmp454.Value = "operator()++";
			__tmp454.TypeLazy = () => __tmp2;
			// MetaPostDecrementAssignExpression.IsAbstract = null;
			MetaPostDecrementAssignExpression.SuperClasses.AddLazy(() => MetaUnaryAssignExpression);
			MetaPostDecrementAssignExpression.ConstructorLazy = () => __tmp455;
			MetaPostDecrementAssignExpression.NamespaceLazy = () => __tmp17;
			MetaPostDecrementAssignExpression.Name = "MetaPostDecrementAssignExpression";
			MetaPostDecrementAssignExpression.Documentation = null;
			__tmp455.ParentLazy = () => MetaPostDecrementAssignExpression;
			__tmp455.Initializers.AddLazy(() => __tmp456);
			__tmp455.Name = "MetaPostDecrementAssignExpression";
			__tmp455.Documentation = null;
			__tmp456.ConstructorLazy = () => __tmp455;
			__tmp456.PropertyName = "Name";
			__tmp456.PropertyContextLazy = () => MetaPostDecrementAssignExpression;
			__tmp456.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp456.ValueLazy = () => __tmp457;
			__tmp457.Value = "operator()--";
			__tmp457.TypeLazy = () => __tmp2;
			// MetaPreIncrementAssignExpression.IsAbstract = null;
			MetaPreIncrementAssignExpression.SuperClasses.AddLazy(() => MetaUnaryAssignExpression);
			MetaPreIncrementAssignExpression.ConstructorLazy = () => __tmp458;
			MetaPreIncrementAssignExpression.NamespaceLazy = () => __tmp17;
			MetaPreIncrementAssignExpression.Name = "MetaPreIncrementAssignExpression";
			MetaPreIncrementAssignExpression.Documentation = null;
			__tmp458.ParentLazy = () => MetaPreIncrementAssignExpression;
			__tmp458.Initializers.AddLazy(() => __tmp459);
			__tmp458.Name = "MetaPreIncrementAssignExpression";
			__tmp458.Documentation = null;
			__tmp459.ConstructorLazy = () => __tmp458;
			__tmp459.PropertyName = "Name";
			__tmp459.PropertyContextLazy = () => MetaPreIncrementAssignExpression;
			__tmp459.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp459.ValueLazy = () => __tmp460;
			__tmp460.Value = "operator++()";
			__tmp460.TypeLazy = () => __tmp2;
			// MetaPreDecrementAssignExpression.IsAbstract = null;
			MetaPreDecrementAssignExpression.SuperClasses.AddLazy(() => MetaUnaryAssignExpression);
			MetaPreDecrementAssignExpression.ConstructorLazy = () => __tmp461;
			MetaPreDecrementAssignExpression.NamespaceLazy = () => __tmp17;
			MetaPreDecrementAssignExpression.Name = "MetaPreDecrementAssignExpression";
			MetaPreDecrementAssignExpression.Documentation = null;
			__tmp461.ParentLazy = () => MetaPreDecrementAssignExpression;
			__tmp461.Initializers.AddLazy(() => __tmp462);
			__tmp461.Name = "MetaPreDecrementAssignExpression";
			__tmp461.Documentation = null;
			__tmp462.ConstructorLazy = () => __tmp461;
			__tmp462.PropertyName = "Name";
			__tmp462.PropertyContextLazy = () => MetaPreDecrementAssignExpression;
			__tmp462.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp462.ValueLazy = () => __tmp463;
			__tmp463.Value = "operator--()";
			__tmp463.TypeLazy = () => __tmp2;
			MetaBinaryExpression.IsAbstract = true;
			MetaBinaryExpression.SuperClasses.AddLazy(() => MetaOperatorExpression);
			MetaBinaryExpression.Properties.AddLazy(() => MetaBinaryExpression_LeftProperty);
			MetaBinaryExpression.Properties.AddLazy(() => MetaBinaryExpression_RightProperty);
			MetaBinaryExpression.ConstructorLazy = () => __tmp464;
			MetaBinaryExpression.NamespaceLazy = () => __tmp17;
			MetaBinaryExpression.Name = "MetaBinaryExpression";
			MetaBinaryExpression.Documentation = null;
			__tmp464.ParentLazy = () => MetaBinaryExpression;
			__tmp464.Name = "BinaryExpression";
			__tmp464.Documentation = null;
			MetaBinaryExpression_LeftProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaBinaryExpression_LeftProperty.ClassLazy = () => MetaBinaryExpression;
			MetaBinaryExpression_LeftProperty.Name = "Left";
			MetaBinaryExpression_LeftProperty.Documentation = null;
			MetaBinaryExpression_LeftProperty.TypeLazy = () => MetaExpression;
			MetaBinaryExpression_RightProperty.Kind = global::MetaDslx.Core.Immutable.MetaPropertyKind.Containment;
			MetaBinaryExpression_RightProperty.ClassLazy = () => MetaBinaryExpression;
			MetaBinaryExpression_RightProperty.Name = "Right";
			MetaBinaryExpression_RightProperty.Documentation = null;
			MetaBinaryExpression_RightProperty.TypeLazy = () => MetaExpression;
			MetaBinaryArithmeticExpression.IsAbstract = true;
			MetaBinaryArithmeticExpression.SuperClasses.AddLazy(() => MetaBinaryExpression);
			// MetaBinaryArithmeticExpression.Constructor = null;
			MetaBinaryArithmeticExpression.NamespaceLazy = () => __tmp17;
			MetaBinaryArithmeticExpression.Name = "MetaBinaryArithmeticExpression";
			MetaBinaryArithmeticExpression.Documentation = null;
			// MetaMultiplyExpression.IsAbstract = null;
			MetaMultiplyExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaMultiplyExpression.ConstructorLazy = () => __tmp465;
			MetaMultiplyExpression.NamespaceLazy = () => __tmp17;
			MetaMultiplyExpression.Name = "MetaMultiplyExpression";
			MetaMultiplyExpression.Documentation = null;
			__tmp465.ParentLazy = () => MetaMultiplyExpression;
			__tmp465.Initializers.AddLazy(() => __tmp466);
			__tmp465.Name = "MetaMultiplyExpression";
			__tmp465.Documentation = null;
			__tmp466.ConstructorLazy = () => __tmp465;
			__tmp466.PropertyName = "Name";
			__tmp466.PropertyContextLazy = () => MetaMultiplyExpression;
			__tmp466.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp466.ValueLazy = () => __tmp467;
			__tmp467.Value = "operator()*()";
			__tmp467.TypeLazy = () => __tmp2;
			// MetaDivideExpression.IsAbstract = null;
			MetaDivideExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaDivideExpression.ConstructorLazy = () => __tmp468;
			MetaDivideExpression.NamespaceLazy = () => __tmp17;
			MetaDivideExpression.Name = "MetaDivideExpression";
			MetaDivideExpression.Documentation = null;
			__tmp468.ParentLazy = () => MetaDivideExpression;
			__tmp468.Initializers.AddLazy(() => __tmp469);
			__tmp468.Name = "MetaDivideExpression";
			__tmp468.Documentation = null;
			__tmp469.ConstructorLazy = () => __tmp468;
			__tmp469.PropertyName = "Name";
			__tmp469.PropertyContextLazy = () => MetaDivideExpression;
			__tmp469.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp469.ValueLazy = () => __tmp470;
			__tmp470.Value = "operator()/()";
			__tmp470.TypeLazy = () => __tmp2;
			// MetaModuloExpression.IsAbstract = null;
			MetaModuloExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaModuloExpression.ConstructorLazy = () => __tmp471;
			MetaModuloExpression.NamespaceLazy = () => __tmp17;
			MetaModuloExpression.Name = "MetaModuloExpression";
			MetaModuloExpression.Documentation = null;
			__tmp471.ParentLazy = () => MetaModuloExpression;
			__tmp471.Initializers.AddLazy(() => __tmp472);
			__tmp471.Name = "MetaModuloExpression";
			__tmp471.Documentation = null;
			__tmp472.ConstructorLazy = () => __tmp471;
			__tmp472.PropertyName = "Name";
			__tmp472.PropertyContextLazy = () => MetaModuloExpression;
			__tmp472.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp472.ValueLazy = () => __tmp473;
			__tmp473.Value = "operator()%()";
			__tmp473.TypeLazy = () => __tmp2;
			// MetaAddExpression.IsAbstract = null;
			MetaAddExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaAddExpression.ConstructorLazy = () => __tmp474;
			MetaAddExpression.NamespaceLazy = () => __tmp17;
			MetaAddExpression.Name = "MetaAddExpression";
			MetaAddExpression.Documentation = null;
			__tmp474.ParentLazy = () => MetaAddExpression;
			__tmp474.Initializers.AddLazy(() => __tmp475);
			__tmp474.Name = "MetaAddExpression";
			__tmp474.Documentation = null;
			__tmp475.ConstructorLazy = () => __tmp474;
			__tmp475.PropertyName = "Name";
			__tmp475.PropertyContextLazy = () => MetaAddExpression;
			__tmp475.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp475.ValueLazy = () => __tmp476;
			__tmp476.Value = "operator()+()";
			__tmp476.TypeLazy = () => __tmp2;
			// MetaSubtractExpression.IsAbstract = null;
			MetaSubtractExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaSubtractExpression.ConstructorLazy = () => __tmp477;
			MetaSubtractExpression.NamespaceLazy = () => __tmp17;
			MetaSubtractExpression.Name = "MetaSubtractExpression";
			MetaSubtractExpression.Documentation = null;
			__tmp477.ParentLazy = () => MetaSubtractExpression;
			__tmp477.Initializers.AddLazy(() => __tmp478);
			__tmp477.Name = "MetaSubtractExpression";
			__tmp477.Documentation = null;
			__tmp478.ConstructorLazy = () => __tmp477;
			__tmp478.PropertyName = "Name";
			__tmp478.PropertyContextLazy = () => MetaSubtractExpression;
			__tmp478.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp478.ValueLazy = () => __tmp479;
			__tmp479.Value = "operator()-()";
			__tmp479.TypeLazy = () => __tmp2;
			// MetaLeftShiftExpression.IsAbstract = null;
			MetaLeftShiftExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaLeftShiftExpression.ConstructorLazy = () => __tmp480;
			MetaLeftShiftExpression.NamespaceLazy = () => __tmp17;
			MetaLeftShiftExpression.Name = "MetaLeftShiftExpression";
			MetaLeftShiftExpression.Documentation = null;
			__tmp480.ParentLazy = () => MetaLeftShiftExpression;
			__tmp480.Initializers.AddLazy(() => __tmp481);
			__tmp480.Name = "MetaLeftShiftExpression";
			__tmp480.Documentation = null;
			__tmp481.ConstructorLazy = () => __tmp480;
			__tmp481.PropertyName = "Name";
			__tmp481.PropertyContextLazy = () => MetaLeftShiftExpression;
			__tmp481.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp481.ValueLazy = () => __tmp482;
			__tmp482.Value = "operator()<<()";
			__tmp482.TypeLazy = () => __tmp2;
			// MetaRightShiftExpression.IsAbstract = null;
			MetaRightShiftExpression.SuperClasses.AddLazy(() => MetaBinaryArithmeticExpression);
			MetaRightShiftExpression.ConstructorLazy = () => __tmp483;
			MetaRightShiftExpression.NamespaceLazy = () => __tmp17;
			MetaRightShiftExpression.Name = "MetaRightShiftExpression";
			MetaRightShiftExpression.Documentation = null;
			__tmp483.ParentLazy = () => MetaRightShiftExpression;
			__tmp483.Initializers.AddLazy(() => __tmp484);
			__tmp483.Name = "MetaRightShiftExpression";
			__tmp483.Documentation = null;
			__tmp484.ConstructorLazy = () => __tmp483;
			__tmp484.PropertyName = "Name";
			__tmp484.PropertyContextLazy = () => MetaRightShiftExpression;
			__tmp484.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp484.ValueLazy = () => __tmp485;
			__tmp485.Value = "operator()>>()";
			__tmp485.TypeLazy = () => __tmp2;
			MetaBinaryComparisonExpression.IsAbstract = true;
			MetaBinaryComparisonExpression.SuperClasses.AddLazy(() => MetaBinaryExpression);
			// MetaBinaryComparisonExpression.Constructor = null;
			MetaBinaryComparisonExpression.NamespaceLazy = () => __tmp17;
			MetaBinaryComparisonExpression.Name = "MetaBinaryComparisonExpression";
			MetaBinaryComparisonExpression.Documentation = null;
			// MetaLessThanExpression.IsAbstract = null;
			MetaLessThanExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaLessThanExpression.ConstructorLazy = () => __tmp486;
			MetaLessThanExpression.NamespaceLazy = () => __tmp17;
			MetaLessThanExpression.Name = "MetaLessThanExpression";
			MetaLessThanExpression.Documentation = null;
			__tmp486.ParentLazy = () => MetaLessThanExpression;
			__tmp486.Initializers.AddLazy(() => __tmp487);
			__tmp486.Name = "MetaLessThanExpression";
			__tmp486.Documentation = null;
			__tmp487.ConstructorLazy = () => __tmp486;
			__tmp487.PropertyName = "Name";
			__tmp487.PropertyContextLazy = () => MetaLessThanExpression;
			__tmp487.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp487.ValueLazy = () => __tmp488;
			__tmp488.Value = "operator()<()";
			__tmp488.TypeLazy = () => __tmp2;
			// MetaLessThanOrEqualExpression.IsAbstract = null;
			MetaLessThanOrEqualExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaLessThanOrEqualExpression.ConstructorLazy = () => __tmp489;
			MetaLessThanOrEqualExpression.NamespaceLazy = () => __tmp17;
			MetaLessThanOrEqualExpression.Name = "MetaLessThanOrEqualExpression";
			MetaLessThanOrEqualExpression.Documentation = null;
			__tmp489.ParentLazy = () => MetaLessThanOrEqualExpression;
			__tmp489.Initializers.AddLazy(() => __tmp490);
			__tmp489.Name = "MetaLessThanOrEqualExpression";
			__tmp489.Documentation = null;
			__tmp490.ConstructorLazy = () => __tmp489;
			__tmp490.PropertyName = "Name";
			__tmp490.PropertyContextLazy = () => MetaLessThanOrEqualExpression;
			__tmp490.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp490.ValueLazy = () => __tmp491;
			__tmp491.Value = "operator()<=()";
			__tmp491.TypeLazy = () => __tmp2;
			// MetaGreaterThanExpression.IsAbstract = null;
			MetaGreaterThanExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaGreaterThanExpression.ConstructorLazy = () => __tmp492;
			MetaGreaterThanExpression.NamespaceLazy = () => __tmp17;
			MetaGreaterThanExpression.Name = "MetaGreaterThanExpression";
			MetaGreaterThanExpression.Documentation = null;
			__tmp492.ParentLazy = () => MetaGreaterThanExpression;
			__tmp492.Initializers.AddLazy(() => __tmp493);
			__tmp492.Name = "MetaGreaterThanExpression";
			__tmp492.Documentation = null;
			__tmp493.ConstructorLazy = () => __tmp492;
			__tmp493.PropertyName = "Name";
			__tmp493.PropertyContextLazy = () => MetaGreaterThanExpression;
			__tmp493.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp493.ValueLazy = () => __tmp494;
			__tmp494.Value = "operator()>()";
			__tmp494.TypeLazy = () => __tmp2;
			// MetaGreaterThanOrEqualExpression.IsAbstract = null;
			MetaGreaterThanOrEqualExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaGreaterThanOrEqualExpression.ConstructorLazy = () => __tmp495;
			MetaGreaterThanOrEqualExpression.NamespaceLazy = () => __tmp17;
			MetaGreaterThanOrEqualExpression.Name = "MetaGreaterThanOrEqualExpression";
			MetaGreaterThanOrEqualExpression.Documentation = null;
			__tmp495.ParentLazy = () => MetaGreaterThanOrEqualExpression;
			__tmp495.Initializers.AddLazy(() => __tmp496);
			__tmp495.Name = "MetaGreaterThanOrEqualExpression";
			__tmp495.Documentation = null;
			__tmp496.ConstructorLazy = () => __tmp495;
			__tmp496.PropertyName = "Name";
			__tmp496.PropertyContextLazy = () => MetaGreaterThanOrEqualExpression;
			__tmp496.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp496.ValueLazy = () => __tmp497;
			__tmp497.Value = "operator()>=()";
			__tmp497.TypeLazy = () => __tmp2;
			// MetaEqualExpression.IsAbstract = null;
			MetaEqualExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaEqualExpression.ConstructorLazy = () => __tmp498;
			MetaEqualExpression.NamespaceLazy = () => __tmp17;
			MetaEqualExpression.Name = "MetaEqualExpression";
			MetaEqualExpression.Documentation = null;
			__tmp498.ParentLazy = () => MetaEqualExpression;
			__tmp498.Initializers.AddLazy(() => __tmp499);
			__tmp498.Name = "MetaEqualExpression";
			__tmp498.Documentation = null;
			__tmp499.ConstructorLazy = () => __tmp498;
			__tmp499.PropertyName = "Name";
			__tmp499.PropertyContextLazy = () => MetaEqualExpression;
			__tmp499.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp499.ValueLazy = () => __tmp500;
			__tmp500.Value = "operator()==()";
			__tmp500.TypeLazy = () => __tmp2;
			// MetaNotEqualExpression.IsAbstract = null;
			MetaNotEqualExpression.SuperClasses.AddLazy(() => MetaBinaryComparisonExpression);
			MetaNotEqualExpression.ConstructorLazy = () => __tmp501;
			MetaNotEqualExpression.NamespaceLazy = () => __tmp17;
			MetaNotEqualExpression.Name = "MetaNotEqualExpression";
			MetaNotEqualExpression.Documentation = null;
			__tmp501.ParentLazy = () => MetaNotEqualExpression;
			__tmp501.Initializers.AddLazy(() => __tmp502);
			__tmp501.Name = "MetaNotEqualExpression";
			__tmp501.Documentation = null;
			__tmp502.ConstructorLazy = () => __tmp501;
			__tmp502.PropertyName = "Name";
			__tmp502.PropertyContextLazy = () => MetaNotEqualExpression;
			__tmp502.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp502.ValueLazy = () => __tmp503;
			__tmp503.Value = "operator()!=()";
			__tmp503.TypeLazy = () => __tmp2;
			MetaBinaryLogicalExpression.IsAbstract = true;
			MetaBinaryLogicalExpression.SuperClasses.AddLazy(() => MetaBinaryExpression);
			// MetaBinaryLogicalExpression.Constructor = null;
			MetaBinaryLogicalExpression.NamespaceLazy = () => __tmp17;
			MetaBinaryLogicalExpression.Name = "MetaBinaryLogicalExpression";
			MetaBinaryLogicalExpression.Documentation = null;
			// MetaAndExpression.IsAbstract = null;
			MetaAndExpression.SuperClasses.AddLazy(() => MetaBinaryLogicalExpression);
			MetaAndExpression.ConstructorLazy = () => __tmp504;
			MetaAndExpression.NamespaceLazy = () => __tmp17;
			MetaAndExpression.Name = "MetaAndExpression";
			MetaAndExpression.Documentation = null;
			__tmp504.ParentLazy = () => MetaAndExpression;
			__tmp504.Initializers.AddLazy(() => __tmp505);
			__tmp504.Name = "MetaAndExpression";
			__tmp504.Documentation = null;
			__tmp505.ConstructorLazy = () => __tmp504;
			__tmp505.PropertyName = "Name";
			__tmp505.PropertyContextLazy = () => MetaAndExpression;
			__tmp505.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp505.ValueLazy = () => __tmp506;
			__tmp506.Value = "operator()&()";
			__tmp506.TypeLazy = () => __tmp2;
			// MetaOrExpression.IsAbstract = null;
			MetaOrExpression.SuperClasses.AddLazy(() => MetaBinaryLogicalExpression);
			MetaOrExpression.ConstructorLazy = () => __tmp507;
			MetaOrExpression.NamespaceLazy = () => __tmp17;
			MetaOrExpression.Name = "MetaOrExpression";
			MetaOrExpression.Documentation = null;
			__tmp507.ParentLazy = () => MetaOrExpression;
			__tmp507.Initializers.AddLazy(() => __tmp508);
			__tmp507.Name = "MetaOrExpression";
			__tmp507.Documentation = null;
			__tmp508.ConstructorLazy = () => __tmp507;
			__tmp508.PropertyName = "Name";
			__tmp508.PropertyContextLazy = () => MetaOrExpression;
			__tmp508.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp508.ValueLazy = () => __tmp509;
			__tmp509.Value = "operator()|()";
			__tmp509.TypeLazy = () => __tmp2;
			// MetaExclusiveOrExpression.IsAbstract = null;
			MetaExclusiveOrExpression.SuperClasses.AddLazy(() => MetaBinaryLogicalExpression);
			MetaExclusiveOrExpression.ConstructorLazy = () => __tmp510;
			MetaExclusiveOrExpression.NamespaceLazy = () => __tmp17;
			MetaExclusiveOrExpression.Name = "MetaExclusiveOrExpression";
			MetaExclusiveOrExpression.Documentation = null;
			__tmp510.ParentLazy = () => MetaExclusiveOrExpression;
			__tmp510.Initializers.AddLazy(() => __tmp511);
			__tmp510.Name = "MetaExclusiveOrExpression";
			__tmp510.Documentation = null;
			__tmp511.ConstructorLazy = () => __tmp510;
			__tmp511.PropertyName = "Name";
			__tmp511.PropertyContextLazy = () => MetaExclusiveOrExpression;
			__tmp511.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp511.ValueLazy = () => __tmp512;
			__tmp512.Value = "operator()^()";
			__tmp512.TypeLazy = () => __tmp2;
			// MetaAndAlsoExpression.IsAbstract = null;
			MetaAndAlsoExpression.SuperClasses.AddLazy(() => MetaBinaryLogicalExpression);
			MetaAndAlsoExpression.ConstructorLazy = () => __tmp513;
			MetaAndAlsoExpression.NamespaceLazy = () => __tmp17;
			MetaAndAlsoExpression.Name = "MetaAndAlsoExpression";
			MetaAndAlsoExpression.Documentation = null;
			__tmp513.ParentLazy = () => MetaAndAlsoExpression;
			__tmp513.Initializers.AddLazy(() => __tmp514);
			__tmp513.Name = "MetaAndAlsoExpression";
			__tmp513.Documentation = null;
			__tmp514.ConstructorLazy = () => __tmp513;
			__tmp514.PropertyName = "Name";
			__tmp514.PropertyContextLazy = () => MetaAndAlsoExpression;
			__tmp514.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp514.ValueLazy = () => __tmp515;
			__tmp515.Value = "operator()&&()";
			__tmp515.TypeLazy = () => __tmp2;
			// MetaOrElseExpression.IsAbstract = null;
			MetaOrElseExpression.SuperClasses.AddLazy(() => MetaBinaryLogicalExpression);
			MetaOrElseExpression.ConstructorLazy = () => __tmp516;
			MetaOrElseExpression.NamespaceLazy = () => __tmp17;
			MetaOrElseExpression.Name = "MetaOrElseExpression";
			MetaOrElseExpression.Documentation = null;
			__tmp516.ParentLazy = () => MetaOrElseExpression;
			__tmp516.Initializers.AddLazy(() => __tmp517);
			__tmp516.Name = "MetaOrElseExpression";
			__tmp516.Documentation = null;
			__tmp517.ConstructorLazy = () => __tmp516;
			__tmp517.PropertyName = "Name";
			__tmp517.PropertyContextLazy = () => MetaOrElseExpression;
			__tmp517.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp517.ValueLazy = () => __tmp518;
			__tmp518.Value = "operator()||()";
			__tmp518.TypeLazy = () => __tmp2;
			// MetaNullCoalescingExpression.IsAbstract = null;
			MetaNullCoalescingExpression.SuperClasses.AddLazy(() => MetaBinaryExpression);
			MetaNullCoalescingExpression.ConstructorLazy = () => __tmp519;
			MetaNullCoalescingExpression.NamespaceLazy = () => __tmp17;
			MetaNullCoalescingExpression.Name = "MetaNullCoalescingExpression";
			MetaNullCoalescingExpression.Documentation = null;
			__tmp519.ParentLazy = () => MetaNullCoalescingExpression;
			__tmp519.Initializers.AddLazy(() => __tmp520);
			__tmp519.Name = "MetaNullCoalescingExpression";
			__tmp519.Documentation = null;
			__tmp520.ConstructorLazy = () => __tmp519;
			__tmp520.PropertyName = "Name";
			__tmp520.PropertyContextLazy = () => MetaNullCoalescingExpression;
			__tmp520.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp520.ValueLazy = () => __tmp521;
			__tmp521.Value = "operator()??()";
			__tmp521.TypeLazy = () => __tmp2;
			MetaAssignmentExpression.IsAbstract = true;
			MetaAssignmentExpression.SuperClasses.AddLazy(() => MetaBinaryExpression);
			MetaAssignmentExpression.ConstructorLazy = () => __tmp522;
			MetaAssignmentExpression.NamespaceLazy = () => __tmp17;
			MetaAssignmentExpression.Name = "MetaAssignmentExpression";
			MetaAssignmentExpression.Documentation = null;
			__tmp522.ParentLazy = () => MetaAssignmentExpression;
			__tmp522.Initializers.AddLazy(() => __tmp523);
			__tmp522.Initializers.AddLazy(() => __tmp527);
			__tmp522.Initializers.AddLazy(() => __tmp529);
			__tmp522.Name = "MetaAssignmentExpression";
			__tmp522.Documentation = null;
			__tmp523.ConstructorLazy = () => __tmp522;
			__tmp523.PropertyName = "Type";
			__tmp523.PropertyContextLazy = () => MetaAssignmentExpression;
			__tmp523.PropertyLazy = () => MetaTypedElement_TypeProperty;
			__tmp523.ValueLazy = () => __tmp524;
			__tmp524.ExpressionLazy = () => __tmp525;
			__tmp524.Arguments.AddLazy(() => __tmp526);
			__tmp524.TypeLazy = () => MetaType;
			__tmp525.Name = "get_type";
			__tmp525.TypeLazy = () => __tmp10;
			__tmp526.Name = "Left";
			__tmp526.TypeLazy = () => MetaExpression;
			__tmp527.ObjectName = "Left";
			__tmp527.ObjectLazy = () => MetaBinaryExpression_LeftProperty;
			__tmp527.ConstructorLazy = () => __tmp522;
			__tmp527.PropertyName = "ExpectedType";
			__tmp527.PropertyContextLazy = () => MetaExpression;
			__tmp527.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp527.ValueLazy = () => __tmp528;
			__tmp528.Name = "ExpectedType";
			__tmp528.TypeLazy = () => MetaType;
			__tmp529.ObjectName = "Right";
			__tmp529.ObjectLazy = () => MetaBinaryExpression_RightProperty;
			__tmp529.ConstructorLazy = () => __tmp522;
			__tmp529.PropertyName = "ExpectedType";
			__tmp529.PropertyContextLazy = () => MetaExpression;
			__tmp529.PropertyLazy = () => MetaExpression_ExpectedTypeProperty;
			__tmp529.ValueLazy = () => __tmp530;
			__tmp530.Name = "Type";
			__tmp530.TypeLazy = () => MetaType;
			// MetaAssignExpression.IsAbstract = null;
			MetaAssignExpression.SuperClasses.AddLazy(() => MetaAssignmentExpression);
			MetaAssignExpression.ConstructorLazy = () => __tmp531;
			MetaAssignExpression.NamespaceLazy = () => __tmp17;
			MetaAssignExpression.Name = "MetaAssignExpression";
			MetaAssignExpression.Documentation = null;
			__tmp531.ParentLazy = () => MetaAssignExpression;
			__tmp531.Initializers.AddLazy(() => __tmp532);
			__tmp531.Name = "MetaAssignExpression";
			__tmp531.Documentation = null;
			__tmp532.ConstructorLazy = () => __tmp531;
			__tmp532.PropertyName = "Name";
			__tmp532.PropertyContextLazy = () => MetaAssignExpression;
			__tmp532.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp532.ValueLazy = () => __tmp533;
			__tmp533.Value = "operator()=()";
			__tmp533.TypeLazy = () => __tmp2;
			MetaArithmeticAssignmentExpression.IsAbstract = true;
			MetaArithmeticAssignmentExpression.SuperClasses.AddLazy(() => MetaAssignmentExpression);
			// MetaArithmeticAssignmentExpression.Constructor = null;
			MetaArithmeticAssignmentExpression.NamespaceLazy = () => __tmp17;
			MetaArithmeticAssignmentExpression.Name = "MetaArithmeticAssignmentExpression";
			MetaArithmeticAssignmentExpression.Documentation = null;
			// MetaMultiplyAssignExpression.IsAbstract = null;
			MetaMultiplyAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaMultiplyAssignExpression.ConstructorLazy = () => __tmp534;
			MetaMultiplyAssignExpression.NamespaceLazy = () => __tmp17;
			MetaMultiplyAssignExpression.Name = "MetaMultiplyAssignExpression";
			MetaMultiplyAssignExpression.Documentation = null;
			__tmp534.ParentLazy = () => MetaMultiplyAssignExpression;
			__tmp534.Initializers.AddLazy(() => __tmp535);
			__tmp534.Name = "MetaMultiplyAssignExpression";
			__tmp534.Documentation = null;
			__tmp535.ConstructorLazy = () => __tmp534;
			__tmp535.PropertyName = "Name";
			__tmp535.PropertyContextLazy = () => MetaMultiplyAssignExpression;
			__tmp535.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp535.ValueLazy = () => __tmp536;
			__tmp536.Value = "operator()*=()";
			__tmp536.TypeLazy = () => __tmp2;
			// MetaDivideAssignExpression.IsAbstract = null;
			MetaDivideAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaDivideAssignExpression.ConstructorLazy = () => __tmp537;
			MetaDivideAssignExpression.NamespaceLazy = () => __tmp17;
			MetaDivideAssignExpression.Name = "MetaDivideAssignExpression";
			MetaDivideAssignExpression.Documentation = null;
			__tmp537.ParentLazy = () => MetaDivideAssignExpression;
			__tmp537.Initializers.AddLazy(() => __tmp538);
			__tmp537.Name = "MetaDivideAssignExpression";
			__tmp537.Documentation = null;
			__tmp538.ConstructorLazy = () => __tmp537;
			__tmp538.PropertyName = "Name";
			__tmp538.PropertyContextLazy = () => MetaDivideAssignExpression;
			__tmp538.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp538.ValueLazy = () => __tmp539;
			__tmp539.Value = "operator()/=()";
			__tmp539.TypeLazy = () => __tmp2;
			// MetaModuloAssignExpression.IsAbstract = null;
			MetaModuloAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaModuloAssignExpression.ConstructorLazy = () => __tmp540;
			MetaModuloAssignExpression.NamespaceLazy = () => __tmp17;
			MetaModuloAssignExpression.Name = "MetaModuloAssignExpression";
			MetaModuloAssignExpression.Documentation = null;
			__tmp540.ParentLazy = () => MetaModuloAssignExpression;
			__tmp540.Initializers.AddLazy(() => __tmp541);
			__tmp540.Name = "MetaModuloAssignExpression";
			__tmp540.Documentation = null;
			__tmp541.ConstructorLazy = () => __tmp540;
			__tmp541.PropertyName = "Name";
			__tmp541.PropertyContextLazy = () => MetaModuloAssignExpression;
			__tmp541.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp541.ValueLazy = () => __tmp542;
			__tmp542.Value = "operator()%=()";
			__tmp542.TypeLazy = () => __tmp2;
			// MetaAddAssignExpression.IsAbstract = null;
			MetaAddAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaAddAssignExpression.ConstructorLazy = () => __tmp543;
			MetaAddAssignExpression.NamespaceLazy = () => __tmp17;
			MetaAddAssignExpression.Name = "MetaAddAssignExpression";
			MetaAddAssignExpression.Documentation = null;
			__tmp543.ParentLazy = () => MetaAddAssignExpression;
			__tmp543.Initializers.AddLazy(() => __tmp544);
			__tmp543.Name = "MetaAddAssignExpression";
			__tmp543.Documentation = null;
			__tmp544.ConstructorLazy = () => __tmp543;
			__tmp544.PropertyName = "Name";
			__tmp544.PropertyContextLazy = () => MetaAddAssignExpression;
			__tmp544.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp544.ValueLazy = () => __tmp545;
			__tmp545.Value = "operator()+=()";
			__tmp545.TypeLazy = () => __tmp2;
			// MetaSubtractAssignExpression.IsAbstract = null;
			MetaSubtractAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaSubtractAssignExpression.ConstructorLazy = () => __tmp546;
			MetaSubtractAssignExpression.NamespaceLazy = () => __tmp17;
			MetaSubtractAssignExpression.Name = "MetaSubtractAssignExpression";
			MetaSubtractAssignExpression.Documentation = null;
			__tmp546.ParentLazy = () => MetaSubtractAssignExpression;
			__tmp546.Initializers.AddLazy(() => __tmp547);
			__tmp546.Name = "MetaSubtractAssignExpression";
			__tmp546.Documentation = null;
			__tmp547.ConstructorLazy = () => __tmp546;
			__tmp547.PropertyName = "Name";
			__tmp547.PropertyContextLazy = () => MetaSubtractAssignExpression;
			__tmp547.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp547.ValueLazy = () => __tmp548;
			__tmp548.Value = "operator()-=()";
			__tmp548.TypeLazy = () => __tmp2;
			// MetaLeftShiftAssignExpression.IsAbstract = null;
			MetaLeftShiftAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaLeftShiftAssignExpression.ConstructorLazy = () => __tmp549;
			MetaLeftShiftAssignExpression.NamespaceLazy = () => __tmp17;
			MetaLeftShiftAssignExpression.Name = "MetaLeftShiftAssignExpression";
			MetaLeftShiftAssignExpression.Documentation = null;
			__tmp549.ParentLazy = () => MetaLeftShiftAssignExpression;
			__tmp549.Initializers.AddLazy(() => __tmp550);
			__tmp549.Name = "MetaLeftShiftAssignExpression";
			__tmp549.Documentation = null;
			__tmp550.ConstructorLazy = () => __tmp549;
			__tmp550.PropertyName = "Name";
			__tmp550.PropertyContextLazy = () => MetaLeftShiftAssignExpression;
			__tmp550.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp550.ValueLazy = () => __tmp551;
			__tmp551.Value = "operator()<<=()";
			__tmp551.TypeLazy = () => __tmp2;
			// MetaRightShiftAssignExpression.IsAbstract = null;
			MetaRightShiftAssignExpression.SuperClasses.AddLazy(() => MetaArithmeticAssignmentExpression);
			MetaRightShiftAssignExpression.ConstructorLazy = () => __tmp552;
			MetaRightShiftAssignExpression.NamespaceLazy = () => __tmp17;
			MetaRightShiftAssignExpression.Name = "MetaRightShiftAssignExpression";
			MetaRightShiftAssignExpression.Documentation = null;
			__tmp552.ParentLazy = () => MetaRightShiftAssignExpression;
			__tmp552.Initializers.AddLazy(() => __tmp553);
			__tmp552.Name = "MetaRightShiftAssignExpression";
			__tmp552.Documentation = null;
			__tmp553.ConstructorLazy = () => __tmp552;
			__tmp553.PropertyName = "Name";
			__tmp553.PropertyContextLazy = () => MetaRightShiftAssignExpression;
			__tmp553.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp553.ValueLazy = () => __tmp554;
			__tmp554.Value = "operator()>>=()";
			__tmp554.TypeLazy = () => __tmp2;
			MetaLogicalAssignmentExpression.IsAbstract = true;
			MetaLogicalAssignmentExpression.SuperClasses.AddLazy(() => MetaAssignmentExpression);
			// MetaLogicalAssignmentExpression.Constructor = null;
			MetaLogicalAssignmentExpression.NamespaceLazy = () => __tmp17;
			MetaLogicalAssignmentExpression.Name = "MetaLogicalAssignmentExpression";
			MetaLogicalAssignmentExpression.Documentation = null;
			// MetaAndAssignExpression.IsAbstract = null;
			MetaAndAssignExpression.SuperClasses.AddLazy(() => MetaLogicalAssignmentExpression);
			MetaAndAssignExpression.ConstructorLazy = () => __tmp555;
			MetaAndAssignExpression.NamespaceLazy = () => __tmp17;
			MetaAndAssignExpression.Name = "MetaAndAssignExpression";
			MetaAndAssignExpression.Documentation = null;
			__tmp555.ParentLazy = () => MetaAndAssignExpression;
			__tmp555.Initializers.AddLazy(() => __tmp556);
			__tmp555.Name = "MetaAndAssignExpression";
			__tmp555.Documentation = null;
			__tmp556.ConstructorLazy = () => __tmp555;
			__tmp556.PropertyName = "Name";
			__tmp556.PropertyContextLazy = () => MetaAndAssignExpression;
			__tmp556.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp556.ValueLazy = () => __tmp557;
			__tmp557.Value = "operator()&=()";
			__tmp557.TypeLazy = () => __tmp2;
			// MetaExclusiveOrAssignExpression.IsAbstract = null;
			MetaExclusiveOrAssignExpression.SuperClasses.AddLazy(() => MetaLogicalAssignmentExpression);
			MetaExclusiveOrAssignExpression.ConstructorLazy = () => __tmp558;
			MetaExclusiveOrAssignExpression.NamespaceLazy = () => __tmp17;
			MetaExclusiveOrAssignExpression.Name = "MetaExclusiveOrAssignExpression";
			MetaExclusiveOrAssignExpression.Documentation = null;
			__tmp558.ParentLazy = () => MetaExclusiveOrAssignExpression;
			__tmp558.Initializers.AddLazy(() => __tmp559);
			__tmp558.Name = "MetaExclusiveOrAssignExpression";
			__tmp558.Documentation = null;
			__tmp559.ConstructorLazy = () => __tmp558;
			__tmp559.PropertyName = "Name";
			__tmp559.PropertyContextLazy = () => MetaExclusiveOrAssignExpression;
			__tmp559.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp559.ValueLazy = () => __tmp560;
			__tmp560.Value = "operator()^=()";
			__tmp560.TypeLazy = () => __tmp2;
			// MetaOrAssignExpression.IsAbstract = null;
			MetaOrAssignExpression.SuperClasses.AddLazy(() => MetaLogicalAssignmentExpression);
			MetaOrAssignExpression.ConstructorLazy = () => __tmp561;
			MetaOrAssignExpression.NamespaceLazy = () => __tmp17;
			MetaOrAssignExpression.Name = "MetaOrAssignExpression";
			MetaOrAssignExpression.Documentation = null;
			__tmp561.ParentLazy = () => MetaOrAssignExpression;
			__tmp561.Initializers.AddLazy(() => __tmp562);
			__tmp561.Name = "MetaOrAssignExpression";
			__tmp561.Documentation = null;
			__tmp562.ConstructorLazy = () => __tmp561;
			__tmp562.PropertyName = "Name";
			__tmp562.PropertyContextLazy = () => MetaOrAssignExpression;
			__tmp562.PropertyLazy = () => MetaOperatorExpression_NameProperty;
			__tmp562.ValueLazy = () => __tmp563;
			__tmp563.Value = "operator()|=()";
			__tmp563.TypeLazy = () => __tmp2;
			
	
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp1).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp2).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp3).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp4).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp5).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp6).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp7).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp8).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp9).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp10).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp11).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp12).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp13).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp14).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp15).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp16).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp17).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp18).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp19).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp20).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp21).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp22).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp23).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp24).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp25).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp26).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp27).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp28).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp29).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp30).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp31).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp32).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp33).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp34).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp35).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp36).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp37).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp38).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp39).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp40).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp41).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp42).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp43).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp44).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp45).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp46).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp47).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp48).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp49).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp50).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp51).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp52).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp53).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp54).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp55).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp56).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp57).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp58).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp59).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp60).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp61).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp62).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp63).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp64).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp65).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp66).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp67).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp68).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp69).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp70).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp71).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp72).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp73).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp74).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp75).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp76).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp77).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp78).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp79).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp80).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp81).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)TypeOf).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp82).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp83).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp84).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp85).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp86).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp87).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)GetValueType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp88).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp89).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp90).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp91).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp92).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp93).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)GetReturnType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp94).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp95).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp96).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp97).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp98).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp99).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)CurrentType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp100).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp101).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp102).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp103).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp104).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp105).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)TypeCheck).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp106).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp107).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp108).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp109).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp110).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp111).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)Balance).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp112).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp113).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp114).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp115).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp116).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp117).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp118).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)Resolve1).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp119).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp120).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp121).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp122).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp123).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp124).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)Resolve2).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp125).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp126).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp127).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp128).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp129).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp130).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp131).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)ResolveType1).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp132).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp133).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp134).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp135).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp136).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp137).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)ResolveType2).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp138).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp139).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp140).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp141).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp142).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp143).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp144).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)ResolveName1).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp145).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp146).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp147).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp148).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp149).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp150).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)ResolveName2).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp151).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp152).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp153).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp154).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp155).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp156).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp157).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)ToDefinitionList).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp158).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp159).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp160).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp161).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp162).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp163).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)Bind1).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp164).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp165).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp166).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp167).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp168).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp169).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)Bind2).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp170).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp171).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp172).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp173).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotatedElement).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp174).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotatedElement_AnnotationsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDocumentedElement).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDocumentedElement_DocumentationProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp175).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp176).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp177).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp178).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamedElement).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp179).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamedElement_NameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypedElement).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp180).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypedElement_TypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp181).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotation).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp182).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotation_PropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotationProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAnnotationProperty_ValueProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp183).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp184).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp185).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp186).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace_ParentProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp187).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp188).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace_UsingsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace_MetaModelProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp189).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp190).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace_NamespacesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp191).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp192).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNamespace_DeclarationsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDeclaration).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp193).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp194).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp195).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp196).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDeclaration_NamespaceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDeclaration_ModelProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaModel).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaModel_UriProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaModel_NamespaceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaCollectionKind).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp197).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp198).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp199).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp200).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaCollectionType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaCollectionType_KindProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaCollectionType_InnerTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNullableType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNullableType_InnerTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPrimitiveType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp201).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEnum).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp202).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp203).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEnum_EnumLiteralsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp204).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp205).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEnum_OperationsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEnumLiteral).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp206).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp207).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp208).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEnumLiteral_EnumProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp209).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass_IsAbstractProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp210).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp211).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass_SuperClassesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp212).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp213).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass_PropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp214).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp215).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass_OperationsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaClass_ConstructorProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp216).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp217).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp218).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp219).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp220).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp221).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp222).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp223).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp224).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp225).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp226).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp227).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp228).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp229).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp230).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp231).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp232).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp233).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp234).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp235).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunctionType).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp236).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunctionType_ParameterTypesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunctionType_ReturnTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunction).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp237).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp238).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunction_TypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp239).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunction_ParametersProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunction_ReturnTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaGlobalFunction).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOperation).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOperation_ParentProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstant).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp240).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp241).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp242).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstant_ValueProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstructor).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstructor_ParentProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp243).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstructor_InitializersProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaParameter).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaParameter_FunctionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyKind).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp244).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp245).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp246).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp247).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp248).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp249).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp250).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_KindProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_ClassProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp251).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_OppositePropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp252).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_SubsettedPropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp253).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_SubsettingPropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp254).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_RedefinedPropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp255).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaProperty_RedefiningPropertiesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer_ConstructorProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer_PropertyNameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer_PropertyContextProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer_PropertyProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPropertyInitializer_ValueProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp256).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp257).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp258).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp259).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp260).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp261).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp262).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp263).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp264).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp265).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp266).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp267).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp268).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp269).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp270).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp271).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp272).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp273).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaSynthetizedPropertyInitializer).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaInheritedPropertyInitializer).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaInheritedPropertyInitializer_ObjectNameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaInheritedPropertyInitializer_ObjectProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp274).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp275).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp276).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp277).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp278).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp279).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp280).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp281).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp282).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp283).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp284).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp285).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp286).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp287).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp288).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp289).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp290).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp291).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp292).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp293).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp294).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp295).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp296).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp297).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaExpression_NoTypeErrorProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaExpression_ExpectedTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBracketExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp298).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp299).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp300).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp301).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp302).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp303).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBracketExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBoundExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp304).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp305).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp306).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp307).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp308).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp309).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp310).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp311).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp312).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp313).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp314).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp315).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp316).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp317).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp318).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp319).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBoundExpression_UniqueDefinitionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp320).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBoundExpression_ArgumentsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBoundExpression_DefinitionsProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBoundExpression_DefinitionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaThisExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp321).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp322).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp323).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp324).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp325).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNullExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp326).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp327).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp328).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeConversionExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeConversionExpression_TypeReferenceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeConversionExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp329).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp330).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp331).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp332).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp333).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeAsExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeCastExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeCheckExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeCheckExpression_TypeReferenceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeCheckExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp334).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp335).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp336).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp337).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp338).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeOfExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaTypeOfExpression_TypeReferenceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp339).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp340).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp341).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConditionalExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConditionalExpression_ConditionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConditionalExpression_BalancedTypeProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConditionalExpression_ThenProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConditionalExpression_ElseProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp342).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp343).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp344).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp345).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp346).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp347).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp348).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp349).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp350).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp351).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp352).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp353).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp354).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp355).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstantExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaConstantExpression_ValueProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp356).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp357).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp358).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp359).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp360).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaIdentifierExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaIdentifierExpression_NameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp361).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp362).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp363).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp364).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp365).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaMemberAccessExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaMemberAccessExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaMemberAccessExpression_NameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp366).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp367).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp368).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp369).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp370).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp371).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp372).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp373).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp374).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunctionCallExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaFunctionCallExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp375).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp376).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp377).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp378).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp379).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp380).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp381).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp382).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp383).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp384).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp385).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp386).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp387).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp388).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp389).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp390).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp391).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp392).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp393).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp394).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp395).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaIndexerExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaIndexerExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp396).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp397).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp398).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp399).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp400).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp401).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp402).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp403).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp404).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp405).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp406).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp407).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp408).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp409).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp410).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp411).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp412).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewExpression_TypeReferenceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp413).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewExpression_PropertyInitializersProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp414).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp415).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp416).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewPropertyInitializer).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewPropertyInitializer_ParentProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewPropertyInitializer_PropertyNameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewPropertyInitializer_ValueProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewPropertyInitializer_PropertyProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp417).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp418).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp419).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp420).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp421).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp422).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp423).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp424).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp425).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp426).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp427).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp428).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp429).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewCollectionExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewCollectionExpression_TypeReferenceProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp430).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNewCollectionExpression_ValuesProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp431).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp432).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp433).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOperatorExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOperatorExpression_NameProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp434).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp435).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp436).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp437).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp438).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaUnaryExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp439).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaUnaryExpression_ExpressionProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaUnaryPlusExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp440).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp441).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp442).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNegateExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp443).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp444).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp445).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOnesComplementExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp446).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp447).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp448).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNotExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp449).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp450).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp451).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaUnaryAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPostIncrementAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp452).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp453).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp454).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPostDecrementAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp455).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp456).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp457).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPreIncrementAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp458).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp459).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp460).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaPreDecrementAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp461).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp462).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp463).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp464).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryExpression_LeftProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryExpression_RightProperty).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryArithmeticExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaMultiplyExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp465).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp466).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp467).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDivideExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp468).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp469).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp470).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaModuloExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp471).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp472).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp473).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAddExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp474).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp475).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp476).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaSubtractExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp477).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp478).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp479).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaLeftShiftExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp480).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp481).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp482).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaRightShiftExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp483).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp484).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp485).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryComparisonExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaLessThanExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp486).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp487).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp488).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaLessThanOrEqualExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp489).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp490).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp491).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaGreaterThanExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp492).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp493).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp494).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaGreaterThanOrEqualExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp495).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp496).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp497).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaEqualExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp498).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp499).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp500).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNotEqualExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp501).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp502).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp503).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaBinaryLogicalExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAndExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp504).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp505).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp506).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOrExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp507).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp508).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp509).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaExclusiveOrExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp510).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp511).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp512).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAndAlsoExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp513).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp514).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp515).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOrElseExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp516).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp517).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp518).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaNullCoalescingExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp519).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp520).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp521).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAssignmentExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp522).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp523).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp524).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp525).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp526).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp527).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp528).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp529).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp530).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp531).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp532).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp533).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaArithmeticAssignmentExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaMultiplyAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp534).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp535).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp536).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaDivideAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp537).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp538).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp539).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaModuloAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp540).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp541).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp542).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAddAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp543).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp544).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp545).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaSubtractAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp546).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp547).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp548).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaLeftShiftAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp549).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp550).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp551).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaRightShiftAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp552).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp553).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp554).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaLogicalAssignmentExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaAndAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp555).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp556).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp557).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaExclusiveOrAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp558).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp559).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp560).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)MetaOrAssignExpression).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp561).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp562).MMakeCreated();
			((MetaDslx.Core.Immutable.MutableSymbolBase)__tmp563).MMakeCreated();
			
	
	        model.EvaluateLazyValues();
	    }
	}
	
	public class MetaInstance
	{
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Object = MetaBuilderInstance.instance.Object.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType String = MetaBuilderInstance.instance.String.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Int = MetaBuilderInstance.instance.Int.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Long = MetaBuilderInstance.instance.Long.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Float = MetaBuilderInstance.instance.Float.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Double = MetaBuilderInstance.instance.Double.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Byte = MetaBuilderInstance.instance.Byte.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Bool = MetaBuilderInstance.instance.Bool.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Void = MetaBuilderInstance.instance.Void.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType None = MetaBuilderInstance.instance.None.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Any = MetaBuilderInstance.instance.Any.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType Error = MetaBuilderInstance.instance.Error.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType ModelObject = MetaBuilderInstance.instance.ModelObject.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaPrimitiveType DefinitionList = MetaBuilderInstance.instance.DefinitionList.ToImmutable();
	    public static readonly global::MetaDslx.Core.Immutable.MetaCollectionType ModelObjectList = MetaBuilderInstance.instance.ModelObjectList.ToImmutable();
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction TypeOf = MetaBuilderInstance.instance.TypeOf.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction GetValueType = MetaBuilderInstance.instance.GetValueType.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction GetReturnType = MetaBuilderInstance.instance.GetReturnType.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction CurrentType = MetaBuilderInstance.instance.CurrentType.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction TypeCheck = MetaBuilderInstance.instance.TypeCheck.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction Balance = MetaBuilderInstance.instance.Balance.ToImmutable();
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction Resolve1 = MetaBuilderInstance.instance.Resolve1.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction Resolve2 = MetaBuilderInstance.instance.Resolve2.ToImmutable();
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction ResolveType1 = MetaBuilderInstance.instance.ResolveType1.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction ResolveType2 = MetaBuilderInstance.instance.ResolveType2.ToImmutable();
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction ResolveName1 = MetaBuilderInstance.instance.ResolveName1.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction ResolveName2 = MetaBuilderInstance.instance.ResolveName2.ToImmutable();
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction ToDefinitionList = MetaBuilderInstance.instance.ToDefinitionList.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction Bind1 = MetaBuilderInstance.instance.Bind1.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaGlobalFunction Bind2 = MetaBuilderInstance.instance.Bind2.ToImmutable();
		
		
		
		
		/**
		 * <summary>
		 * Represents an annotated element.
		 * </summary>
		 */
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAnnotatedElement = MetaBuilderInstance.instance.MetaAnnotatedElement.ToImmutable();
		
		/**
		 * <summary>
		 * List of annotations
		 * </summary>
		 */
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaAnnotatedElement_AnnotationsProperty = MetaBuilderInstance.instance.MetaAnnotatedElement_AnnotationsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaDocumentedElement = MetaBuilderInstance.instance.MetaDocumentedElement.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaDocumentedElement_DocumentationProperty = MetaBuilderInstance.instance.MetaDocumentedElement_DocumentationProperty.ToImmutable();
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNamedElement = MetaBuilderInstance.instance.MetaNamedElement.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamedElement_NameProperty = MetaBuilderInstance.instance.MetaNamedElement_NameProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypedElement = MetaBuilderInstance.instance.MetaTypedElement.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypedElement_TypeProperty = MetaBuilderInstance.instance.MetaTypedElement_TypeProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaType = MetaBuilderInstance.instance.MetaType.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAnnotation = MetaBuilderInstance.instance.MetaAnnotation.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaAnnotation_PropertiesProperty = MetaBuilderInstance.instance.MetaAnnotation_PropertiesProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAnnotationProperty = MetaBuilderInstance.instance.MetaAnnotationProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaAnnotationProperty_ValueProperty = MetaBuilderInstance.instance.MetaAnnotationProperty_ValueProperty.ToImmutable();
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNamespace = MetaBuilderInstance.instance.MetaNamespace.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamespace_ParentProperty = MetaBuilderInstance.instance.MetaNamespace_ParentProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamespace_UsingsProperty = MetaBuilderInstance.instance.MetaNamespace_UsingsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamespace_MetaModelProperty = MetaBuilderInstance.instance.MetaNamespace_MetaModelProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamespace_NamespacesProperty = MetaBuilderInstance.instance.MetaNamespace_NamespacesProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNamespace_DeclarationsProperty = MetaBuilderInstance.instance.MetaNamespace_DeclarationsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaDeclaration = MetaBuilderInstance.instance.MetaDeclaration.ToImmutable();
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaDeclaration_NamespaceProperty = MetaBuilderInstance.instance.MetaDeclaration_NamespaceProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaDeclaration_ModelProperty = MetaBuilderInstance.instance.MetaDeclaration_ModelProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaModel = MetaBuilderInstance.instance.MetaModel.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaModel_UriProperty = MetaBuilderInstance.instance.MetaModel_UriProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaModel_NamespaceProperty = MetaBuilderInstance.instance.MetaModel_NamespaceProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaEnum MetaCollectionKind = MetaBuilderInstance.instance.MetaCollectionKind.ToImmutable();
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaCollectionType = MetaBuilderInstance.instance.MetaCollectionType.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaCollectionType_KindProperty = MetaBuilderInstance.instance.MetaCollectionType_KindProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaCollectionType_InnerTypeProperty = MetaBuilderInstance.instance.MetaCollectionType_InnerTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNullableType = MetaBuilderInstance.instance.MetaNullableType.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNullableType_InnerTypeProperty = MetaBuilderInstance.instance.MetaNullableType_InnerTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPrimitiveType = MetaBuilderInstance.instance.MetaPrimitiveType.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaEnum = MetaBuilderInstance.instance.MetaEnum.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaEnum_EnumLiteralsProperty = MetaBuilderInstance.instance.MetaEnum_EnumLiteralsProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaEnum_OperationsProperty = MetaBuilderInstance.instance.MetaEnum_OperationsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaEnumLiteral = MetaBuilderInstance.instance.MetaEnumLiteral.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaEnumLiteral_EnumProperty = MetaBuilderInstance.instance.MetaEnumLiteral_EnumProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaClass = MetaBuilderInstance.instance.MetaClass.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaClass_IsAbstractProperty = MetaBuilderInstance.instance.MetaClass_IsAbstractProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaClass_SuperClassesProperty = MetaBuilderInstance.instance.MetaClass_SuperClassesProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaClass_PropertiesProperty = MetaBuilderInstance.instance.MetaClass_PropertiesProperty.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaClass_OperationsProperty = MetaBuilderInstance.instance.MetaClass_OperationsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaClass_ConstructorProperty = MetaBuilderInstance.instance.MetaClass_ConstructorProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaFunctionType = MetaBuilderInstance.instance.MetaFunctionType.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunctionType_ParameterTypesProperty = MetaBuilderInstance.instance.MetaFunctionType_ParameterTypesProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunctionType_ReturnTypeProperty = MetaBuilderInstance.instance.MetaFunctionType_ReturnTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaFunction = MetaBuilderInstance.instance.MetaFunction.ToImmutable();
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunction_TypeProperty = MetaBuilderInstance.instance.MetaFunction_TypeProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunction_ParametersProperty = MetaBuilderInstance.instance.MetaFunction_ParametersProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunction_ReturnTypeProperty = MetaBuilderInstance.instance.MetaFunction_ReturnTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaGlobalFunction = MetaBuilderInstance.instance.MetaGlobalFunction.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOperation = MetaBuilderInstance.instance.MetaOperation.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaOperation_ParentProperty = MetaBuilderInstance.instance.MetaOperation_ParentProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaConstant = MetaBuilderInstance.instance.MetaConstant.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConstant_ValueProperty = MetaBuilderInstance.instance.MetaConstant_ValueProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaConstructor = MetaBuilderInstance.instance.MetaConstructor.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConstructor_ParentProperty = MetaBuilderInstance.instance.MetaConstructor_ParentProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConstructor_InitializersProperty = MetaBuilderInstance.instance.MetaConstructor_InitializersProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaParameter = MetaBuilderInstance.instance.MetaParameter.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaParameter_FunctionProperty = MetaBuilderInstance.instance.MetaParameter_FunctionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaEnum MetaPropertyKind = MetaBuilderInstance.instance.MetaPropertyKind.ToImmutable();
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaProperty = MetaBuilderInstance.instance.MetaProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_KindProperty = MetaBuilderInstance.instance.MetaProperty_KindProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_ClassProperty = MetaBuilderInstance.instance.MetaProperty_ClassProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_OppositePropertiesProperty = MetaBuilderInstance.instance.MetaProperty_OppositePropertiesProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_SubsettedPropertiesProperty = MetaBuilderInstance.instance.MetaProperty_SubsettedPropertiesProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_SubsettingPropertiesProperty = MetaBuilderInstance.instance.MetaProperty_SubsettingPropertiesProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_RedefinedPropertiesProperty = MetaBuilderInstance.instance.MetaProperty_RedefinedPropertiesProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaProperty_RedefiningPropertiesProperty = MetaBuilderInstance.instance.MetaProperty_RedefiningPropertiesProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPropertyInitializer = MetaBuilderInstance.instance.MetaPropertyInitializer.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaPropertyInitializer_ConstructorProperty = MetaBuilderInstance.instance.MetaPropertyInitializer_ConstructorProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaPropertyInitializer_PropertyNameProperty = MetaBuilderInstance.instance.MetaPropertyInitializer_PropertyNameProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaPropertyInitializer_PropertyContextProperty = MetaBuilderInstance.instance.MetaPropertyInitializer_PropertyContextProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaPropertyInitializer_PropertyProperty = MetaBuilderInstance.instance.MetaPropertyInitializer_PropertyProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaPropertyInitializer_ValueProperty = MetaBuilderInstance.instance.MetaPropertyInitializer_ValueProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaSynthetizedPropertyInitializer = MetaBuilderInstance.instance.MetaSynthetizedPropertyInitializer.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaInheritedPropertyInitializer = MetaBuilderInstance.instance.MetaInheritedPropertyInitializer.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaInheritedPropertyInitializer_ObjectNameProperty = MetaBuilderInstance.instance.MetaInheritedPropertyInitializer_ObjectNameProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaInheritedPropertyInitializer_ObjectProperty = MetaBuilderInstance.instance.MetaInheritedPropertyInitializer_ObjectProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaExpression = MetaBuilderInstance.instance.MetaExpression.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaExpression_NoTypeErrorProperty = MetaBuilderInstance.instance.MetaExpression_NoTypeErrorProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaExpression_ExpectedTypeProperty = MetaBuilderInstance.instance.MetaExpression_ExpectedTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBracketExpression = MetaBuilderInstance.instance.MetaBracketExpression.ToImmutable();
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBracketExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaBracketExpression_ExpressionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBoundExpression = MetaBuilderInstance.instance.MetaBoundExpression.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBoundExpression_UniqueDefinitionProperty = MetaBuilderInstance.instance.MetaBoundExpression_UniqueDefinitionProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBoundExpression_ArgumentsProperty = MetaBuilderInstance.instance.MetaBoundExpression_ArgumentsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBoundExpression_DefinitionsProperty = MetaBuilderInstance.instance.MetaBoundExpression_DefinitionsProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBoundExpression_DefinitionProperty = MetaBuilderInstance.instance.MetaBoundExpression_DefinitionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaThisExpression = MetaBuilderInstance.instance.MetaThisExpression.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNullExpression = MetaBuilderInstance.instance.MetaNullExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypeConversionExpression = MetaBuilderInstance.instance.MetaTypeConversionExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypeConversionExpression_TypeReferenceProperty = MetaBuilderInstance.instance.MetaTypeConversionExpression_TypeReferenceProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypeConversionExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaTypeConversionExpression_ExpressionProperty.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypeAsExpression = MetaBuilderInstance.instance.MetaTypeAsExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypeCastExpression = MetaBuilderInstance.instance.MetaTypeCastExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypeCheckExpression = MetaBuilderInstance.instance.MetaTypeCheckExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypeCheckExpression_TypeReferenceProperty = MetaBuilderInstance.instance.MetaTypeCheckExpression_TypeReferenceProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypeCheckExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaTypeCheckExpression_ExpressionProperty.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaTypeOfExpression = MetaBuilderInstance.instance.MetaTypeOfExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaTypeOfExpression_TypeReferenceProperty = MetaBuilderInstance.instance.MetaTypeOfExpression_TypeReferenceProperty.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaConditionalExpression = MetaBuilderInstance.instance.MetaConditionalExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConditionalExpression_ConditionProperty = MetaBuilderInstance.instance.MetaConditionalExpression_ConditionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConditionalExpression_BalancedTypeProperty = MetaBuilderInstance.instance.MetaConditionalExpression_BalancedTypeProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConditionalExpression_ThenProperty = MetaBuilderInstance.instance.MetaConditionalExpression_ThenProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConditionalExpression_ElseProperty = MetaBuilderInstance.instance.MetaConditionalExpression_ElseProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaConstantExpression = MetaBuilderInstance.instance.MetaConstantExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaConstantExpression_ValueProperty = MetaBuilderInstance.instance.MetaConstantExpression_ValueProperty.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaIdentifierExpression = MetaBuilderInstance.instance.MetaIdentifierExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaIdentifierExpression_NameProperty = MetaBuilderInstance.instance.MetaIdentifierExpression_NameProperty.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaMemberAccessExpression = MetaBuilderInstance.instance.MetaMemberAccessExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaMemberAccessExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaMemberAccessExpression_ExpressionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaMemberAccessExpression_NameProperty = MetaBuilderInstance.instance.MetaMemberAccessExpression_NameProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaFunctionCallExpression = MetaBuilderInstance.instance.MetaFunctionCallExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaFunctionCallExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaFunctionCallExpression_ExpressionProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaIndexerExpression = MetaBuilderInstance.instance.MetaIndexerExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaIndexerExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaIndexerExpression_ExpressionProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNewExpression = MetaBuilderInstance.instance.MetaNewExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewExpression_TypeReferenceProperty = MetaBuilderInstance.instance.MetaNewExpression_TypeReferenceProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewExpression_PropertyInitializersProperty = MetaBuilderInstance.instance.MetaNewExpression_PropertyInitializersProperty.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNewPropertyInitializer = MetaBuilderInstance.instance.MetaNewPropertyInitializer.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewPropertyInitializer_ParentProperty = MetaBuilderInstance.instance.MetaNewPropertyInitializer_ParentProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewPropertyInitializer_PropertyNameProperty = MetaBuilderInstance.instance.MetaNewPropertyInitializer_PropertyNameProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewPropertyInitializer_ValueProperty = MetaBuilderInstance.instance.MetaNewPropertyInitializer_ValueProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewPropertyInitializer_PropertyProperty = MetaBuilderInstance.instance.MetaNewPropertyInitializer_PropertyProperty.ToImmutable();
		
		
		
		
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNewCollectionExpression = MetaBuilderInstance.instance.MetaNewCollectionExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewCollectionExpression_TypeReferenceProperty = MetaBuilderInstance.instance.MetaNewCollectionExpression_TypeReferenceProperty.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaNewCollectionExpression_ValuesProperty = MetaBuilderInstance.instance.MetaNewCollectionExpression_ValuesProperty.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOperatorExpression = MetaBuilderInstance.instance.MetaOperatorExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaOperatorExpression_NameProperty = MetaBuilderInstance.instance.MetaOperatorExpression_NameProperty.ToImmutable();
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaUnaryExpression = MetaBuilderInstance.instance.MetaUnaryExpression.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaUnaryExpression_ExpressionProperty = MetaBuilderInstance.instance.MetaUnaryExpression_ExpressionProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaUnaryPlusExpression = MetaBuilderInstance.instance.MetaUnaryPlusExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNegateExpression = MetaBuilderInstance.instance.MetaNegateExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOnesComplementExpression = MetaBuilderInstance.instance.MetaOnesComplementExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNotExpression = MetaBuilderInstance.instance.MetaNotExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaUnaryAssignExpression = MetaBuilderInstance.instance.MetaUnaryAssignExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPostIncrementAssignExpression = MetaBuilderInstance.instance.MetaPostIncrementAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPostDecrementAssignExpression = MetaBuilderInstance.instance.MetaPostDecrementAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPreIncrementAssignExpression = MetaBuilderInstance.instance.MetaPreIncrementAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaPreDecrementAssignExpression = MetaBuilderInstance.instance.MetaPreDecrementAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBinaryExpression = MetaBuilderInstance.instance.MetaBinaryExpression.ToImmutable();
		
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBinaryExpression_LeftProperty = MetaBuilderInstance.instance.MetaBinaryExpression_LeftProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaProperty MetaBinaryExpression_RightProperty = MetaBuilderInstance.instance.MetaBinaryExpression_RightProperty.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBinaryArithmeticExpression = MetaBuilderInstance.instance.MetaBinaryArithmeticExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaMultiplyExpression = MetaBuilderInstance.instance.MetaMultiplyExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaDivideExpression = MetaBuilderInstance.instance.MetaDivideExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaModuloExpression = MetaBuilderInstance.instance.MetaModuloExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAddExpression = MetaBuilderInstance.instance.MetaAddExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaSubtractExpression = MetaBuilderInstance.instance.MetaSubtractExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaLeftShiftExpression = MetaBuilderInstance.instance.MetaLeftShiftExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaRightShiftExpression = MetaBuilderInstance.instance.MetaRightShiftExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBinaryComparisonExpression = MetaBuilderInstance.instance.MetaBinaryComparisonExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaLessThanExpression = MetaBuilderInstance.instance.MetaLessThanExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaLessThanOrEqualExpression = MetaBuilderInstance.instance.MetaLessThanOrEqualExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaGreaterThanExpression = MetaBuilderInstance.instance.MetaGreaterThanExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaGreaterThanOrEqualExpression = MetaBuilderInstance.instance.MetaGreaterThanOrEqualExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaEqualExpression = MetaBuilderInstance.instance.MetaEqualExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNotEqualExpression = MetaBuilderInstance.instance.MetaNotEqualExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaBinaryLogicalExpression = MetaBuilderInstance.instance.MetaBinaryLogicalExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAndExpression = MetaBuilderInstance.instance.MetaAndExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOrExpression = MetaBuilderInstance.instance.MetaOrExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaExclusiveOrExpression = MetaBuilderInstance.instance.MetaExclusiveOrExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAndAlsoExpression = MetaBuilderInstance.instance.MetaAndAlsoExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOrElseExpression = MetaBuilderInstance.instance.MetaOrElseExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaNullCoalescingExpression = MetaBuilderInstance.instance.MetaNullCoalescingExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAssignmentExpression = MetaBuilderInstance.instance.MetaAssignmentExpression.ToImmutable();
		
		
		
		
		
		
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAssignExpression = MetaBuilderInstance.instance.MetaAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaArithmeticAssignmentExpression = MetaBuilderInstance.instance.MetaArithmeticAssignmentExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaMultiplyAssignExpression = MetaBuilderInstance.instance.MetaMultiplyAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaDivideAssignExpression = MetaBuilderInstance.instance.MetaDivideAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaModuloAssignExpression = MetaBuilderInstance.instance.MetaModuloAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAddAssignExpression = MetaBuilderInstance.instance.MetaAddAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaSubtractAssignExpression = MetaBuilderInstance.instance.MetaSubtractAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaLeftShiftAssignExpression = MetaBuilderInstance.instance.MetaLeftShiftAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaRightShiftAssignExpression = MetaBuilderInstance.instance.MetaRightShiftAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaLogicalAssignmentExpression = MetaBuilderInstance.instance.MetaLogicalAssignmentExpression.ToImmutable();
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaAndAssignExpression = MetaBuilderInstance.instance.MetaAndAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaExclusiveOrAssignExpression = MetaBuilderInstance.instance.MetaExclusiveOrAssignExpression.ToImmutable();
		
		
		
		public static readonly global::MetaDslx.Core.Immutable.MetaClass MetaOrAssignExpression = MetaBuilderInstance.instance.MetaOrAssignExpression.ToImmutable();
		
		
		
		
	}
    /// <summary>
    /// Factory class for creating instances of model elements.
    /// </summary>
    public class MetaFactory : global::MetaDslx.Core.Immutable.ModelFactory
    {
    	private bool makeSymbolCreated = true;
    
        public MetaFactory(global::MetaDslx.Core.Immutable.MutableModel model = null, bool makeSymbolCreated = true)
            : base(model)
        {
    		global::MetaDslx.Core.Immutable.MetaDescriptor.Init();
    		this.makeSymbolCreated = makeSymbolCreated;
        }
    
        public override global::MetaDslx.Core.Immutable.IMutableSymbol Create(string type)
        {
            switch (type)
            {
                case "MetaAnnotation": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAnnotation();
                case "MetaAnnotationProperty": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAnnotationProperty();
                case "MetaNamespace": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNamespace();
                case "MetaModel": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaModel();
                case "MetaCollectionType": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaCollectionType();
                case "MetaNullableType": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNullableType();
                case "MetaPrimitiveType": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaPrimitiveType();
                case "MetaEnum": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaEnum();
                case "MetaEnumLiteral": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaEnumLiteral();
                case "MetaClass": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaClass();
                case "MetaFunctionType": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaFunctionType();
                case "MetaGlobalFunction": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaGlobalFunction();
                case "MetaOperation": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaOperation();
                case "MetaConstant": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaConstant();
                case "MetaConstructor": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaConstructor();
                case "MetaParameter": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaParameter();
                case "MetaProperty": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaProperty();
                case "MetaSynthetizedPropertyInitializer": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaSynthetizedPropertyInitializer();
                case "MetaInheritedPropertyInitializer": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaInheritedPropertyInitializer();
                case "MetaBracketExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaBracketExpression();
                case "MetaThisExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaThisExpression();
                case "MetaNullExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNullExpression();
                case "MetaTypeAsExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaTypeAsExpression();
                case "MetaTypeCastExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaTypeCastExpression();
                case "MetaTypeCheckExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaTypeCheckExpression();
                case "MetaTypeOfExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaTypeOfExpression();
                case "MetaConditionalExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaConditionalExpression();
                case "MetaConstantExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaConstantExpression();
                case "MetaIdentifierExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaIdentifierExpression();
                case "MetaMemberAccessExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaMemberAccessExpression();
                case "MetaFunctionCallExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaFunctionCallExpression();
                case "MetaIndexerExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaIndexerExpression();
                case "MetaNewExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNewExpression();
                case "MetaNewPropertyInitializer": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNewPropertyInitializer();
                case "MetaNewCollectionExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNewCollectionExpression();
                case "MetaUnaryPlusExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaUnaryPlusExpression();
                case "MetaNegateExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNegateExpression();
                case "MetaOnesComplementExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaOnesComplementExpression();
                case "MetaNotExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNotExpression();
                case "MetaPostIncrementAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaPostIncrementAssignExpression();
                case "MetaPostDecrementAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaPostDecrementAssignExpression();
                case "MetaPreIncrementAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaPreIncrementAssignExpression();
                case "MetaPreDecrementAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaPreDecrementAssignExpression();
                case "MetaMultiplyExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaMultiplyExpression();
                case "MetaDivideExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaDivideExpression();
                case "MetaModuloExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaModuloExpression();
                case "MetaAddExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAddExpression();
                case "MetaSubtractExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaSubtractExpression();
                case "MetaLeftShiftExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaLeftShiftExpression();
                case "MetaRightShiftExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaRightShiftExpression();
                case "MetaLessThanExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaLessThanExpression();
                case "MetaLessThanOrEqualExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaLessThanOrEqualExpression();
                case "MetaGreaterThanExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaGreaterThanExpression();
                case "MetaGreaterThanOrEqualExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaGreaterThanOrEqualExpression();
                case "MetaEqualExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaEqualExpression();
                case "MetaNotEqualExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNotEqualExpression();
                case "MetaAndExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAndExpression();
                case "MetaOrExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaOrExpression();
                case "MetaExclusiveOrExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaExclusiveOrExpression();
                case "MetaAndAlsoExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAndAlsoExpression();
                case "MetaOrElseExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaOrElseExpression();
                case "MetaNullCoalescingExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaNullCoalescingExpression();
                case "MetaAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAssignExpression();
                case "MetaMultiplyAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaMultiplyAssignExpression();
                case "MetaDivideAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaDivideAssignExpression();
                case "MetaModuloAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaModuloAssignExpression();
                case "MetaAddAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAddAssignExpression();
                case "MetaSubtractAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaSubtractAssignExpression();
                case "MetaLeftShiftAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaLeftShiftAssignExpression();
                case "MetaRightShiftAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaRightShiftAssignExpression();
                case "MetaAndAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaAndAssignExpression();
                case "MetaExclusiveOrAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaExclusiveOrAssignExpression();
                case "MetaOrAssignExpression": return (global::MetaDslx.Core.Immutable.IMutableSymbol)this.MetaOrAssignExpression();
                default:
                    throw new ModelException("Unknown type name: " + type);
            }
        }
    
        /// <summary>
        /// Creates a new instance of MetaAnnotation.
        /// </summary>
        public MetaAnnotationBuilder MetaAnnotation(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAnnotationId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAnnotationBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAnnotationProperty.
        /// </summary>
        public MetaAnnotationPropertyBuilder MetaAnnotationProperty(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAnnotationPropertyId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAnnotationPropertyBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNamespace.
        /// </summary>
        public MetaNamespaceBuilder MetaNamespace(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNamespaceId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNamespaceBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaModel.
        /// </summary>
        public MetaModelBuilder MetaModel(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaModelId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaModelBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaCollectionType.
        /// </summary>
        public MetaCollectionTypeBuilder MetaCollectionType(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaCollectionTypeId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaCollectionTypeBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNullableType.
        /// </summary>
        public MetaNullableTypeBuilder MetaNullableType(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNullableTypeId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNullableTypeBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaPrimitiveType.
        /// </summary>
        public MetaPrimitiveTypeBuilder MetaPrimitiveType(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPrimitiveTypeId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPrimitiveTypeBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaEnum.
        /// </summary>
        public MetaEnumBuilder MetaEnum(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaEnumId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaEnumBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaEnumLiteral.
        /// </summary>
        public MetaEnumLiteralBuilder MetaEnumLiteral(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaEnumLiteralId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaEnumLiteralBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaClass.
        /// </summary>
        public MetaClassBuilder MetaClass(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaClassId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaClassBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaFunctionType.
        /// </summary>
        public MetaFunctionTypeBuilder MetaFunctionType(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaFunctionTypeId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaFunctionTypeBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaGlobalFunction.
        /// </summary>
        public MetaGlobalFunctionBuilder MetaGlobalFunction(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaGlobalFunctionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaGlobalFunctionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaOperation.
        /// </summary>
        public MetaOperationBuilder MetaOperation(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaOperationId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaOperationBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaConstant.
        /// </summary>
        public MetaConstantBuilder MetaConstant(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaConstantId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaConstantBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaConstructor.
        /// </summary>
        public MetaConstructorBuilder MetaConstructor(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaConstructorId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaConstructorBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaParameter.
        /// </summary>
        public MetaParameterBuilder MetaParameter(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaParameterId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaParameterBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaProperty.
        /// </summary>
        public MetaPropertyBuilder MetaProperty(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPropertyId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPropertyBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaSynthetizedPropertyInitializer.
        /// </summary>
        public MetaSynthetizedPropertyInitializerBuilder MetaSynthetizedPropertyInitializer(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaSynthetizedPropertyInitializerId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaSynthetizedPropertyInitializerBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaInheritedPropertyInitializer.
        /// </summary>
        public MetaInheritedPropertyInitializerBuilder MetaInheritedPropertyInitializer(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaInheritedPropertyInitializerId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaInheritedPropertyInitializerBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaBracketExpression.
        /// </summary>
        public MetaBracketExpressionBuilder MetaBracketExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaBracketExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaBracketExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaThisExpression.
        /// </summary>
        public MetaThisExpressionBuilder MetaThisExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaThisExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaThisExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNullExpression.
        /// </summary>
        public MetaNullExpressionBuilder MetaNullExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNullExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNullExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaTypeAsExpression.
        /// </summary>
        public MetaTypeAsExpressionBuilder MetaTypeAsExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaTypeAsExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaTypeAsExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaTypeCastExpression.
        /// </summary>
        public MetaTypeCastExpressionBuilder MetaTypeCastExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaTypeCastExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaTypeCastExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaTypeCheckExpression.
        /// </summary>
        public MetaTypeCheckExpressionBuilder MetaTypeCheckExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaTypeCheckExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaTypeCheckExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaTypeOfExpression.
        /// </summary>
        public MetaTypeOfExpressionBuilder MetaTypeOfExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaTypeOfExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaTypeOfExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaConditionalExpression.
        /// </summary>
        public MetaConditionalExpressionBuilder MetaConditionalExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaConditionalExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaConditionalExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaConstantExpression.
        /// </summary>
        public MetaConstantExpressionBuilder MetaConstantExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaConstantExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaConstantExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaIdentifierExpression.
        /// </summary>
        public MetaIdentifierExpressionBuilder MetaIdentifierExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaIdentifierExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaIdentifierExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaMemberAccessExpression.
        /// </summary>
        public MetaMemberAccessExpressionBuilder MetaMemberAccessExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaMemberAccessExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaMemberAccessExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaFunctionCallExpression.
        /// </summary>
        public MetaFunctionCallExpressionBuilder MetaFunctionCallExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaFunctionCallExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaFunctionCallExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaIndexerExpression.
        /// </summary>
        public MetaIndexerExpressionBuilder MetaIndexerExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaIndexerExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaIndexerExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNewExpression.
        /// </summary>
        public MetaNewExpressionBuilder MetaNewExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNewExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNewExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNewPropertyInitializer.
        /// </summary>
        public MetaNewPropertyInitializerBuilder MetaNewPropertyInitializer(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNewPropertyInitializerId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNewPropertyInitializerBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNewCollectionExpression.
        /// </summary>
        public MetaNewCollectionExpressionBuilder MetaNewCollectionExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNewCollectionExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNewCollectionExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaUnaryPlusExpression.
        /// </summary>
        public MetaUnaryPlusExpressionBuilder MetaUnaryPlusExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaUnaryPlusExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaUnaryPlusExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNegateExpression.
        /// </summary>
        public MetaNegateExpressionBuilder MetaNegateExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNegateExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNegateExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaOnesComplementExpression.
        /// </summary>
        public MetaOnesComplementExpressionBuilder MetaOnesComplementExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaOnesComplementExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaOnesComplementExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNotExpression.
        /// </summary>
        public MetaNotExpressionBuilder MetaNotExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNotExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNotExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaPostIncrementAssignExpression.
        /// </summary>
        public MetaPostIncrementAssignExpressionBuilder MetaPostIncrementAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPostIncrementAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPostIncrementAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaPostDecrementAssignExpression.
        /// </summary>
        public MetaPostDecrementAssignExpressionBuilder MetaPostDecrementAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPostDecrementAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPostDecrementAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaPreIncrementAssignExpression.
        /// </summary>
        public MetaPreIncrementAssignExpressionBuilder MetaPreIncrementAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPreIncrementAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPreIncrementAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaPreDecrementAssignExpression.
        /// </summary>
        public MetaPreDecrementAssignExpressionBuilder MetaPreDecrementAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaPreDecrementAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaPreDecrementAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaMultiplyExpression.
        /// </summary>
        public MetaMultiplyExpressionBuilder MetaMultiplyExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaMultiplyExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaMultiplyExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaDivideExpression.
        /// </summary>
        public MetaDivideExpressionBuilder MetaDivideExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaDivideExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaDivideExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaModuloExpression.
        /// </summary>
        public MetaModuloExpressionBuilder MetaModuloExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaModuloExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaModuloExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAddExpression.
        /// </summary>
        public MetaAddExpressionBuilder MetaAddExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAddExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAddExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaSubtractExpression.
        /// </summary>
        public MetaSubtractExpressionBuilder MetaSubtractExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaSubtractExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaSubtractExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaLeftShiftExpression.
        /// </summary>
        public MetaLeftShiftExpressionBuilder MetaLeftShiftExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaLeftShiftExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaLeftShiftExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaRightShiftExpression.
        /// </summary>
        public MetaRightShiftExpressionBuilder MetaRightShiftExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaRightShiftExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaRightShiftExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaLessThanExpression.
        /// </summary>
        public MetaLessThanExpressionBuilder MetaLessThanExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaLessThanExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaLessThanExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaLessThanOrEqualExpression.
        /// </summary>
        public MetaLessThanOrEqualExpressionBuilder MetaLessThanOrEqualExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaLessThanOrEqualExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaLessThanOrEqualExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaGreaterThanExpression.
        /// </summary>
        public MetaGreaterThanExpressionBuilder MetaGreaterThanExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaGreaterThanExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaGreaterThanExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaGreaterThanOrEqualExpression.
        /// </summary>
        public MetaGreaterThanOrEqualExpressionBuilder MetaGreaterThanOrEqualExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaGreaterThanOrEqualExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaGreaterThanOrEqualExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaEqualExpression.
        /// </summary>
        public MetaEqualExpressionBuilder MetaEqualExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaEqualExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaEqualExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNotEqualExpression.
        /// </summary>
        public MetaNotEqualExpressionBuilder MetaNotEqualExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNotEqualExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNotEqualExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAndExpression.
        /// </summary>
        public MetaAndExpressionBuilder MetaAndExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAndExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAndExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaOrExpression.
        /// </summary>
        public MetaOrExpressionBuilder MetaOrExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaOrExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaOrExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaExclusiveOrExpression.
        /// </summary>
        public MetaExclusiveOrExpressionBuilder MetaExclusiveOrExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaExclusiveOrExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaExclusiveOrExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAndAlsoExpression.
        /// </summary>
        public MetaAndAlsoExpressionBuilder MetaAndAlsoExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAndAlsoExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAndAlsoExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaOrElseExpression.
        /// </summary>
        public MetaOrElseExpressionBuilder MetaOrElseExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaOrElseExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaOrElseExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaNullCoalescingExpression.
        /// </summary>
        public MetaNullCoalescingExpressionBuilder MetaNullCoalescingExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaNullCoalescingExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaNullCoalescingExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAssignExpression.
        /// </summary>
        public MetaAssignExpressionBuilder MetaAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaMultiplyAssignExpression.
        /// </summary>
        public MetaMultiplyAssignExpressionBuilder MetaMultiplyAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaMultiplyAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaMultiplyAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaDivideAssignExpression.
        /// </summary>
        public MetaDivideAssignExpressionBuilder MetaDivideAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaDivideAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaDivideAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaModuloAssignExpression.
        /// </summary>
        public MetaModuloAssignExpressionBuilder MetaModuloAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaModuloAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaModuloAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAddAssignExpression.
        /// </summary>
        public MetaAddAssignExpressionBuilder MetaAddAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAddAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAddAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaSubtractAssignExpression.
        /// </summary>
        public MetaSubtractAssignExpressionBuilder MetaSubtractAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaSubtractAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaSubtractAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaLeftShiftAssignExpression.
        /// </summary>
        public MetaLeftShiftAssignExpressionBuilder MetaLeftShiftAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaLeftShiftAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaLeftShiftAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaRightShiftAssignExpression.
        /// </summary>
        public MetaRightShiftAssignExpressionBuilder MetaRightShiftAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaRightShiftAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaRightShiftAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaAndAssignExpression.
        /// </summary>
        public MetaAndAssignExpressionBuilder MetaAndAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaAndAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaAndAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaExclusiveOrAssignExpression.
        /// </summary>
        public MetaExclusiveOrAssignExpressionBuilder MetaExclusiveOrAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaExclusiveOrAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaExclusiveOrAssignExpressionBuilder)symbol;
    	}
    
        /// <summary>
        /// Creates a new instance of MetaOrAssignExpression.
        /// </summary>
        public MetaOrAssignExpressionBuilder MetaOrAssignExpression(params global::MetaDslx.Core.Immutable.PropertyInit[] propertyInitializers)
    	{
    		global::MetaDslx.Core.Immutable.MutableSymbolBase symbol = (global::MetaDslx.Core.Immutable.MutableSymbolBase)this.AddSymbol(new MetaOrAssignExpressionId());
    		symbol.MInitProperties(propertyInitializers);
    		if (this.makeSymbolCreated) symbol.MMakeCreated();
    		return (MetaOrAssignExpressionBuilder)symbol;
    	}
    }
    
    internal static class MetaImplementationProvider
    {
        // If there is a compile error at this line, create a new class called MetaImplementation
    	// which is a subclass of MetaImplementationBase:
        private static MetaImplementation implementation = new MetaImplementation();
    
        public static MetaImplementation Implementation
        {
            get { return MetaImplementationProvider.implementation; }
        }
    }
    
    public static class MetaCollectionKindExtensions
    {
    }
    
    public static class MetaPropertyKindExtensions
    {
    }
    
    /// <summary>
    /// Base class for implementing the behavior of the model elements.
    /// This class has to be be overriden in MetaImplementation to provide custom
    /// implementation for the constructors, operations and property values.
    /// </summary>
    internal abstract class MetaImplementationBase
    {
        /// <summary>
    	/// Implements the constructor: MetaAnnotatedElement()
        /// </summary>
        public virtual void MetaAnnotatedElement(MetaAnnotatedElementBuilder @this)
        {
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaDocumentedElement()
        /// </summary>
        public virtual void MetaDocumentedElement(MetaDocumentedElementBuilder @this)
        {
    		
        }
    
        /// <summary>
        /// Implements the operation: MetaDocumentedElement.GetDocumentationLines()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<string> MetaDocumentedElement_GetDocumentationLines(global::MetaDslx.Core.Immutable.MetaDocumentedElement @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNamedElement()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaDocumentedElement
    	/// All superclasses: global::MetaDslx.Core.MetaDocumentedElement
        public virtual void MetaNamedElement(MetaNamedElementBuilder @this)
        {
            this.MetaDocumentedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypedElement()
        /// </summary>
        public virtual void MetaTypedElement(MetaTypedElementBuilder @this)
        {
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaType()
        /// </summary>
        public virtual void MetaType(MetaTypeBuilder @this)
        {
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAnnotation()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement
        public virtual void MetaAnnotation(MetaAnnotationBuilder @this)
        {
            this.MetaNamedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAnnotationProperty()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement
        public virtual void MetaAnnotationProperty(MetaAnnotationPropertyBuilder @this)
        {
            this.MetaNamedElement(@this);
    		@this.ValueLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.Any.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNamespace()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaNamespace(MetaNamespaceBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaDeclaration()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        /// Initializes the following derived properties:
    	/// <ul>
        ///     <li>Model</li>
    	/// </ul>
        public virtual void MetaDeclaration(MetaDeclarationBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaAnnotatedElement(@this);
    		@this.ModelLazy = () => (global::MetaDslx.Core.Immutable.MetaModelBuilder)(@this.Namespace.MetaModel);
        }
    
        /// <summary>
    	/// Implements the constructor: MetaModel()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaModel(MetaModelBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaCollectionType()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType
    	/// All superclasses: global::MetaDslx.Core.MetaType
        public virtual void MetaCollectionType(MetaCollectionTypeBuilder @this)
        {
            this.MetaType(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNullableType()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType
    	/// All superclasses: global::MetaDslx.Core.MetaType
        public virtual void MetaNullableType(MetaNullableTypeBuilder @this)
        {
            this.MetaType(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPrimitiveType()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaNamedElement
    	/// All superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement
        public virtual void MetaPrimitiveType(MetaPrimitiveTypeBuilder @this)
        {
            this.MetaType(@this);
            this.MetaNamedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaEnum()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaDeclaration
    	/// All superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaDeclaration, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaEnum(MetaEnumBuilder @this)
        {
            this.MetaType(@this);
            this.MetaDeclaration(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaEnumLiteral()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaTypedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaEnumLiteral(MetaEnumLiteralBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaTypedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaClass()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaDeclaration
    	/// All superclasses: global::MetaDslx.Core.MetaType, global::MetaDslx.Core.MetaDeclaration, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaClass(MetaClassBuilder @this)
        {
            this.MetaType(@this);
            this.MetaDeclaration(@this);
    		
        }
    
        /// <summary>
        /// Implements the operation: MetaClass.GetAllSuperClasses()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaClass> MetaClass_GetAllSuperClasses(global::MetaDslx.Core.Immutable.MetaClass @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
        /// Implements the operation: MetaClass.GetAllProperties()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> MetaClass_GetAllProperties(global::MetaDslx.Core.Immutable.MetaClass @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
        /// Implements the operation: MetaClass.GetAllOperations()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> MetaClass_GetAllOperations(global::MetaDslx.Core.Immutable.MetaClass @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
        /// Implements the operation: MetaClass.GetAllImplementedProperties()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaProperty> MetaClass_GetAllImplementedProperties(global::MetaDslx.Core.Immutable.MetaClass @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
        /// Implements the operation: MetaClass.GetAllImplementedOperations()
        /// </summary>
        public virtual global::MetaDslx.Core.Immutable.IImmutableModelList<global::MetaDslx.Core.Immutable.MetaOperation> MetaClass_GetAllImplementedOperations(global::MetaDslx.Core.Immutable.MetaClass @this)
        {
            throw new NotImplementedException();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaFunctionType()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaType
    	/// All superclasses: global::MetaDslx.Core.MetaType
        public virtual void MetaFunctionType(MetaFunctionTypeBuilder @this)
        {
            this.MetaType(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaFunction()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        /// Initializes the following readonly properties:
    	/// <ul>
        ///     <li>Type</li>
    	/// </ul>
        public virtual void MetaFunction(MetaFunctionBuilder @this)
        {
            this.MetaTypedElement(@this);
            this.MetaNamedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaGlobalFunction()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaFunction, global::MetaDslx.Core.MetaDeclaration
    	/// All superclasses: global::MetaDslx.Core.MetaFunction, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement, global::MetaDslx.Core.MetaDeclaration
        public virtual void MetaGlobalFunction(MetaGlobalFunctionBuilder @this)
        {
            this.MetaFunction(@this);
            this.MetaDeclaration(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOperation()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaFunction
    	/// All superclasses: global::MetaDslx.Core.MetaFunction, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaOperation(MetaOperationBuilder @this)
        {
            this.MetaFunction(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaConstant()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaDeclaration
    	/// All superclasses: global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaDeclaration, global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaConstant(MetaConstantBuilder @this)
        {
            this.MetaTypedElement(@this);
            this.MetaDeclaration(@this);
    		@this.ValueLazyChild.ExpectedType = () => @this.Type;
        }
    
        /// <summary>
    	/// Implements the constructor: MetaConstructor()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaConstructor(MetaConstructorBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaParameter()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaParameter(MetaParameterBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaTypedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaProperty()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaAnnotatedElement
    	/// All superclasses: global::MetaDslx.Core.MetaNamedElement, global::MetaDslx.Core.MetaDocumentedElement, global::MetaDslx.Core.MetaTypedElement, global::MetaDslx.Core.MetaAnnotatedElement
        public virtual void MetaProperty(MetaPropertyBuilder @this)
        {
            this.MetaNamedElement(@this);
            this.MetaTypedElement(@this);
            this.MetaAnnotatedElement(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPropertyInitializer()
        /// </summary>
        public virtual void MetaPropertyInitializer(MetaPropertyInitializerBuilder @this)
        {
    		@this.PropertyContextLazy = () => (global::MetaDslx.Core.Immutable.MetaClassBuilder)(this.current_type(@this) as MetaClassBuilder);
    		@this.PropertyLazy = () => (global::MetaDslx.Core.Immutable.MetaPropertyBuilder)(this.bind(this.resolve_name(@this.PropertyContext, @this.PropertyName)));
    		@this.ValueLazyChild.ExpectedType = () => this.get_type(@this.Property);
        }
    
        /// <summary>
    	/// Implements the constructor: MetaSynthetizedPropertyInitializer()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaPropertyInitializer
    	/// All superclasses: global::MetaDslx.Core.MetaPropertyInitializer
        public virtual void MetaSynthetizedPropertyInitializer(MetaSynthetizedPropertyInitializerBuilder @this)
        {
            this.MetaPropertyInitializer(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaInheritedPropertyInitializer()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaPropertyInitializer
    	/// All superclasses: global::MetaDslx.Core.MetaPropertyInitializer
        public virtual void MetaInheritedPropertyInitializer(MetaInheritedPropertyInitializerBuilder @this)
        {
            this.MetaPropertyInitializer(@this);
    		@this.ObjectLazy = () => (global::MetaDslx.Core.Immutable.MetaPropertyBuilder)(this.bind(this.resolve_name(@this.ObjectName)));
        }
    
        /// <summary>
    	/// Implements the constructor: MetaExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaTypedElement
    	/// All superclasses: global::MetaDslx.Core.MetaTypedElement
        /// Initializes the following readonly properties:
    	/// <ul>
        ///     <li>NoTypeError</li>
    	/// </ul>
        public virtual void MetaExpression(MetaExpressionBuilder @this)
        {
            this.MetaTypedElement(@this);
    		@this.NoTypeErrorLazy = () => (bool)(this.type_check(@this));
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBracketExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBracketExpression(MetaBracketExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		@this.ExpressionLazyChild.ExpectedType = () => @this.ExpectedType;
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBoundExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBoundExpression(MetaBoundExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		@this.UniqueDefinitionLazy = () => (bool)(true);
    		@this.DefinitionLazy = () => (global::MetaDslx.Core.Immutable.ISymbol)(@this.UniqueDefinition ? this.bind(@this, @this.Definitions) : null);
        }
    
        /// <summary>
    	/// Implements the constructor: MetaThisExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaThisExpression(MetaThisExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNullExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNullExpression(MetaNullExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypeConversionExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaTypeConversionExpression(MetaTypeConversionExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		@this.ExpressionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.Any.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypeAsExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaTypeConversionExpression
    	/// All superclasses: global::MetaDslx.Core.MetaTypeConversionExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaTypeAsExpression(MetaTypeAsExpressionBuilder @this)
        {
            this.MetaTypeConversionExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypeCastExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaTypeConversionExpression
    	/// All superclasses: global::MetaDslx.Core.MetaTypeConversionExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaTypeCastExpression(MetaTypeCastExpressionBuilder @this)
        {
            this.MetaTypeConversionExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypeCheckExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaTypeCheckExpression(MetaTypeCheckExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		@this.ExpressionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.Any.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaTypeOfExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaTypeOfExpression(MetaTypeOfExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaConditionalExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaConditionalExpression(MetaConditionalExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		@this.ConditionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.Bool.ToMutable();
    		@this.ThenLazyChild.ExpectedType = () => @this.ExpectedType;
    		@this.ElseLazyChild.ExpectedType = () => @this.ExpectedType;
        }
    
        /// <summary>
    	/// Implements the constructor: MetaConstantExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaConstantExpression(MetaConstantExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaIdentifierExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaIdentifierExpression(MetaIdentifierExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaMemberAccessExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaMemberAccessExpression(MetaMemberAccessExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		@this.ExpressionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.None.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaFunctionCallExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaFunctionCallExpression(MetaFunctionCallExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		((MutableSymbolBase)@this).MChildAddLazy(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaFunctionCallExpression.ExpressionProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => false);
    		@this.ExpressionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.None.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaIndexerExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaIndexerExpression(MetaIndexerExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		((MutableSymbolBase)@this).MChildAddLazy(global::MetaDslx.Core.Immutable.MetaDescriptor.MetaIndexerExpression.ExpressionProperty, global::MetaDslx.Core.Immutable.MetaDescriptor.MetaBoundExpression.UniqueDefinitionProperty, () => false);
    		@this.ExpressionLazyChild.ExpectedType = () => global::MetaDslx.Core.Immutable.MetaInstance.None.ToMutable();
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNewExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNewExpression(MetaNewExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNewPropertyInitializer()
        /// </summary>
        public virtual void MetaNewPropertyInitializer(MetaNewPropertyInitializerBuilder @this)
        {
    		@this.PropertyLazy = () => (global::MetaDslx.Core.Immutable.MetaPropertyBuilder)(this.bind(this.resolve_name(@this.Parent.Type, @this.PropertyName)));
    		@this.ValueLazyChild.ExpectedType = () => this.get_type(@this.Property);
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNewCollectionExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaExpression
    	/// All superclasses: global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNewCollectionExpression(MetaNewCollectionExpressionBuilder @this)
        {
            this.MetaExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOperatorExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBoundExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        /// Initializes the following readonly properties:
    	/// <ul>
        ///     <li>Name</li>
    	/// </ul>
        public virtual void MetaOperatorExpression(MetaOperatorExpressionBuilder @this)
        {
            this.MetaBoundExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaUnaryExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaOperatorExpression
    	/// All superclasses: global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaUnaryExpression(MetaUnaryExpressionBuilder @this)
        {
            this.MetaOperatorExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaUnaryPlusExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaUnaryPlusExpression(MetaUnaryPlusExpressionBuilder @this)
        {
            this.MetaUnaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNegateExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNegateExpression(MetaNegateExpressionBuilder @this)
        {
            this.MetaUnaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOnesComplementExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaOnesComplementExpression(MetaOnesComplementExpressionBuilder @this)
        {
            this.MetaUnaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNotExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNotExpression(MetaNotExpressionBuilder @this)
        {
            this.MetaUnaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaUnaryAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaUnaryAssignExpression(MetaUnaryAssignExpressionBuilder @this)
        {
            this.MetaUnaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPostIncrementAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression, global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaPostIncrementAssignExpression(MetaPostIncrementAssignExpressionBuilder @this)
        {
            this.MetaUnaryAssignExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPostDecrementAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression, global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaPostDecrementAssignExpression(MetaPostDecrementAssignExpressionBuilder @this)
        {
            this.MetaUnaryAssignExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPreIncrementAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression, global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaPreIncrementAssignExpression(MetaPreIncrementAssignExpressionBuilder @this)
        {
            this.MetaUnaryAssignExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaPreDecrementAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression
    	/// All superclasses: global::MetaDslx.Core.MetaUnaryAssignExpression, global::MetaDslx.Core.MetaUnaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaPreDecrementAssignExpression(MetaPreDecrementAssignExpressionBuilder @this)
        {
            this.MetaUnaryAssignExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBinaryExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaOperatorExpression
    	/// All superclasses: global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBinaryExpression(MetaBinaryExpressionBuilder @this)
        {
            this.MetaOperatorExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBinaryArithmeticExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBinaryArithmeticExpression(MetaBinaryArithmeticExpressionBuilder @this)
        {
            this.MetaBinaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaMultiplyExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaMultiplyExpression(MetaMultiplyExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaDivideExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaDivideExpression(MetaDivideExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaModuloExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaModuloExpression(MetaModuloExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAddExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAddExpression(MetaAddExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaSubtractExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaSubtractExpression(MetaSubtractExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaLeftShiftExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaLeftShiftExpression(MetaLeftShiftExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaRightShiftExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryArithmeticExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaRightShiftExpression(MetaRightShiftExpressionBuilder @this)
        {
            this.MetaBinaryArithmeticExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBinaryComparisonExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBinaryComparisonExpression(MetaBinaryComparisonExpressionBuilder @this)
        {
            this.MetaBinaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaLessThanExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaLessThanExpression(MetaLessThanExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaLessThanOrEqualExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaLessThanOrEqualExpression(MetaLessThanOrEqualExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaGreaterThanExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaGreaterThanExpression(MetaGreaterThanExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaGreaterThanOrEqualExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaGreaterThanOrEqualExpression(MetaGreaterThanOrEqualExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaEqualExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaEqualExpression(MetaEqualExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNotEqualExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryComparisonExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNotEqualExpression(MetaNotEqualExpressionBuilder @this)
        {
            this.MetaBinaryComparisonExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaBinaryLogicalExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaBinaryLogicalExpression(MetaBinaryLogicalExpressionBuilder @this)
        {
            this.MetaBinaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAndExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAndExpression(MetaAndExpressionBuilder @this)
        {
            this.MetaBinaryLogicalExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOrExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaOrExpression(MetaOrExpressionBuilder @this)
        {
            this.MetaBinaryLogicalExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaExclusiveOrExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaExclusiveOrExpression(MetaExclusiveOrExpressionBuilder @this)
        {
            this.MetaBinaryLogicalExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAndAlsoExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAndAlsoExpression(MetaAndAlsoExpressionBuilder @this)
        {
            this.MetaBinaryLogicalExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOrElseExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryLogicalExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaOrElseExpression(MetaOrElseExpressionBuilder @this)
        {
            this.MetaBinaryLogicalExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaNullCoalescingExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaNullCoalescingExpression(MetaNullCoalescingExpressionBuilder @this)
        {
            this.MetaBinaryExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAssignmentExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaBinaryExpression
    	/// All superclasses: global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAssignmentExpression(MetaAssignmentExpressionBuilder @this)
        {
            this.MetaBinaryExpression(@this);
    		@this.LeftLazyChild.ExpectedType = () => @this.ExpectedType;
    		@this.RightLazyChild.ExpectedType = () => @this.Type;
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAssignExpression(MetaAssignExpressionBuilder @this)
        {
            this.MetaAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaArithmeticAssignmentExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaArithmeticAssignmentExpression(MetaArithmeticAssignmentExpressionBuilder @this)
        {
            this.MetaAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaMultiplyAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaMultiplyAssignExpression(MetaMultiplyAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaDivideAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaDivideAssignExpression(MetaDivideAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaModuloAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaModuloAssignExpression(MetaModuloAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAddAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAddAssignExpression(MetaAddAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaSubtractAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaSubtractAssignExpression(MetaSubtractAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaLeftShiftAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaLeftShiftAssignExpression(MetaLeftShiftAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaRightShiftAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaArithmeticAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaRightShiftAssignExpression(MetaRightShiftAssignExpressionBuilder @this)
        {
            this.MetaArithmeticAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaLogicalAssignmentExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaLogicalAssignmentExpression(MetaLogicalAssignmentExpressionBuilder @this)
        {
            this.MetaAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaAndAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaAndAssignExpression(MetaAndAssignExpressionBuilder @this)
        {
            this.MetaLogicalAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaExclusiveOrAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaExclusiveOrAssignExpression(MetaExclusiveOrAssignExpressionBuilder @this)
        {
            this.MetaLogicalAssignmentExpression(@this);
    		
        }
    
        /// <summary>
    	/// Implements the constructor: MetaOrAssignExpression()
        /// </summary>
    	/// Direct superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression
    	/// All superclasses: global::MetaDslx.Core.MetaLogicalAssignmentExpression, global::MetaDslx.Core.MetaAssignmentExpression, global::MetaDslx.Core.MetaBinaryExpression, global::MetaDslx.Core.MetaOperatorExpression, global::MetaDslx.Core.MetaBoundExpression, global::MetaDslx.Core.MetaExpression, global::MetaDslx.Core.MetaTypedElement
        public virtual void MetaOrAssignExpression(MetaOrAssignExpressionBuilder @this)
        {
            this.MetaLogicalAssignmentExpression(@this);
    		
        }
    
    
    
    
    	//public abstract global::MetaDslx.Core.Immutable.MetaTypeBuilder typeof(object type);
    	public abstract global::MetaDslx.Core.Immutable.MetaTypeBuilder get_type(object value);
    	public abstract global::MetaDslx.Core.Immutable.MetaTypeBuilder get_return_type(object value);
    	public abstract global::MetaDslx.Core.Immutable.MetaTypeBuilder current_type(global::MetaDslx.Core.Immutable.ISymbol symbol);
    	public abstract bool type_check(global::MetaDslx.Core.Immutable.ISymbol symbol);
    	public abstract global::MetaDslx.Core.Immutable.MetaTypeBuilder balance(global::MetaDslx.Core.Immutable.MetaTypeBuilder left, global::MetaDslx.Core.Immutable.MetaTypeBuilder right);
    	public abstract global::MetaDslx.Core.BindingInfo resolve(string name);
    	public abstract global::MetaDslx.Core.BindingInfo resolve(global::MetaDslx.Core.Immutable.ISymbol context, string name);
    	public abstract global::MetaDslx.Core.BindingInfo resolve_type(string name);
    	public abstract global::MetaDslx.Core.BindingInfo resolve_type(global::MetaDslx.Core.Immutable.ISymbol context, string name);
    	public abstract global::MetaDslx.Core.BindingInfo resolve_name(string name);
    	public abstract global::MetaDslx.Core.BindingInfo resolve_name(global::MetaDslx.Core.Immutable.ISymbol context, string name);
    	public abstract global::MetaDslx.Core.BindingInfo definition_list(global::MetaDslx.Core.Immutable.ISymbol definition);
    	public abstract global::MetaDslx.Core.Immutable.ISymbol bind(global::MetaDslx.Core.BindingInfo definitions);
    	public abstract global::MetaDslx.Core.Immutable.ISymbol bind(global::MetaDslx.Core.Immutable.ISymbol context, global::MetaDslx.Core.BindingInfo definitions);
    }
    
}


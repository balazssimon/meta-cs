//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\balaz\AppData\Local\Temp\vyevl5oe.tbp\MetaGeneratorParser.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MetaDslx.Compiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MetaGeneratorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IMetaGeneratorParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] MetaGeneratorParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] MetaGeneratorParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.generatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorDeclaration([NotNull] MetaGeneratorParser.GeneratorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingNamespaceDeclaration([NotNull] MetaGeneratorParser.UsingNamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingGeneratorDeclaration([NotNull] MetaGeneratorParser.UsingGeneratorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.configDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigDeclaration([NotNull] MetaGeneratorParser.ConfigDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigPropertyDeclaration([NotNull] MetaGeneratorParser.ConfigPropertyDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigPropertyGroupDeclaration([NotNull] MetaGeneratorParser.ConfigPropertyGroupDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclaration([NotNull] MetaGeneratorParser.MethodDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] MetaGeneratorParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionSignature([NotNull] MetaGeneratorParser.FunctionSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] MetaGeneratorParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] MetaGeneratorParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] MetaGeneratorParser.BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MetaGeneratorParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] MetaGeneratorParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MetaGeneratorParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MetaGeneratorParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MetaGeneratorParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.ifStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementBegin([NotNull] MetaGeneratorParser.IfStatementBeginContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfStatement([NotNull] MetaGeneratorParser.ElseIfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.ifStatementElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementElse([NotNull] MetaGeneratorParser.IfStatementElseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.ifStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementEnd([NotNull] MetaGeneratorParser.IfStatementEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] MetaGeneratorParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatementBegin([NotNull] MetaGeneratorParser.LoopStatementBeginContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatementEnd([NotNull] MetaGeneratorParser.LoopStatementEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChain([NotNull] MetaGeneratorParser.LoopChainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopChainItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainItem([NotNull] MetaGeneratorParser.LoopChainItemContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainMemberAccessExpression([NotNull] MetaGeneratorParser.LoopChainMemberAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainMethodCallExpression([NotNull] MetaGeneratorParser.LoopChainMethodCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainIdentifierExpression([NotNull] MetaGeneratorParser.LoopChainIdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainTypeofExpression([NotNull] MetaGeneratorParser.LoopChainTypeofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopWhereExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopWhereExpression([NotNull] MetaGeneratorParser.LoopWhereExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.loopRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopRunExpression([NotNull] MetaGeneratorParser.LoopRunExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.separatorStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSeparatorStatement([NotNull] MetaGeneratorParser.SeparatorStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] MetaGeneratorParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatementBegin([NotNull] MetaGeneratorParser.SwitchStatementBeginContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatementEnd([NotNull] MetaGeneratorParser.SwitchStatementEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchBranchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBranchStatement([NotNull] MetaGeneratorParser.SwitchBranchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchBranchHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBranchHeadStatement([NotNull] MetaGeneratorParser.SwitchBranchHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchCaseOrTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseOrTypeIsHeadStatement([NotNull] MetaGeneratorParser.SwitchCaseOrTypeIsHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchCaseHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseHeadStatement([NotNull] MetaGeneratorParser.SwitchCaseHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchTypeIsHeadStatement([NotNull] MetaGeneratorParser.SwitchTypeIsHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchTypeAsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchTypeAsHeadStatement([NotNull] MetaGeneratorParser.SwitchTypeAsHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchDefaultStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchDefaultStatement([NotNull] MetaGeneratorParser.SwitchDefaultStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.switchDefaultHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchDefaultHeadStatement([NotNull] MetaGeneratorParser.SwitchDefaultHeadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateDeclaration([NotNull] MetaGeneratorParser.TemplateDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateSignature([NotNull] MetaGeneratorParser.TemplateSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateBody([NotNull] MetaGeneratorParser.TemplateBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateContentLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateContentLine([NotNull] MetaGeneratorParser.TemplateContentLineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateOutput([NotNull] MetaGeneratorParser.TemplateOutputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateLineEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateLineEnd([NotNull] MetaGeneratorParser.TemplateLineEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateStatementStartEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateStatementStartEnd([NotNull] MetaGeneratorParser.TemplateStatementStartEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.templateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateStatement([NotNull] MetaGeneratorParser.TemplateStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArgumentList([NotNull] MetaGeneratorParser.TypeArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.predefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedType([NotNull] MetaGeneratorParser.PredefinedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.typeReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReferenceList([NotNull] MetaGeneratorParser.TypeReferenceListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReference([NotNull] MetaGeneratorParser.TypeReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] MetaGeneratorParser.ArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.nullableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullableType([NotNull] MetaGeneratorParser.NullableTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericType([NotNull] MetaGeneratorParser.GenericTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleType([NotNull] MetaGeneratorParser.SimpleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.voidType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidType([NotNull] MetaGeneratorParser.VoidTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnType([NotNull] MetaGeneratorParser.ReturnTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] MetaGeneratorParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.variableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableReference([NotNull] MetaGeneratorParser.VariableReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.rankSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRankSpecifiers([NotNull] MetaGeneratorParser.RankSpecifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.rankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRankSpecifier([NotNull] MetaGeneratorParser.RankSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.unboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnboundTypeName([NotNull] MetaGeneratorParser.UnboundTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.genericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericDimensionSpecifier([NotNull] MetaGeneratorParser.GenericDimensionSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitAnonymousFunctionSignature([NotNull] MetaGeneratorParser.ExplicitAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitAnonymousFunctionSignature([NotNull] MetaGeneratorParser.ImplicitAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleParamAnonymousFunctionSignature([NotNull] MetaGeneratorParser.SingleParamAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.explicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitParameter([NotNull] MetaGeneratorParser.ExplicitParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.implicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitParameter([NotNull] MetaGeneratorParser.ImplicitParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofUnboundTypeExpression([NotNull] MetaGeneratorParser.TypeofUnboundTypeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditionExpression([NotNull] MetaGeneratorParser.AdditionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypecheckExpression([NotNull] MetaGeneratorParser.TypecheckExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] MetaGeneratorParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] MetaGeneratorParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostExpression([NotNull] MetaGeneratorParser.PostExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofVoidExpression([NotNull] MetaGeneratorParser.TypeofVoidExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] MetaGeneratorParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseAndExpression([NotNull] MetaGeneratorParser.BitwiseAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] MetaGeneratorParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] MetaGeneratorParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessExpression([NotNull] MetaGeneratorParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] MetaGeneratorParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypecastExpression([NotNull] MetaGeneratorParser.TypecastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalXorExpression([NotNull] MetaGeneratorParser.LogicalXorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedTypeMemberAccessExpression([NotNull] MetaGeneratorParser.PredefinedTypeMemberAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseXorExpression([NotNull] MetaGeneratorParser.BitwiseXorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaExpression([NotNull] MetaGeneratorParser.LambdaExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultValueExpression([NotNull] MetaGeneratorParser.DefaultValueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] MetaGeneratorParser.ConditionalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] MetaGeneratorParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpression([NotNull] MetaGeneratorParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewObjectOrCollectionWithConstructorExpression([NotNull] MetaGeneratorParser.NewObjectOrCollectionWithConstructorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] MetaGeneratorParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseOrExpression([NotNull] MetaGeneratorParser.BitwiseOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasLoopExpression([NotNull] MetaGeneratorParser.HasLoopExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisExpression([NotNull] MetaGeneratorParser.ThisExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementAccessExpression([NotNull] MetaGeneratorParser.ElementAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofTypeExpression([NotNull] MetaGeneratorParser.TypeofTypeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] MetaGeneratorParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="MetaGeneratorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] MetaGeneratorParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedName([NotNull] MetaGeneratorParser.QualifiedNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] MetaGeneratorParser.IdentifierListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] MetaGeneratorParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] MetaGeneratorParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] MetaGeneratorParser.NullLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] MetaGeneratorParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberLiteral([NotNull] MetaGeneratorParser.NumberLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] MetaGeneratorParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.decimalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteral([NotNull] MetaGeneratorParser.DecimalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.scientificLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScientificLiteral([NotNull] MetaGeneratorParser.ScientificLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.dateOrTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateOrTimeLiteral([NotNull] MetaGeneratorParser.DateOrTimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.dateTimeOffsetLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeOffsetLiteral([NotNull] MetaGeneratorParser.DateTimeOffsetLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.dateTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeLiteral([NotNull] MetaGeneratorParser.DateTimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteral([NotNull] MetaGeneratorParser.DateLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.timeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeLiteral([NotNull] MetaGeneratorParser.TimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.charLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteral([NotNull] MetaGeneratorParser.CharLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] MetaGeneratorParser.StringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MetaGeneratorParser.guidLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGuidLiteral([NotNull] MetaGeneratorParser.GuidLiteralContext context);
}
} // namespace MetaDslx.Compiler

// Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.TupleType(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.TupleElementSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.TupleExpression(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.WhenClause(MetaDslx.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.IncompleteMember(MetaDslx.CodeAnalysis.CSharp.Syntax.TypeSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.ReturnStatement(MetaDslx.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.DeconstructionVariablesVar(MetaDslx.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.DeconstructionVariablesVarSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.LocalDeclarationStatement(MetaDslx.CodeAnalysis.SyntaxTokenList)~MetaDslx.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.VariableDeconstructionDeclarator(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeconstructionDeclaratorSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclaration(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.FieldDeclaration(MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.EventFieldDeclaration(MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.ILocalSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.TupleElementSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedVariableComponent(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.VariableComponentSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableComponentSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedVariableDesignation(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.INamedTypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(MetaDslx.CodeAnalysis.SemanticModel,MetaDslx.CodeAnalysis.CSharp.Syntax.ArgumentSyntax,System.Threading.CancellationToken)~MetaDslx.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.ArrayRankSpecifier(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.DeconstructionPattern(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.SubpatternSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.DeconstructionPatternSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.PropertyPatternClause(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.SubpatternSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.PropertyPatternClauseSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.PositionalPatternClause(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.SubpatternSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.PositionalPatternClauseSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.DeconstructionPatternClause(MetaDslx.CodeAnalysis.SeparatedSyntaxList{MetaDslx.CodeAnalysis.CSharp.Syntax.SubpatternSyntax})~MetaDslx.CodeAnalysis.CSharp.Syntax.DeconstructionPatternClauseSyntax")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "<Pending>", Scope = "member", Target = "~M:MetaDslx.CodeAnalysis.CSharp.SyntaxFactory.BaseExpression(MetaDslx.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax)~MetaDslx.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax")]


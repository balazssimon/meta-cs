//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Core\Syntax\InternalSyntax\CoreParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Languages.Core.Syntax.InternalSyntax {

using MetaDslx.CodeAnalysis.Symbols;
using MetaDslx.Languages.Core.Model;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CoreParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface ICoreParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] CoreParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.usingNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingNamespace([NotNull] CoreParser.UsingNamespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>emptyStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStmt([NotNull] CoreParser.EmptyStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>blockStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStmt([NotNull] CoreParser.BlockStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStmt([NotNull] CoreParser.ExprStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>foreachStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachStmt([NotNull] CoreParser.ForeachStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] CoreParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>breakStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStmt([NotNull] CoreParser.BreakStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>continueStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStmt([NotNull] CoreParser.ContinueStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>gotoStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoStmt([NotNull] CoreParser.GotoStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>labeledStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabeledStmt([NotNull] CoreParser.LabeledStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lockStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLockStmt([NotNull] CoreParser.LockStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>returnStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] CoreParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tryStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStmt([NotNull] CoreParser.TryStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingStmt([NotNull] CoreParser.UsingStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="CoreParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] CoreParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] CoreParser.BlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.bareBlockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBareBlockStatement([NotNull] CoreParser.BareBlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.switchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCase([NotNull] CoreParser.SwitchCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseClause([NotNull] CoreParser.CaseClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.singleValueCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleValueCaseClause([NotNull] CoreParser.SingleValueCaseClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.defaultCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultCaseClause([NotNull] CoreParser.DefaultCaseClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.catchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchClause([NotNull] CoreParser.CatchClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.catchFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchFilter([NotNull] CoreParser.CatchFilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.finallyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinallyClause([NotNull] CoreParser.FinallyClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.usingHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingHeader([NotNull] CoreParser.UsingHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] CoreParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpr([NotNull] CoreParser.NewExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orElseExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrElseExpr([NotNull] CoreParser.OrElseExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>thisExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisExpr([NotNull] CoreParser.ThisExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>compAssignExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompAssignExpr([NotNull] CoreParser.CompAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeofExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofExpr([NotNull] CoreParser.TypeofExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>condExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondExpr([NotNull] CoreParser.CondExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uncheckedExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUncheckedExpr([NotNull] CoreParser.UncheckedExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeCastExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeCastExpr([NotNull] CoreParser.TypeCastExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>xorExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorExpr([NotNull] CoreParser.XorExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexerExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexerExpr([NotNull] CoreParser.IndexerExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>postfixUnaryExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixUnaryExpr([NotNull] CoreParser.PostfixUnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>invocationExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationExpr([NotNull] CoreParser.InvocationExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] CoreParser.UnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lambdaExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaExpr([NotNull] CoreParser.LambdaExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpr([NotNull] CoreParser.ParenthesizedExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpr([NotNull] CoreParser.LiteralExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeIsExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeIsExpr([NotNull] CoreParser.TypeIsExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>relExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelExpr([NotNull] CoreParser.RelExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>discardExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDiscardExpr([NotNull] CoreParser.DiscardExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExpr([NotNull] CoreParser.AssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>qualifierExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifierExpr([NotNull] CoreParser.QualifierExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>throwExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowExpr([NotNull] CoreParser.ThrowExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] CoreParser.OrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andAlsoExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndAlsoExpr([NotNull] CoreParser.AndAlsoExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAwaitExpr([NotNull] CoreParser.AwaitExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nameofExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameofExpr([NotNull] CoreParser.NameofExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>checkedExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCheckedExpr([NotNull] CoreParser.CheckedExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultExpr([NotNull] CoreParser.MultExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>coalExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoalExpr([NotNull] CoreParser.CoalExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>shiftExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShiftExpr([NotNull] CoreParser.ShiftExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>sizeofExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSizeofExpr([NotNull] CoreParser.SizeofExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullForgivingExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullForgivingExpr([NotNull] CoreParser.NullForgivingExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>eqExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExpr([NotNull] CoreParser.EqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpr([NotNull] CoreParser.AddExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeAsExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeAsExpr([NotNull] CoreParser.TypeAsExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>defaultExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultExpr([NotNull] CoreParser.DefaultExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>baseExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseExpr([NotNull] CoreParser.BaseExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleExpr([NotNull] CoreParser.TupleExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rangeExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRangeExpr([NotNull] CoreParser.RangeExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpr([NotNull] CoreParser.IdentifierExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="CoreParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] CoreParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.tupleArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleArguments([NotNull] CoreParser.TupleArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] CoreParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.argumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentExpression([NotNull] CoreParser.ArgumentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.initializerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializerExpression([NotNull] CoreParser.InitializerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.fieldInitializerExpressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldInitializerExpressions([NotNull] CoreParser.FieldInitializerExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.fieldInitializerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldInitializerExpression([NotNull] CoreParser.FieldInitializerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.collectionInitializerExpressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCollectionInitializerExpressions([NotNull] CoreParser.CollectionInitializerExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.dictionaryInitializerExpressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictionaryInitializerExpressions([NotNull] CoreParser.DictionaryInitializerExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.dictionaryInitializerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictionaryInitializerExpression([NotNull] CoreParser.DictionaryInitializerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.lambdaSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaSignature([NotNull] CoreParser.LambdaSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.implicitLambdaSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitLambdaSignature([NotNull] CoreParser.ImplicitLambdaSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.implicitParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitParameterList([NotNull] CoreParser.ImplicitParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.implicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitParameter([NotNull] CoreParser.ImplicitParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.explicitLambdaSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitLambdaSignature([NotNull] CoreParser.ExplicitLambdaSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.explicitParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitParameterList([NotNull] CoreParser.ExplicitParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.explicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitParameter([NotNull] CoreParser.ExplicitParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.lambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaBody([NotNull] CoreParser.LambdaBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.dotOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotOperator([NotNull] CoreParser.DotOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.indexerOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexerOperator([NotNull] CoreParser.IndexerOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.postfixOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixOperator([NotNull] CoreParser.PostfixOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] CoreParser.UnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.multiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeOperator([NotNull] CoreParser.MultiplicativeOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.additiveOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveOperator([NotNull] CoreParser.AdditiveOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.shiftOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShiftOperator([NotNull] CoreParser.ShiftOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.leftShiftOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftShiftOperator([NotNull] CoreParser.LeftShiftOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.rightShiftOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRightShiftOperator([NotNull] CoreParser.RightShiftOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.relationalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalOperator([NotNull] CoreParser.RelationalOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.equalityOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityOperator([NotNull] CoreParser.EqualityOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.compoundAssignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundAssignmentOperator([NotNull] CoreParser.CompoundAssignmentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnType([NotNull] CoreParser.ReturnTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primitiveTypeRef</c>
	/// labeled alternative in <see cref="CoreParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveTypeRef([NotNull] CoreParser.PrimitiveTypeRefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>genericTypeRef</c>
	/// labeled alternative in <see cref="CoreParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericTypeRef([NotNull] CoreParser.GenericTypeRefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>namedTypeRef</c>
	/// labeled alternative in <see cref="CoreParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedTypeRef([NotNull] CoreParser.NamedTypeRefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayTypeRef</c>
	/// labeled alternative in <see cref="CoreParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayTypeRef([NotNull] CoreParser.ArrayTypeRefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullableTypeRef</c>
	/// labeled alternative in <see cref="CoreParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullableTypeRef([NotNull] CoreParser.NullableTypeRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.namedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedType([NotNull] CoreParser.NamedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.genericTypeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericTypeArguments([NotNull] CoreParser.GenericTypeArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.genericTypeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericTypeArgument([NotNull] CoreParser.GenericTypeArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] CoreParser.PrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.voidType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidType([NotNull] CoreParser.VoidTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] CoreParser.NameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedName([NotNull] CoreParser.QualifiedNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifier([NotNull] CoreParser.QualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] CoreParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] CoreParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] CoreParser.NullLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] CoreParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] CoreParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.decimalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteral([NotNull] CoreParser.DecimalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.scientificLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScientificLiteral([NotNull] CoreParser.ScientificLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoreParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] CoreParser.StringLiteralContext context);
}
} // namespace MetaDslx.Languages.Core.Syntax.InternalSyntax

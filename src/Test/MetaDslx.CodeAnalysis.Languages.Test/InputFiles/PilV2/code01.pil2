//
//  ProRIS-E PIL példa 2020.03.A
//

TYPE tavolsag_t: int;

PARAM P_megcs: tavolsag_t;
PARAM P_OV_tav: tavolsag_t;

ENUM VU_tip_t [VU_tip_t_vonat, VU_tip_t_tolato];
ENUM J_tipus_t [J_tipus_t_fojelzo, J_tipus_t_egyesitett, J_tipus_t_tolatasjelzo];
ENUM V_ell_t [V_ell_t_jobb_vegallas, V_ell_t_jobb_elvesztett, V_ell_t_bal_vegallas,  V_ell_t_bal_elvesztett];
ENUM V_vezer_t [V_vezer_t_jobb, V_vezer_t_bal];
ENUM fogl_t [fogl_t_szabad, fogl_t_foglalt];
ENUM J_jelzes_t [J_jelzes_t_megallj, J_jelzes_t_szabad];
ENUM V_VU_lez_t [V_VU_lez_t_nincs, V_VU_lez_t_elorol, V_VU_lez_t_gyokfelol];

OBJECT Jelzo( F, A, S, C    );
	PARAM P_J_tipus: J_tipus_t;

	VAR BA_S_lez: bool;
	VAR BA_T_lez: bool;
	VAR BA_A_lez: bool;
	VAR BA_C_lez: bool;
	
	VAR BA_S_VU_tip: VU_tip_t;
	VAR BA_T_VU_tip: VU_tip_t;
	VAR BA_A_VU_tip: VU_tip_t;
	VAR BA_C_VU_tip: VU_tip_t;
	
	VAR BA_celkiz: bool;

	VAR AI_jelzes: J_jelzes_t;
EOBJECT

OBJECT Valto(    A, E, J, B );
	PARAM P_V_jobb_hossz: tavolsag_t;
	PARAM P_V_bal_hossz: tavolsag_t;
	PARAM P_V_belso_hossz: tavolsag_t;
	PARAM P_V_eleje_hossz: tavolsag_t;

	VAR BA_vezer: V_vezer_t;
	VAR BA_VU_lez: V_VU_lez_t;
	
	VAR AI_ell: V_ell_t;
	VAR AI_fogl: fogl_t;
EOBJECT


QUERY F_VU_lez( VU_tip : VU_tip_t );
  OBJECT Jelzo;
	FUNCTION VU_jelzo_megfelelo( J_tipus : J_tipus_t ) : bool  'Vágányút tipusa nem megfelelő';
	  FORK
	  CASE VU_tip = VU_tip_t_vonat    'Vonatmenet vágányút';
		RESULT := J_tipus in [J_tipus_t_fojelzo, J_tipus_t_egyesitett];
	  CASE VU_tip = VU_tip_t_tolato   'Tolatómenet vágányút';
		RESULT := J_tipus in [J_tipus_t_tolatasjelzo, J_tipus_t_egyesitett];
	  ELSE
	    RESULT := FALSE ;
	  EFORK
	EFUNCTION

    INPUT F   'Startponti jelző';                         // Kezelő parancs
      REQ S: VU_jelzo_megfelelo( P_J_tipus) && !BA_S_lez && !BA_A_lez && !BA_T_lez && AI_jelzes = J_jelzes_t_megallj;
	  BA_S_lez    := TRUE ;				
	  BA_S_VU_tip := VU_tip;
    INPUT C;                                // Szemből érkező kérés
      IF VU_jelzo_megfelelo( P_J_tipus )   'Célponti jelző'; 
        ACCEPT: !BA_C_lez && !BA_A_lez && !BA_T_lez && !BA_celkiz && AI_jelzes = J_jelzes_t_megallj;
        BA_C_lez  := TRUE ;
        BA_C_VU_tip := VU_tip;
      ELSE                                  'Szemből érintett más típusú jelző' 
        REQ S: !BA_C_lez && !BA_A_lez && !BA_T_lez && !BA_celkiz;
		BA_T_lez := TRUE ;
		BA_T_VU_tip := VU_tip;
      EIF
    INPUT S;                                 // Háttal érintett jelző
      REQ C: !BA_C_lez && !BA_S_lez && !BA_A_lez && !BA_T_lez; 
	  BA_A_lez := TRUE ;
	  BA_A_VU_tip := VU_tip;
  EOBJECT Jelzo;
  OBJECT Valto; // SB: Nem kéne valahol meghívni az oldalvédelmet? A "BA_VU_lez" változása ugyan triggereli, de nincs felhasználva az eredménye.
    INPUT E;                                // Váltó elejére érkezett kérés
      FORK BA_vezer
      CASE V_vezer_t_jobb;                  
        REQ J: AI_fogl = fogl_t_szabad && AI_ell in [V_ell_t_jobb_vegallas, V_ell_t_jobb_elvesztett ] && BA_VU_lez = V_VU_lez_t_nincs;
		BA_VU_lez := V_VU_lez_t_elorol ;
		REQ B.F_OV_keres(P_V_bal_hossz) ;
      CASE V_vezer_t_bal;              
        REQ B: AI_fogl = fogl_t_szabad && AI_ell in [V_ell_t_bal_vegallas,  V_ell_t_bal_elvesztett  ] && BA_VU_lez = V_VU_lez_t_nincs;
		BA_VU_lez := V_VU_lez_t_elorol ;
		REQ J.F_OV_keres(P_V_jobb_hossz);
      EFORK
    INPUT J;                                // Jobb szárra érkezett kérés
      REQ E: AI_fogl = fogl_t_szabad && BA_vezer = V_vezer_t_jobb && AI_ell in [V_ell_t_jobb_vegallas, V_ell_t_jobb_elvesztett ] && BA_VU_lez = V_VU_lez_t_nincs;
	  BA_VU_lez := V_VU_lez_t_gyokfelol ;
      REQ B.F_OV_keres(P_V_bal_hossz) ;
    INPUT B;                                // Bal szárra érkezett kérés
      REQ E: AI_fogl = fogl_t_szabad && BA_vezer = V_vezer_t_bal  && AI_ell in [V_ell_t_bal_vegallas,  V_ell_t_bal_elvesztett  ] && BA_VU_lez = V_VU_lez_t_nincs;
	  BA_VU_lez := V_VU_lez_t_gyokfelol ;
      REQ J.F_OV_keres(P_V_jobb_hossz);
  EOBJECT Valto;
EQUERY F_VU_lez;

QUERY F_OV_keres( OV_tav : tavolsag_t );
  OBJECT Valto;
    TRIGGER AI_fogl;
      IF AI_fogl = fogl_t_foglalt && BA_VU_lez = V_VU_lez_t_nincs;
        CANCEL E: 'A váltó foglalt.';
		IF BA_vezer = V_vezer_t_jobb;                    
			CANCEL J: 'A váltó foglalt.';
		ELSE 
			CANCEL B: 'A váltó foglalt.';
		EIF
      EIF
    INPUT J;                                // Jobb száron kérnek oldalvédelmet
      VAR tav: tavolsag_t := OV_tav + P_V_jobb_hossz + P_V_belso_hossz + P_V_eleje_hossz;
      IF tav > P_OV_tav;
        ACCEPT;
      ELSE IF BA_vezer = V_vezer_t_jobb;                    
        REQ E(tav);
      ELSE IF BA_vezer = V_vezer_t_bal;
        IF AI_ell = V_ell_t_bal_vegallas;
          ACCEPT;
        ELSE
          REQ E(tav): AI_fogl = fogl_t_szabad;
        EIF
      EIF
    INPUT B;                                // Bal száron kérnek oldalvédelmet 
      VAR tav: tavolsag_t := OV_tav + P_V_bal_hossz + P_V_belso_hossz + P_V_eleje_hossz;
      IF tav > P_OV_tav;
        ACCEPT;
      ELSE IF BA_vezer = V_vezer_t_bal;                    
        REQ E(tav);
      ELSE IF BA_vezer = V_vezer_t_jobb;
        IF AI_ell = V_ell_t_jobb_vegallas;
          ACCEPT;
        ELSE
          REQ E(tav): AI_fogl = fogl_t_szabad;
        EIF
      EIF
    INPUT E;    
      VAR jobb : tavolsag_t := OV_tav + P_V_belso_hossz + P_V_eleje_hossz;    
      VAR bal : tavolsag_t := OV_tav + P_V_belso_hossz + P_V_eleje_hossz;    
      jobb := jobb + P_V_jobb_hossz;
      bal  := bal  + P_V_bal_hossz;
      IF AI_fogl != fogl_t_szabad;
        REQ J: AI_fogl = fogl_t_szabad;  // SB: REQ B nem kell?      // begenerálja a visszautasítás okát 
      ELSE IF bal > P_OV_tav && jobb > P_OV_tav;
        ACCEPT ;
      ELSE  
        IF jobb <= P_OV_tav;  // SB: ide nem kell a bal ágnál szereplő AI_fogl = fogl_t_szabad feltétel?
          REQ J(jobb);
        EIF 
        IF bal <= P_OV_tav && AI_fogl = fogl_t_szabad; // SB: a jobb ágnál nem volt feltétel a szabad
          REQ B(bal);
        EIF
      EIF         
  EOBJECT Valto;
  OBJECT Jelzo;
    INPUT C;
      REQ S;
    INPUT S;
      IF OV_tav > P_megcs;
        ACCEPT: AI_jelzes = J_jelzes_t_megallj;
      ELSE        
        ACCEPT: AI_jelzes = J_jelzes_t_megallj && !BA_C_lez;
          BA_celkiz := TRUE ; 
      EIF
  EOBJECT Jelzo;
EQUERY F_OV_keres;










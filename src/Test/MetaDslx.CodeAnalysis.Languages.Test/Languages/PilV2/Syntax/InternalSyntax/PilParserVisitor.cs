//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Languages.Test\Languages\PilV2\Syntax\InternalSyntax\PilParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PilV2.Syntax.InternalSyntax {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PilParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IPilParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>mulDivExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivExpression([NotNull] PilParser.MulDivExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>plusMinusExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlusMinusExpression([NotNull] PilParser.PlusMinusExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>negateExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegateExpression([NotNull] PilParser.NegateExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>simpleArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleArithmeticExpression([NotNull] PilParser.SimpleArithmeticExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenArithmeticExpression([NotNull] PilParser.ParenArithmeticExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>terminalArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminalArithmeticExpression([NotNull] PilParser.TerminalArithmeticExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] PilParser.AndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpression([NotNull] PilParser.OrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] PilParser.NotExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>simpleConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleConditionalExpression([NotNull] PilParser.SimpleConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenConditionalExpression([NotNull] PilParser.ParenConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>elementOfConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementOfConditionalExpression([NotNull] PilParser.ElementOfConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>comparisonConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonConditionalExpression([NotNull] PilParser.ComparisonConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>terminalComparisonExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminalComparisonExpression([NotNull] PilParser.TerminalComparisonExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] PilParser.MainContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] PilParser.DeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.typeDefDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDefDeclaration([NotNull] PilParser.TypeDefDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.externalParameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalParameterDeclaration([NotNull] PilParser.ExternalParameterDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.enumDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumDeclaration([NotNull] PilParser.EnumDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.enumLiterals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumLiterals([NotNull] PilParser.EnumLiteralsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.enumLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumLiteral([NotNull] PilParser.EnumLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.objectDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectDeclaration([NotNull] PilParser.ObjectDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.objectHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectHeader([NotNull] PilParser.ObjectHeaderContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.ports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPorts([NotNull] PilParser.PortsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.port"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPort([NotNull] PilParser.PortContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.objectExternalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectExternalParameters([NotNull] PilParser.ObjectExternalParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.objectFields"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectFields([NotNull] PilParser.ObjectFieldsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.objectFunctions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectFunctions([NotNull] PilParser.ObjectFunctionsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] PilParser.FunctionDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.functionHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionHeader([NotNull] PilParser.FunctionHeaderContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.functionParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParams([NotNull] PilParser.FunctionParamsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam([NotNull] PilParser.ParamContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryDeclaration([NotNull] PilParser.QueryDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryHeader([NotNull] PilParser.QueryHeaderContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryRequestParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryRequestParams([NotNull] PilParser.QueryRequestParamsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryAcceptParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryAcceptParams([NotNull] PilParser.QueryAcceptParamsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryRefuseParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryRefuseParams([NotNull] PilParser.QueryRefuseParamsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryCancelParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryCancelParams([NotNull] PilParser.QueryCancelParamsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryExternalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryExternalParameters([NotNull] PilParser.QueryExternalParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryField([NotNull] PilParser.QueryFieldContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryFunction([NotNull] PilParser.QueryFunctionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryObject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryObject([NotNull] PilParser.QueryObjectContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryObjectField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryObjectField([NotNull] PilParser.QueryObjectFieldContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryObjectFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryObjectFunction([NotNull] PilParser.QueryObjectFunctionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.queryObjectEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryObjectEvent([NotNull] PilParser.QueryObjectEventContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] PilParser.InputContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.inputPortList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputPortList([NotNull] PilParser.InputPortListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.inputPort"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputPort([NotNull] PilParser.InputPortContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrigger([NotNull] PilParser.TriggerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.triggerVarList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTriggerVarList([NotNull] PilParser.TriggerVarListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.triggerVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTriggerVar([NotNull] PilParser.TriggerVarContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] PilParser.StatementsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] PilParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.forkStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForkStatement([NotNull] PilParser.ForkStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.caseBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseBranch([NotNull] PilParser.CaseBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.elseBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseBranch([NotNull] PilParser.ElseBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] PilParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.ifBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBranch([NotNull] PilParser.IfBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.elseIfBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfBranch([NotNull] PilParser.ElseIfBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.requestStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestStatement([NotNull] PilParser.RequestStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.callRequest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallRequest([NotNull] PilParser.CallRequestContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.requestArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestArguments([NotNull] PilParser.RequestArgumentsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.responseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResponseStatement([NotNull] PilParser.ResponseStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.cancelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCancelStatement([NotNull] PilParser.CancelStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.assertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssertion([NotNull] PilParser.AssertionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.responseStatementKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResponseStatementKind([NotNull] PilParser.ResponseStatementKindContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.cancelStatementKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCancelStatementKind([NotNull] PilParser.CancelStatementKindContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.forkRequestStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForkRequestStatement([NotNull] PilParser.ForkRequestStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.forkRequestVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForkRequestVariable([NotNull] PilParser.ForkRequestVariableContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.forkRequestIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForkRequestIdentifier([NotNull] PilParser.ForkRequestIdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.acceptBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAcceptBranch([NotNull] PilParser.AcceptBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.refuseBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRefuseBranch([NotNull] PilParser.RefuseBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.cancelBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCancelBranch([NotNull] PilParser.CancelBranchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] PilParser.VariableDeclarationStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] PilParser.VariableDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentStatement([NotNull] PilParser.AssignmentStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.leftSide"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftSide([NotNull] PilParser.LeftSideContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] PilParser.ExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] PilParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpression([NotNull] PilParser.ArithmeticExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.opMulDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpMulDiv([NotNull] PilParser.OpMulDivContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.opAddSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpAddSub([NotNull] PilParser.OpAddSubContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionTerminator([NotNull] PilParser.ArithmeticExpressionTerminatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.opMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpMinus([NotNull] PilParser.OpMinusContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] PilParser.ConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.andAlsoOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndAlsoOp([NotNull] PilParser.AndAlsoOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.orElseOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrElseOp([NotNull] PilParser.OrElseOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.opExcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpExcl([NotNull] PilParser.OpExclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpressionTerminator([NotNull] PilParser.ConditionalExpressionTerminatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.comparisonExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] PilParser.ComparisonExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] PilParser.ComparisonOperatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.elementOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementOfExpression([NotNull] PilParser.ElementOfExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.elementOfValueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementOfValueList([NotNull] PilParser.ElementOfValueListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.elementOfValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementOfValue([NotNull] PilParser.ElementOfValueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.terminalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminalExpression([NotNull] PilParser.TerminalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.functionCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] PilParser.FunctionCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.variableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableReference([NotNull] PilParser.VariableReferenceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.variableReferenceIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableReferenceIdentifier([NotNull] PilParser.VariableReferenceIdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComment([NotNull] PilParser.CommentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] PilParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReference([NotNull] PilParser.TypeReferenceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.builtInType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBuiltInType([NotNull] PilParser.BuiltInTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.qualifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifierList([NotNull] PilParser.QualifierListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifier([NotNull] PilParser.QualifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] PilParser.NameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] PilParser.IdentifierListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] PilParser.IdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PilParser.resultIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResultIdentifier([NotNull] PilParser.ResultIdentifierContext context);
}
} // namespace PilV2.Syntax.InternalSyntax

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Languages.Test\Languages\PilV2\Syntax\InternalSyntax\PilParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PilV2.Syntax.InternalSyntax {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPilParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PilParserBaseListener : IPilParserListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>mulDivExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDivExpression([NotNull] PilParser.MulDivExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mulDivExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDivExpression([NotNull] PilParser.MulDivExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>plusMinusExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlusMinusExpression([NotNull] PilParser.PlusMinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>plusMinusExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlusMinusExpression([NotNull] PilParser.PlusMinusExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>negateExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegateExpression([NotNull] PilParser.NegateExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>negateExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegateExpression([NotNull] PilParser.NegateExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>simpleArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleArithmeticExpression([NotNull] PilParser.SimpleArithmeticExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleArithmeticExpression([NotNull] PilParser.SimpleArithmeticExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenArithmeticExpression([NotNull] PilParser.ParenArithmeticExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenArithmeticExpression([NotNull] PilParser.ParenArithmeticExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>terminalArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalArithmeticExpression([NotNull] PilParser.TerminalArithmeticExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>terminalArithmeticExpression</c>
	/// labeled alternative in <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalArithmeticExpression([NotNull] PilParser.TerminalArithmeticExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] PilParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] PilParser.AndExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpression([NotNull] PilParser.OrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpression([NotNull] PilParser.OrExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] PilParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] PilParser.NotExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>simpleConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleConditionalExpression([NotNull] PilParser.SimpleConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleConditionalExpression([NotNull] PilParser.SimpleConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenConditionalExpression([NotNull] PilParser.ParenConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenConditionalExpression([NotNull] PilParser.ParenConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>elementOfConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementOfConditionalExpression([NotNull] PilParser.ElementOfConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>elementOfConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementOfConditionalExpression([NotNull] PilParser.ElementOfConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonConditionalExpression([NotNull] PilParser.ComparisonConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonConditionalExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonConditionalExpression([NotNull] PilParser.ComparisonConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>terminalComparisonExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalComparisonExpression([NotNull] PilParser.TerminalComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>terminalComparisonExpression</c>
	/// labeled alternative in <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalComparisonExpression([NotNull] PilParser.TerminalComparisonExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] PilParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] PilParser.MainContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] PilParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] PilParser.DeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.typeDefDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDefDeclaration([NotNull] PilParser.TypeDefDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.typeDefDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDefDeclaration([NotNull] PilParser.TypeDefDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.externalParameterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternalParameterDeclaration([NotNull] PilParser.ExternalParameterDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.externalParameterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternalParameterDeclaration([NotNull] PilParser.ExternalParameterDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclaration([NotNull] PilParser.EnumDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclaration([NotNull] PilParser.EnumDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.enumLiterals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumLiterals([NotNull] PilParser.EnumLiteralsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.enumLiterals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumLiterals([NotNull] PilParser.EnumLiteralsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.enumLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumLiteral([NotNull] PilParser.EnumLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.enumLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumLiteral([NotNull] PilParser.EnumLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.objectDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectDeclaration([NotNull] PilParser.ObjectDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.objectDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectDeclaration([NotNull] PilParser.ObjectDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.objectHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectHeader([NotNull] PilParser.ObjectHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.objectHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectHeader([NotNull] PilParser.ObjectHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.ports"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPorts([NotNull] PilParser.PortsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.ports"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPorts([NotNull] PilParser.PortsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.port"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPort([NotNull] PilParser.PortContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.port"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPort([NotNull] PilParser.PortContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.objectExternalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectExternalParameters([NotNull] PilParser.ObjectExternalParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.objectExternalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectExternalParameters([NotNull] PilParser.ObjectExternalParametersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.objectFields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFields([NotNull] PilParser.ObjectFieldsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.objectFields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFields([NotNull] PilParser.ObjectFieldsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.objectFunctions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFunctions([NotNull] PilParser.ObjectFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.objectFunctions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFunctions([NotNull] PilParser.ObjectFunctionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] PilParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] PilParser.FunctionDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.functionHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionHeader([NotNull] PilParser.FunctionHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.functionHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionHeader([NotNull] PilParser.FunctionHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.functionParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParams([NotNull] PilParser.FunctionParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.functionParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParams([NotNull] PilParser.FunctionParamsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] PilParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] PilParser.ParamContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryDeclaration([NotNull] PilParser.QueryDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryDeclaration([NotNull] PilParser.QueryDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryHeader([NotNull] PilParser.QueryHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryHeader([NotNull] PilParser.QueryHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryRequestParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryRequestParams([NotNull] PilParser.QueryRequestParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryRequestParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryRequestParams([NotNull] PilParser.QueryRequestParamsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryAcceptParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryAcceptParams([NotNull] PilParser.QueryAcceptParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryAcceptParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryAcceptParams([NotNull] PilParser.QueryAcceptParamsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryRefuseParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryRefuseParams([NotNull] PilParser.QueryRefuseParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryRefuseParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryRefuseParams([NotNull] PilParser.QueryRefuseParamsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryCancelParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryCancelParams([NotNull] PilParser.QueryCancelParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryCancelParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryCancelParams([NotNull] PilParser.QueryCancelParamsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryExternalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryExternalParameters([NotNull] PilParser.QueryExternalParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryExternalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryExternalParameters([NotNull] PilParser.QueryExternalParametersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryField([NotNull] PilParser.QueryFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryField([NotNull] PilParser.QueryFieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryFunction([NotNull] PilParser.QueryFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryFunction([NotNull] PilParser.QueryFunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryObject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryObject([NotNull] PilParser.QueryObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryObject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryObject([NotNull] PilParser.QueryObjectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryObjectField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryObjectField([NotNull] PilParser.QueryObjectFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryObjectField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryObjectField([NotNull] PilParser.QueryObjectFieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryObjectFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryObjectFunction([NotNull] PilParser.QueryObjectFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryObjectFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryObjectFunction([NotNull] PilParser.QueryObjectFunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.queryObjectEvent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryObjectEvent([NotNull] PilParser.QueryObjectEventContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.queryObjectEvent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryObjectEvent([NotNull] PilParser.QueryObjectEventContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] PilParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] PilParser.InputContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.inputPortList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputPortList([NotNull] PilParser.InputPortListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.inputPortList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputPortList([NotNull] PilParser.InputPortListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.inputPort"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputPort([NotNull] PilParser.InputPortContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.inputPort"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputPort([NotNull] PilParser.InputPortContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger([NotNull] PilParser.TriggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger([NotNull] PilParser.TriggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.triggerVarList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriggerVarList([NotNull] PilParser.TriggerVarListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.triggerVarList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriggerVarList([NotNull] PilParser.TriggerVarListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.triggerVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriggerVar([NotNull] PilParser.TriggerVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.triggerVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriggerVar([NotNull] PilParser.TriggerVarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] PilParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] PilParser.StatementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] PilParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] PilParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.forkStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForkStatement([NotNull] PilParser.ForkStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.forkStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForkStatement([NotNull] PilParser.ForkStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.caseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseBranch([NotNull] PilParser.CaseBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.caseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseBranch([NotNull] PilParser.CaseBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.elseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseBranch([NotNull] PilParser.ElseBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.elseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseBranch([NotNull] PilParser.ElseBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] PilParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] PilParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.ifBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBranch([NotNull] PilParser.IfBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.ifBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBranch([NotNull] PilParser.IfBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.elseIfBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfBranch([NotNull] PilParser.ElseIfBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.elseIfBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfBranch([NotNull] PilParser.ElseIfBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.requestStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRequestStatement([NotNull] PilParser.RequestStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.requestStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRequestStatement([NotNull] PilParser.RequestStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.callRequest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallRequest([NotNull] PilParser.CallRequestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.callRequest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallRequest([NotNull] PilParser.CallRequestContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.requestArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRequestArguments([NotNull] PilParser.RequestArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.requestArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRequestArguments([NotNull] PilParser.RequestArgumentsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.responseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResponseStatement([NotNull] PilParser.ResponseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.responseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResponseStatement([NotNull] PilParser.ResponseStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.cancelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCancelStatement([NotNull] PilParser.CancelStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.cancelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCancelStatement([NotNull] PilParser.CancelStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.assertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssertion([NotNull] PilParser.AssertionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.assertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssertion([NotNull] PilParser.AssertionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.responseStatementKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResponseStatementKind([NotNull] PilParser.ResponseStatementKindContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.responseStatementKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResponseStatementKind([NotNull] PilParser.ResponseStatementKindContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.cancelStatementKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCancelStatementKind([NotNull] PilParser.CancelStatementKindContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.cancelStatementKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCancelStatementKind([NotNull] PilParser.CancelStatementKindContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.forkRequestStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForkRequestStatement([NotNull] PilParser.ForkRequestStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.forkRequestStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForkRequestStatement([NotNull] PilParser.ForkRequestStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.forkRequestVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForkRequestVariable([NotNull] PilParser.ForkRequestVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.forkRequestVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForkRequestVariable([NotNull] PilParser.ForkRequestVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.forkRequestIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForkRequestIdentifier([NotNull] PilParser.ForkRequestIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.forkRequestIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForkRequestIdentifier([NotNull] PilParser.ForkRequestIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.acceptBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAcceptBranch([NotNull] PilParser.AcceptBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.acceptBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAcceptBranch([NotNull] PilParser.AcceptBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.refuseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRefuseBranch([NotNull] PilParser.RefuseBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.refuseBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRefuseBranch([NotNull] PilParser.RefuseBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.cancelBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCancelBranch([NotNull] PilParser.CancelBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.cancelBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCancelBranch([NotNull] PilParser.CancelBranchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationStatement([NotNull] PilParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationStatement([NotNull] PilParser.VariableDeclarationStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] PilParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] PilParser.VariableDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] PilParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] PilParser.AssignmentStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.leftSide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftSide([NotNull] PilParser.LeftSideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.leftSide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftSide([NotNull] PilParser.LeftSideContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] PilParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] PilParser.ExpressionListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] PilParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] PilParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExpression([NotNull] PilParser.ArithmeticExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.arithmeticExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExpression([NotNull] PilParser.ArithmeticExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.opMulDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpMulDiv([NotNull] PilParser.OpMulDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.opMulDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpMulDiv([NotNull] PilParser.OpMulDivContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.opAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpAddSub([NotNull] PilParser.OpAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.opAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpAddSub([NotNull] PilParser.OpAddSubContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExpressionTerminator([NotNull] PilParser.ArithmeticExpressionTerminatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.arithmeticExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExpressionTerminator([NotNull] PilParser.ArithmeticExpressionTerminatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.opMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpMinus([NotNull] PilParser.OpMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.opMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpMinus([NotNull] PilParser.OpMinusContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] PilParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] PilParser.ConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.andAlsoOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndAlsoOp([NotNull] PilParser.AndAlsoOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.andAlsoOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndAlsoOp([NotNull] PilParser.AndAlsoOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.orElseOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrElseOp([NotNull] PilParser.OrElseOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.orElseOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrElseOp([NotNull] PilParser.OrElseOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.opExcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpExcl([NotNull] PilParser.OpExclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.opExcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpExcl([NotNull] PilParser.OpExclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpressionTerminator([NotNull] PilParser.ConditionalExpressionTerminatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.conditionalExpressionTerminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpressionTerminator([NotNull] PilParser.ConditionalExpressionTerminatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.comparisonExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExpression([NotNull] PilParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.comparisonExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExpression([NotNull] PilParser.ComparisonExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] PilParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] PilParser.ComparisonOperatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.elementOfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementOfExpression([NotNull] PilParser.ElementOfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.elementOfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementOfExpression([NotNull] PilParser.ElementOfExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.elementOfValueList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementOfValueList([NotNull] PilParser.ElementOfValueListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.elementOfValueList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementOfValueList([NotNull] PilParser.ElementOfValueListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.elementOfValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementOfValue([NotNull] PilParser.ElementOfValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.elementOfValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementOfValue([NotNull] PilParser.ElementOfValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.terminalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalExpression([NotNull] PilParser.TerminalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.terminalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalExpression([NotNull] PilParser.TerminalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.functionCallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] PilParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.functionCallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] PilParser.FunctionCallExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.variableReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableReference([NotNull] PilParser.VariableReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.variableReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableReference([NotNull] PilParser.VariableReferenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.variableReferenceIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableReferenceIdentifier([NotNull] PilParser.VariableReferenceIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.variableReferenceIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableReferenceIdentifier([NotNull] PilParser.VariableReferenceIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] PilParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] PilParser.CommentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] PilParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] PilParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.typeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeReference([NotNull] PilParser.TypeReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.typeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeReference([NotNull] PilParser.TypeReferenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.builtInType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuiltInType([NotNull] PilParser.BuiltInTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.builtInType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuiltInType([NotNull] PilParser.BuiltInTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.qualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifierList([NotNull] PilParser.QualifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.qualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifierList([NotNull] PilParser.QualifierListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifier([NotNull] PilParser.QualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifier([NotNull] PilParser.QualifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] PilParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] PilParser.NameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] PilParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] PilParser.IdentifierListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] PilParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] PilParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PilParser.resultIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResultIdentifier([NotNull] PilParser.ResultIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PilParser.resultIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResultIdentifier([NotNull] PilParser.ResultIdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace PilV2.Syntax.InternalSyntax

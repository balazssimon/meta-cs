//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Antlr4.Test\Languages\TestLanguageAnnotations\Syntax\InternalSyntax\TestLanguageAnnotationsParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.CodeAnalysis.Antlr4Test.Languages.TestLanguageAnnotations.Syntax.InternalSyntax {

using MetaDslx.CodeAnalysis.Antlr4Test.Languages.TestLanguageAnnotations.Model;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITestLanguageAnnotationsParserVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class TestLanguageAnnotationsParserBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, ITestLanguageAnnotationsParserVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.main"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMain([NotNull] TestLanguageAnnotationsParser.MainContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest([NotNull] TestLanguageAnnotationsParser.TestContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest01([NotNull] TestLanguageAnnotationsParser.Test01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration01([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody01([NotNull] TestLanguageAnnotationsParser.NamespaceBody01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration01([NotNull] TestLanguageAnnotationsParser.Declaration01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex01([NotNull] TestLanguageAnnotationsParser.Vertex01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow01"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow01([NotNull] TestLanguageAnnotationsParser.Arrow01Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest02([NotNull] TestLanguageAnnotationsParser.Test02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration02([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody02([NotNull] TestLanguageAnnotationsParser.NamespaceBody02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration02([NotNull] TestLanguageAnnotationsParser.Declaration02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex02([NotNull] TestLanguageAnnotationsParser.Vertex02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow02([NotNull] TestLanguageAnnotationsParser.Arrow02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.source02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSource02([NotNull] TestLanguageAnnotationsParser.Source02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.target02"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTarget02([NotNull] TestLanguageAnnotationsParser.Target02Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest03([NotNull] TestLanguageAnnotationsParser.Test03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration03([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody03([NotNull] TestLanguageAnnotationsParser.NamespaceBody03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration03([NotNull] TestLanguageAnnotationsParser.Declaration03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex03([NotNull] TestLanguageAnnotationsParser.Vertex03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow03([NotNull] TestLanguageAnnotationsParser.Arrow03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.source03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSource03([NotNull] TestLanguageAnnotationsParser.Source03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.target03"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTarget03([NotNull] TestLanguageAnnotationsParser.Target03Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest04([NotNull] TestLanguageAnnotationsParser.Test04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration04([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody04([NotNull] TestLanguageAnnotationsParser.NamespaceBody04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration04([NotNull] TestLanguageAnnotationsParser.Declaration04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex04([NotNull] TestLanguageAnnotationsParser.Vertex04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow04"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow04([NotNull] TestLanguageAnnotationsParser.Arrow04Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest05([NotNull] TestLanguageAnnotationsParser.Test05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration05([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody05([NotNull] TestLanguageAnnotationsParser.NamespaceBody05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration05([NotNull] TestLanguageAnnotationsParser.Declaration05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex05([NotNull] TestLanguageAnnotationsParser.Vertex05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow05"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow05([NotNull] TestLanguageAnnotationsParser.Arrow05Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest06([NotNull] TestLanguageAnnotationsParser.Test06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration06([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody06([NotNull] TestLanguageAnnotationsParser.NamespaceBody06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration06([NotNull] TestLanguageAnnotationsParser.Declaration06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex06([NotNull] TestLanguageAnnotationsParser.Vertex06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow06"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow06([NotNull] TestLanguageAnnotationsParser.Arrow06Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest07([NotNull] TestLanguageAnnotationsParser.Test07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration07([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody07([NotNull] TestLanguageAnnotationsParser.NamespaceBody07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration07([NotNull] TestLanguageAnnotationsParser.Declaration07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex07([NotNull] TestLanguageAnnotationsParser.Vertex07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow07([NotNull] TestLanguageAnnotationsParser.Arrow07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.source07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSource07([NotNull] TestLanguageAnnotationsParser.Source07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.target07"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTarget07([NotNull] TestLanguageAnnotationsParser.Target07Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest08([NotNull] TestLanguageAnnotationsParser.Test08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration08([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody08([NotNull] TestLanguageAnnotationsParser.NamespaceBody08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration08([NotNull] TestLanguageAnnotationsParser.Declaration08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex08([NotNull] TestLanguageAnnotationsParser.Vertex08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow08([NotNull] TestLanguageAnnotationsParser.Arrow08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.source08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSource08([NotNull] TestLanguageAnnotationsParser.Source08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.target08"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTarget08([NotNull] TestLanguageAnnotationsParser.Target08Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest09([NotNull] TestLanguageAnnotationsParser.Test09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration09([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody09([NotNull] TestLanguageAnnotationsParser.NamespaceBody09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration09([NotNull] TestLanguageAnnotationsParser.Declaration09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex09([NotNull] TestLanguageAnnotationsParser.Vertex09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow09"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow09([NotNull] TestLanguageAnnotationsParser.Arrow09Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest10([NotNull] TestLanguageAnnotationsParser.Test10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration10([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody10([NotNull] TestLanguageAnnotationsParser.NamespaceBody10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration10([NotNull] TestLanguageAnnotationsParser.Declaration10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex10([NotNull] TestLanguageAnnotationsParser.Vertex10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow10"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow10([NotNull] TestLanguageAnnotationsParser.Arrow10Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.test11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTest11([NotNull] TestLanguageAnnotationsParser.Test11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceDeclaration11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceDeclaration11([NotNull] TestLanguageAnnotationsParser.NamespaceDeclaration11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.namespaceBody11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamespaceBody11([NotNull] TestLanguageAnnotationsParser.NamespaceBody11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.declaration11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDeclaration11([NotNull] TestLanguageAnnotationsParser.Declaration11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.vertex11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVertex11([NotNull] TestLanguageAnnotationsParser.Vertex11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.arrow11"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrow11([NotNull] TestLanguageAnnotationsParser.Arrow11Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.name"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitName([NotNull] TestLanguageAnnotationsParser.NameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.qualifiedName"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitQualifiedName([NotNull] TestLanguageAnnotationsParser.QualifiedNameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.qualifier"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitQualifier([NotNull] TestLanguageAnnotationsParser.QualifierContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.identifier"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitIdentifier([NotNull] TestLanguageAnnotationsParser.IdentifierContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.literal"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLiteral([NotNull] TestLanguageAnnotationsParser.LiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.nullLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNullLiteral([NotNull] TestLanguageAnnotationsParser.NullLiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.booleanLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitBooleanLiteral([NotNull] TestLanguageAnnotationsParser.BooleanLiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.integerLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitIntegerLiteral([NotNull] TestLanguageAnnotationsParser.IntegerLiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.decimalLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDecimalLiteral([NotNull] TestLanguageAnnotationsParser.DecimalLiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.scientificLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitScientificLiteral([NotNull] TestLanguageAnnotationsParser.ScientificLiteralContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLanguageAnnotationsParser.stringLiteral"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitStringLiteral([NotNull] TestLanguageAnnotationsParser.StringLiteralContext context) { return VisitChildren(context); }
}
} // namespace MetaDslx.CodeAnalysis.Antlr4Test.Languages.TestLanguageAnnotations.Syntax.InternalSyntax

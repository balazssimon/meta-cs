//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Antlr4.Test\Languages\TestLexerMode\Syntax\InternalSyntax\TestLexerModeParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.CodeAnalysis.Antlr4Test.Syntax.InternalSyntax {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TestLexerModeParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ITestLexerModeParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingNamespaceDeclaration([NotNull] TestLexerModeParser.UsingNamespaceDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingGeneratorDeclaration([NotNull] TestLexerModeParser.UsingGeneratorDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigPropertyDeclaration([NotNull] TestLexerModeParser.ConfigPropertyDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigPropertyGroupDeclaration([NotNull] TestLexerModeParser.ConfigPropertyGroupDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainTypeofExpression([NotNull] TestLexerModeParser.LoopChainTypeofExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainIdentifierExpression([NotNull] TestLexerModeParser.LoopChainIdentifierExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainMemberAccessExpression([NotNull] TestLexerModeParser.LoopChainMemberAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainMethodCallExpression([NotNull] TestLexerModeParser.LoopChainMethodCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ExplicitAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ImplicitAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleParamAnonymousFunctionSignature([NotNull] TestLexerModeParser.SingleParamAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisExpression([NotNull] TestLexerModeParser.ThisExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] TestLexerModeParser.LiteralExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofVoidExpression([NotNull] TestLexerModeParser.TypeofVoidExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofUnboundTypeExpression([NotNull] TestLexerModeParser.TypeofUnboundTypeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofTypeExpression([NotNull] TestLexerModeParser.TypeofTypeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultValueExpression([NotNull] TestLexerModeParser.DefaultValueExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewObjectOrCollectionWithConstructorExpression([NotNull] TestLexerModeParser.NewObjectOrCollectionWithConstructorExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] TestLexerModeParser.IdentifierExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasLoopExpression([NotNull] TestLexerModeParser.HasLoopExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] TestLexerModeParser.ParenthesizedExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementAccessExpression([NotNull] TestLexerModeParser.ElementAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] TestLexerModeParser.FunctionCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedTypeMemberAccessExpression([NotNull] TestLexerModeParser.PredefinedTypeMemberAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessExpression([NotNull] TestLexerModeParser.MemberAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypecastExpression([NotNull] TestLexerModeParser.TypecastExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] TestLexerModeParser.UnaryExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostExpression([NotNull] TestLexerModeParser.PostExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpression([NotNull] TestLexerModeParser.MultiplicationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditionExpression([NotNull] TestLexerModeParser.AdditionExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] TestLexerModeParser.RelationalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypecheckExpression([NotNull] TestLexerModeParser.TypecheckExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] TestLexerModeParser.EqualityExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseAndExpression([NotNull] TestLexerModeParser.BitwiseAndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseXorExpression([NotNull] TestLexerModeParser.BitwiseXorExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseOrExpression([NotNull] TestLexerModeParser.BitwiseOrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] TestLexerModeParser.LogicalAndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalXorExpression([NotNull] TestLexerModeParser.LogicalXorExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] TestLexerModeParser.LogicalOrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] TestLexerModeParser.ConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] TestLexerModeParser.AssignmentExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaExpression([NotNull] TestLexerModeParser.LambdaExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] TestLexerModeParser.MainContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] TestLexerModeParser.NamespaceDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.generatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorDeclaration([NotNull] TestLexerModeParser.GeneratorDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingDeclaration([NotNull] TestLexerModeParser.UsingDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.configDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigDeclaration([NotNull] TestLexerModeParser.ConfigDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfigProperty([NotNull] TestLexerModeParser.ConfigPropertyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclaration([NotNull] TestLexerModeParser.MethodDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.externFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternFunctionDeclaration([NotNull] TestLexerModeParser.ExternFunctionDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] TestLexerModeParser.FunctionDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionSignature([NotNull] TestLexerModeParser.FunctionSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] TestLexerModeParser.ParamListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] TestLexerModeParser.ParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] TestLexerModeParser.BodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] TestLexerModeParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.singleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleStatement([NotNull] TestLexerModeParser.SingleStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.singleStatementSemicolon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleStatementSemicolon([NotNull] TestLexerModeParser.SingleStatementSemicolonContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] TestLexerModeParser.VariableDeclarationStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationExpression([NotNull] TestLexerModeParser.VariableDeclarationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationItem([NotNull] TestLexerModeParser.VariableDeclarationItemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.voidStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidStatement([NotNull] TestLexerModeParser.VoidStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] TestLexerModeParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] TestLexerModeParser.ExpressionStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] TestLexerModeParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatementBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfStatementBody([NotNull] TestLexerModeParser.ElseIfStatementBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElseBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementElseBody([NotNull] TestLexerModeParser.IfStatementElseBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.ifStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementBegin([NotNull] TestLexerModeParser.IfStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfStatement([NotNull] TestLexerModeParser.ElseIfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementElse([NotNull] TestLexerModeParser.IfStatementElseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.ifStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatementEnd([NotNull] TestLexerModeParser.IfStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] TestLexerModeParser.ForStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.forStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatementBegin([NotNull] TestLexerModeParser.ForStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.forStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatementEnd([NotNull] TestLexerModeParser.ForStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.forInitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInitStatement([NotNull] TestLexerModeParser.ForInitStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] TestLexerModeParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.whileStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatementBegin([NotNull] TestLexerModeParser.WhileStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.whileStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatementEnd([NotNull] TestLexerModeParser.WhileStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.whileRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileRunExpression([NotNull] TestLexerModeParser.WhileRunExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStatement([NotNull] TestLexerModeParser.RepeatStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStatementBegin([NotNull] TestLexerModeParser.RepeatStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStatementEnd([NotNull] TestLexerModeParser.RepeatStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.repeatRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatRunExpression([NotNull] TestLexerModeParser.RepeatRunExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] TestLexerModeParser.LoopStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatementBegin([NotNull] TestLexerModeParser.LoopStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatementEnd([NotNull] TestLexerModeParser.LoopStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChain([NotNull] TestLexerModeParser.LoopChainContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopChainItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainItem([NotNull] TestLexerModeParser.LoopChainItemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopChainExpression([NotNull] TestLexerModeParser.LoopChainExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopWhereExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopWhereExpression([NotNull] TestLexerModeParser.LoopWhereExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.loopRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopRunExpression([NotNull] TestLexerModeParser.LoopRunExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.separatorStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSeparatorStatement([NotNull] TestLexerModeParser.SeparatorStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] TestLexerModeParser.SwitchStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatementBegin([NotNull] TestLexerModeParser.SwitchStatementBeginContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatementEnd([NotNull] TestLexerModeParser.SwitchStatementEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchBranchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBranchStatement([NotNull] TestLexerModeParser.SwitchBranchStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchBranchHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBranchHeadStatement([NotNull] TestLexerModeParser.SwitchBranchHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseOrTypeIsHeadStatements([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseOrTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchCaseHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseHeadStatement([NotNull] TestLexerModeParser.SwitchCaseHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeIsHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchTypeAsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchTypeAsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeAsHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchDefaultStatement([NotNull] TestLexerModeParser.SwitchDefaultStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchDefaultHeadStatement([NotNull] TestLexerModeParser.SwitchDefaultHeadStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateDeclaration([NotNull] TestLexerModeParser.TemplateDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateSignature([NotNull] TestLexerModeParser.TemplateSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateBody([NotNull] TestLexerModeParser.TemplateBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateContentLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateContentLine([NotNull] TestLexerModeParser.TemplateContentLineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateContent([NotNull] TestLexerModeParser.TemplateContentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateOutputx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateOutputx([NotNull] TestLexerModeParser.TemplateOutputxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateLineEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateLineEnd([NotNull] TestLexerModeParser.TemplateLineEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateStatementStartEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateStatementStartEnd([NotNull] TestLexerModeParser.TemplateStatementStartEndContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.templateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateStatement([NotNull] TestLexerModeParser.TemplateStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArgumentList([NotNull] TestLexerModeParser.TypeArgumentListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.predefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedType([NotNull] TestLexerModeParser.PredefinedTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.typeReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReferenceList([NotNull] TestLexerModeParser.TypeReferenceListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReference([NotNull] TestLexerModeParser.TypeReferenceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] TestLexerModeParser.ArrayTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.arrayItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayItemType([NotNull] TestLexerModeParser.ArrayItemTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.nullableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullableType([NotNull] TestLexerModeParser.NullableTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.nullableItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullableItemType([NotNull] TestLexerModeParser.NullableItemTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericType([NotNull] TestLexerModeParser.GenericTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleType([NotNull] TestLexerModeParser.SimpleTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.voidType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidType([NotNull] TestLexerModeParser.VoidTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnType([NotNull] TestLexerModeParser.ReturnTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] TestLexerModeParser.ExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.variableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableReference([NotNull] TestLexerModeParser.VariableReferenceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRankSpecifiers([NotNull] TestLexerModeParser.RankSpecifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRankSpecifier([NotNull] TestLexerModeParser.RankSpecifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.unboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnboundTypeName([NotNull] TestLexerModeParser.UnboundTypeNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericDimensionItem([NotNull] TestLexerModeParser.GenericDimensionItemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericDimensionSpecifier([NotNull] TestLexerModeParser.GenericDimensionSpecifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymousFunctionSignature([NotNull] TestLexerModeParser.AnonymousFunctionSignatureContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.explicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitParameter([NotNull] TestLexerModeParser.ExplicitParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.implicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicitParameter([NotNull] TestLexerModeParser.ImplicitParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] TestLexerModeParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedName([NotNull] TestLexerModeParser.QualifiedNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] TestLexerModeParser.IdentifierListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] TestLexerModeParser.IdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] TestLexerModeParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] TestLexerModeParser.NullLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] TestLexerModeParser.BooleanLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberLiteral([NotNull] TestLexerModeParser.NumberLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.integerLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteralx([NotNull] TestLexerModeParser.IntegerLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.decimalLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteralx([NotNull] TestLexerModeParser.DecimalLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.scientificLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScientificLiteralx([NotNull] TestLexerModeParser.ScientificLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.dateOrTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateOrTimeLiteral([NotNull] TestLexerModeParser.DateOrTimeLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.dateTimeOffsetLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeOffsetLiteralx([NotNull] TestLexerModeParser.DateTimeOffsetLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.dateTimeLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeLiteralx([NotNull] TestLexerModeParser.DateTimeLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.dateLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteralx([NotNull] TestLexerModeParser.DateLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.timeLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeLiteralx([NotNull] TestLexerModeParser.TimeLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.charLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteralx([NotNull] TestLexerModeParser.CharLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.stringLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteralx([NotNull] TestLexerModeParser.StringLiteralxContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TestLexerModeParser.guidLiteralx"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGuidLiteralx([NotNull] TestLexerModeParser.GuidLiteralxContext context);
}
} // namespace MetaDslx.CodeAnalysis.Antlr4Test.Syntax.InternalSyntax

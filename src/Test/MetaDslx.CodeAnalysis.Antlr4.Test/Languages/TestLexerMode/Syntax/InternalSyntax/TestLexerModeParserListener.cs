//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Antlr4.Test\Languages\TestLexerMode\Syntax\InternalSyntax\TestLexerModeParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.CodeAnalysis.Antlr4Test.Languages.TestLexerMode.Syntax.InternalSyntax {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TestLexerModeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ITestLexerModeParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingNamespaceDeclaration([NotNull] TestLexerModeParser.UsingNamespaceDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingNamespaceDeclaration([NotNull] TestLexerModeParser.UsingNamespaceDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingGeneratorDeclaration([NotNull] TestLexerModeParser.UsingGeneratorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingGeneratorDeclaration([NotNull] TestLexerModeParser.UsingGeneratorDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfigPropertyDeclaration([NotNull] TestLexerModeParser.ConfigPropertyDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfigPropertyDeclaration([NotNull] TestLexerModeParser.ConfigPropertyDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfigPropertyGroupDeclaration([NotNull] TestLexerModeParser.ConfigPropertyGroupDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfigPropertyGroupDeclaration([NotNull] TestLexerModeParser.ConfigPropertyGroupDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainTypeofExpression([NotNull] TestLexerModeParser.LoopChainTypeofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainTypeofExpression([NotNull] TestLexerModeParser.LoopChainTypeofExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainIdentifierExpression([NotNull] TestLexerModeParser.LoopChainIdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainIdentifierExpression([NotNull] TestLexerModeParser.LoopChainIdentifierExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainMemberAccessExpression([NotNull] TestLexerModeParser.LoopChainMemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainMemberAccessExpression([NotNull] TestLexerModeParser.LoopChainMemberAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainMethodCallExpression([NotNull] TestLexerModeParser.LoopChainMethodCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainMethodCallExpression([NotNull] TestLexerModeParser.LoopChainMethodCallExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ExplicitAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ExplicitAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ImplicitAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ImplicitAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleParamAnonymousFunctionSignature([NotNull] TestLexerModeParser.SingleParamAnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleParamAnonymousFunctionSignature([NotNull] TestLexerModeParser.SingleParamAnonymousFunctionSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThisExpression([NotNull] TestLexerModeParser.ThisExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThisExpression([NotNull] TestLexerModeParser.ThisExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpression([NotNull] TestLexerModeParser.LiteralExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpression([NotNull] TestLexerModeParser.LiteralExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofVoidExpression([NotNull] TestLexerModeParser.TypeofVoidExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofVoidExpression([NotNull] TestLexerModeParser.TypeofVoidExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofUnboundTypeExpression([NotNull] TestLexerModeParser.TypeofUnboundTypeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofUnboundTypeExpression([NotNull] TestLexerModeParser.TypeofUnboundTypeExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofTypeExpression([NotNull] TestLexerModeParser.TypeofTypeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofTypeExpression([NotNull] TestLexerModeParser.TypeofTypeExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultValueExpression([NotNull] TestLexerModeParser.DefaultValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultValueExpression([NotNull] TestLexerModeParser.DefaultValueExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewObjectOrCollectionWithConstructorExpression([NotNull] TestLexerModeParser.NewObjectOrCollectionWithConstructorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewObjectOrCollectionWithConstructorExpression([NotNull] TestLexerModeParser.NewObjectOrCollectionWithConstructorExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] TestLexerModeParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] TestLexerModeParser.IdentifierExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHasLoopExpression([NotNull] TestLexerModeParser.HasLoopExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHasLoopExpression([NotNull] TestLexerModeParser.HasLoopExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpression([NotNull] TestLexerModeParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpression([NotNull] TestLexerModeParser.ParenthesizedExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementAccessExpression([NotNull] TestLexerModeParser.ElementAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementAccessExpression([NotNull] TestLexerModeParser.ElementAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallExpression([NotNull] TestLexerModeParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallExpression([NotNull] TestLexerModeParser.FunctionCallExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefinedTypeMemberAccessExpression([NotNull] TestLexerModeParser.PredefinedTypeMemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefinedTypeMemberAccessExpression([NotNull] TestLexerModeParser.PredefinedTypeMemberAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccessExpression([NotNull] TestLexerModeParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccessExpression([NotNull] TestLexerModeParser.MemberAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypecastExpression([NotNull] TestLexerModeParser.TypecastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypecastExpression([NotNull] TestLexerModeParser.TypecastExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] TestLexerModeParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] TestLexerModeParser.UnaryExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostExpression([NotNull] TestLexerModeParser.PostExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostExpression([NotNull] TestLexerModeParser.PostExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationExpression([NotNull] TestLexerModeParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationExpression([NotNull] TestLexerModeParser.MultiplicationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionExpression([NotNull] TestLexerModeParser.AdditionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionExpression([NotNull] TestLexerModeParser.AdditionExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] TestLexerModeParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] TestLexerModeParser.RelationalExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypecheckExpression([NotNull] TestLexerModeParser.TypecheckExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypecheckExpression([NotNull] TestLexerModeParser.TypecheckExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] TestLexerModeParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] TestLexerModeParser.EqualityExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseAndExpression([NotNull] TestLexerModeParser.BitwiseAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseAndExpression([NotNull] TestLexerModeParser.BitwiseAndExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseXorExpression([NotNull] TestLexerModeParser.BitwiseXorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseXorExpression([NotNull] TestLexerModeParser.BitwiseXorExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseOrExpression([NotNull] TestLexerModeParser.BitwiseOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseOrExpression([NotNull] TestLexerModeParser.BitwiseOrExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] TestLexerModeParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] TestLexerModeParser.LogicalAndExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalXorExpression([NotNull] TestLexerModeParser.LogicalXorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalXorExpression([NotNull] TestLexerModeParser.LogicalXorExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] TestLexerModeParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] TestLexerModeParser.LogicalOrExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalExpression([NotNull] TestLexerModeParser.ConditionalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalExpression([NotNull] TestLexerModeParser.ConditionalExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] TestLexerModeParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] TestLexerModeParser.AssignmentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpression([NotNull] TestLexerModeParser.LambdaExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpression([NotNull] TestLexerModeParser.LambdaExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain([NotNull] TestLexerModeParser.MainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain([NotNull] TestLexerModeParser.MainContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceDeclaration([NotNull] TestLexerModeParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceDeclaration([NotNull] TestLexerModeParser.NamespaceDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.generatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneratorDeclaration([NotNull] TestLexerModeParser.GeneratorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.generatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneratorDeclaration([NotNull] TestLexerModeParser.GeneratorDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingDeclaration([NotNull] TestLexerModeParser.UsingDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingDeclaration([NotNull] TestLexerModeParser.UsingDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.configDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfigDeclaration([NotNull] TestLexerModeParser.ConfigDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.configDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfigDeclaration([NotNull] TestLexerModeParser.ConfigDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfigProperty([NotNull] TestLexerModeParser.ConfigPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.configProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfigProperty([NotNull] TestLexerModeParser.ConfigPropertyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] TestLexerModeParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] TestLexerModeParser.MethodDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.externFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternFunctionDeclaration([NotNull] TestLexerModeParser.ExternFunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.externFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternFunctionDeclaration([NotNull] TestLexerModeParser.ExternFunctionDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] TestLexerModeParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] TestLexerModeParser.FunctionDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionSignature([NotNull] TestLexerModeParser.FunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionSignature([NotNull] TestLexerModeParser.FunctionSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] TestLexerModeParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] TestLexerModeParser.ParamListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] TestLexerModeParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] TestLexerModeParser.ParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] TestLexerModeParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] TestLexerModeParser.BodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] TestLexerModeParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] TestLexerModeParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.singleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleStatement([NotNull] TestLexerModeParser.SingleStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.singleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleStatement([NotNull] TestLexerModeParser.SingleStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.singleStatementSemicolon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleStatementSemicolon([NotNull] TestLexerModeParser.SingleStatementSemicolonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.singleStatementSemicolon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleStatementSemicolon([NotNull] TestLexerModeParser.SingleStatementSemicolonContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationStatement([NotNull] TestLexerModeParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationStatement([NotNull] TestLexerModeParser.VariableDeclarationStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationExpression([NotNull] TestLexerModeParser.VariableDeclarationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationExpression([NotNull] TestLexerModeParser.VariableDeclarationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationItem([NotNull] TestLexerModeParser.VariableDeclarationItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationItem([NotNull] TestLexerModeParser.VariableDeclarationItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.voidStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoidStatement([NotNull] TestLexerModeParser.VoidStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.voidStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoidStatement([NotNull] TestLexerModeParser.VoidStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] TestLexerModeParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] TestLexerModeParser.ReturnStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] TestLexerModeParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] TestLexerModeParser.ExpressionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] TestLexerModeParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] TestLexerModeParser.IfStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.elseIfStatementBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfStatementBody([NotNull] TestLexerModeParser.ElseIfStatementBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatementBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfStatementBody([NotNull] TestLexerModeParser.ElseIfStatementBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementElseBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatementElseBody([NotNull] TestLexerModeParser.IfStatementElseBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElseBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatementElseBody([NotNull] TestLexerModeParser.IfStatementElseBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatementBegin([NotNull] TestLexerModeParser.IfStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatementBegin([NotNull] TestLexerModeParser.IfStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfStatement([NotNull] TestLexerModeParser.ElseIfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfStatement([NotNull] TestLexerModeParser.ElseIfStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatementElse([NotNull] TestLexerModeParser.IfStatementElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatementElse([NotNull] TestLexerModeParser.IfStatementElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatementEnd([NotNull] TestLexerModeParser.IfStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatementEnd([NotNull] TestLexerModeParser.IfStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] TestLexerModeParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] TestLexerModeParser.ForStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatementBegin([NotNull] TestLexerModeParser.ForStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatementBegin([NotNull] TestLexerModeParser.ForStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatementEnd([NotNull] TestLexerModeParser.ForStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatementEnd([NotNull] TestLexerModeParser.ForStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forInitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInitStatement([NotNull] TestLexerModeParser.ForInitStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forInitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInitStatement([NotNull] TestLexerModeParser.ForInitStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] TestLexerModeParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] TestLexerModeParser.WhileStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatementBegin([NotNull] TestLexerModeParser.WhileStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatementBegin([NotNull] TestLexerModeParser.WhileStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatementEnd([NotNull] TestLexerModeParser.WhileStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatementEnd([NotNull] TestLexerModeParser.WhileStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileRunExpression([NotNull] TestLexerModeParser.WhileRunExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileRunExpression([NotNull] TestLexerModeParser.WhileRunExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatStatement([NotNull] TestLexerModeParser.RepeatStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatStatement([NotNull] TestLexerModeParser.RepeatStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatStatementBegin([NotNull] TestLexerModeParser.RepeatStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatStatementBegin([NotNull] TestLexerModeParser.RepeatStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatStatementEnd([NotNull] TestLexerModeParser.RepeatStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatStatementEnd([NotNull] TestLexerModeParser.RepeatStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatRunExpression([NotNull] TestLexerModeParser.RepeatRunExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatRunExpression([NotNull] TestLexerModeParser.RepeatRunExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] TestLexerModeParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] TestLexerModeParser.LoopStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatementBegin([NotNull] TestLexerModeParser.LoopStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatementBegin([NotNull] TestLexerModeParser.LoopStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatementEnd([NotNull] TestLexerModeParser.LoopStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatementEnd([NotNull] TestLexerModeParser.LoopStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChain([NotNull] TestLexerModeParser.LoopChainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChain([NotNull] TestLexerModeParser.LoopChainContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChainItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainItem([NotNull] TestLexerModeParser.LoopChainItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChainItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainItem([NotNull] TestLexerModeParser.LoopChainItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopChainExpression([NotNull] TestLexerModeParser.LoopChainExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopChainExpression([NotNull] TestLexerModeParser.LoopChainExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopWhereExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopWhereExpression([NotNull] TestLexerModeParser.LoopWhereExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopWhereExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopWhereExpression([NotNull] TestLexerModeParser.LoopWhereExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopRunExpression([NotNull] TestLexerModeParser.LoopRunExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopRunExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopRunExpression([NotNull] TestLexerModeParser.LoopRunExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.separatorStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeparatorStatement([NotNull] TestLexerModeParser.SeparatorStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.separatorStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeparatorStatement([NotNull] TestLexerModeParser.SeparatorStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] TestLexerModeParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] TestLexerModeParser.SwitchStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatementBegin([NotNull] TestLexerModeParser.SwitchStatementBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatementBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatementBegin([NotNull] TestLexerModeParser.SwitchStatementBeginContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatementEnd([NotNull] TestLexerModeParser.SwitchStatementEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatementEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatementEnd([NotNull] TestLexerModeParser.SwitchStatementEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchBranchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchBranchStatement([NotNull] TestLexerModeParser.SwitchBranchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchBranchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchBranchStatement([NotNull] TestLexerModeParser.SwitchBranchStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchBranchHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchBranchHeadStatement([NotNull] TestLexerModeParser.SwitchBranchHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchBranchHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchBranchHeadStatement([NotNull] TestLexerModeParser.SwitchBranchHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseOrTypeIsHeadStatements([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseOrTypeIsHeadStatements([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseOrTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseOrTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseHeadStatement([NotNull] TestLexerModeParser.SwitchCaseHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseHeadStatement([NotNull] TestLexerModeParser.SwitchCaseHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeIsHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchTypeIsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeIsHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchTypeAsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchTypeAsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeAsHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchTypeAsHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchTypeAsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeAsHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchDefaultStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchDefaultStatement([NotNull] TestLexerModeParser.SwitchDefaultStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchDefaultStatement([NotNull] TestLexerModeParser.SwitchDefaultStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchDefaultHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchDefaultHeadStatement([NotNull] TestLexerModeParser.SwitchDefaultHeadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultHeadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchDefaultHeadStatement([NotNull] TestLexerModeParser.SwitchDefaultHeadStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateDeclaration([NotNull] TestLexerModeParser.TemplateDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateDeclaration([NotNull] TestLexerModeParser.TemplateDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateSignature([NotNull] TestLexerModeParser.TemplateSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateSignature([NotNull] TestLexerModeParser.TemplateSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateBody([NotNull] TestLexerModeParser.TemplateBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateBody([NotNull] TestLexerModeParser.TemplateBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateContentLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateContentLine([NotNull] TestLexerModeParser.TemplateContentLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateContentLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateContentLine([NotNull] TestLexerModeParser.TemplateContentLineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateContent([NotNull] TestLexerModeParser.TemplateContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateContent([NotNull] TestLexerModeParser.TemplateContentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateOutput([NotNull] TestLexerModeParser.TemplateOutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateOutput([NotNull] TestLexerModeParser.TemplateOutputContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateLineEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateLineEnd([NotNull] TestLexerModeParser.TemplateLineEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateLineEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateLineEnd([NotNull] TestLexerModeParser.TemplateLineEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateStatementStartEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateStatementStartEnd([NotNull] TestLexerModeParser.TemplateStatementStartEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateStatementStartEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateStatementStartEnd([NotNull] TestLexerModeParser.TemplateStatementStartEndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateStatement([NotNull] TestLexerModeParser.TemplateStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateStatement([NotNull] TestLexerModeParser.TemplateStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArgumentList([NotNull] TestLexerModeParser.TypeArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArgumentList([NotNull] TestLexerModeParser.TypeArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.predefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefinedType([NotNull] TestLexerModeParser.PredefinedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.predefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefinedType([NotNull] TestLexerModeParser.PredefinedTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeReferenceList([NotNull] TestLexerModeParser.TypeReferenceListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeReferenceList([NotNull] TestLexerModeParser.TypeReferenceListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeReference([NotNull] TestLexerModeParser.TypeReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeReference([NotNull] TestLexerModeParser.TypeReferenceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayType([NotNull] TestLexerModeParser.ArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayType([NotNull] TestLexerModeParser.ArrayTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.arrayItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayItemType([NotNull] TestLexerModeParser.ArrayItemTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.arrayItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayItemType([NotNull] TestLexerModeParser.ArrayItemTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullableType([NotNull] TestLexerModeParser.NullableTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullableType([NotNull] TestLexerModeParser.NullableTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullableItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullableItemType([NotNull] TestLexerModeParser.NullableItemTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullableItemType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullableItemType([NotNull] TestLexerModeParser.NullableItemTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericType([NotNull] TestLexerModeParser.GenericTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericType([NotNull] TestLexerModeParser.GenericTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleType([NotNull] TestLexerModeParser.SimpleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleType([NotNull] TestLexerModeParser.SimpleTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.voidType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoidType([NotNull] TestLexerModeParser.VoidTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.voidType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoidType([NotNull] TestLexerModeParser.VoidTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] TestLexerModeParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] TestLexerModeParser.ReturnTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] TestLexerModeParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] TestLexerModeParser.ExpressionListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableReference([NotNull] TestLexerModeParser.VariableReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableReference([NotNull] TestLexerModeParser.VariableReferenceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.rankSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRankSpecifiers([NotNull] TestLexerModeParser.RankSpecifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRankSpecifiers([NotNull] TestLexerModeParser.RankSpecifiersContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.rankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRankSpecifier([NotNull] TestLexerModeParser.RankSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRankSpecifier([NotNull] TestLexerModeParser.RankSpecifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.unboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnboundTypeName([NotNull] TestLexerModeParser.UnboundTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.unboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnboundTypeName([NotNull] TestLexerModeParser.UnboundTypeNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericDimensionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericDimensionItem([NotNull] TestLexerModeParser.GenericDimensionItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericDimensionItem([NotNull] TestLexerModeParser.GenericDimensionItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericDimensionSpecifier([NotNull] TestLexerModeParser.GenericDimensionSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericDimensionSpecifier([NotNull] TestLexerModeParser.GenericDimensionSpecifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunctionSignature([NotNull] TestLexerModeParser.AnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunctionSignature([NotNull] TestLexerModeParser.AnonymousFunctionSignatureContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.explicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitParameter([NotNull] TestLexerModeParser.ExplicitParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.explicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitParameter([NotNull] TestLexerModeParser.ExplicitParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.implicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitParameter([NotNull] TestLexerModeParser.ImplicitParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.implicitParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitParameter([NotNull] TestLexerModeParser.ImplicitParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] TestLexerModeParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] TestLexerModeParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedName([NotNull] TestLexerModeParser.QualifiedNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedName([NotNull] TestLexerModeParser.QualifiedNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierList([NotNull] TestLexerModeParser.IdentifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierList([NotNull] TestLexerModeParser.IdentifierListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] TestLexerModeParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] TestLexerModeParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] TestLexerModeParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] TestLexerModeParser.LiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullLiteral([NotNull] TestLexerModeParser.NullLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullLiteral([NotNull] TestLexerModeParser.NullLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] TestLexerModeParser.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] TestLexerModeParser.BooleanLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberLiteral([NotNull] TestLexerModeParser.NumberLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberLiteral([NotNull] TestLexerModeParser.NumberLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerLiteral([NotNull] TestLexerModeParser.IntegerLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerLiteral([NotNull] TestLexerModeParser.IntegerLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.decimalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimalLiteral([NotNull] TestLexerModeParser.DecimalLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.decimalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimalLiteral([NotNull] TestLexerModeParser.DecimalLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.scientificLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScientificLiteral([NotNull] TestLexerModeParser.ScientificLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.scientificLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScientificLiteral([NotNull] TestLexerModeParser.ScientificLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateOrTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateOrTimeLiteral([NotNull] TestLexerModeParser.DateOrTimeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateOrTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateOrTimeLiteral([NotNull] TestLexerModeParser.DateOrTimeLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateTimeOffsetLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimeOffsetLiteral([NotNull] TestLexerModeParser.DateTimeOffsetLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateTimeOffsetLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimeOffsetLiteral([NotNull] TestLexerModeParser.DateTimeOffsetLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimeLiteral([NotNull] TestLexerModeParser.DateTimeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimeLiteral([NotNull] TestLexerModeParser.DateTimeLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateLiteral([NotNull] TestLexerModeParser.DateLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateLiteral([NotNull] TestLexerModeParser.DateLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.timeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeLiteral([NotNull] TestLexerModeParser.TimeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.timeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeLiteral([NotNull] TestLexerModeParser.TimeLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.charLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharLiteral([NotNull] TestLexerModeParser.CharLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.charLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharLiteral([NotNull] TestLexerModeParser.CharLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] TestLexerModeParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] TestLexerModeParser.StringLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.guidLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGuidLiteral([NotNull] TestLexerModeParser.GuidLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.guidLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGuidLiteral([NotNull] TestLexerModeParser.GuidLiteralContext context);
}
} // namespace MetaDslx.CodeAnalysis.Antlr4Test.Languages.TestLexerMode.Syntax.InternalSyntax

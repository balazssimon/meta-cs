//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\MetaDslx.CodeAnalysis.Antlr4.Test\Languages\TestLexerMode\Syntax\InternalSyntax\TestLexerModeParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.CodeAnalysis.Antlr4Test.Syntax.InternalSyntax {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITestLexerModeParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TestLexerModeParserBaseListener : ITestLexerModeParserListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingNamespaceDeclaration([NotNull] TestLexerModeParser.UsingNamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingNamespaceDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingNamespaceDeclaration([NotNull] TestLexerModeParser.UsingNamespaceDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingGeneratorDeclaration([NotNull] TestLexerModeParser.UsingGeneratorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingGeneratorDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingGeneratorDeclaration([NotNull] TestLexerModeParser.UsingGeneratorDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfigPropertyDeclaration([NotNull] TestLexerModeParser.ConfigPropertyDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>configPropertyDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfigPropertyDeclaration([NotNull] TestLexerModeParser.ConfigPropertyDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfigPropertyGroupDeclaration([NotNull] TestLexerModeParser.ConfigPropertyGroupDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>configPropertyGroupDeclaration</c>
	/// labeled alternative in <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfigPropertyGroupDeclaration([NotNull] TestLexerModeParser.ConfigPropertyGroupDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainTypeofExpression([NotNull] TestLexerModeParser.LoopChainTypeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainTypeofExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainTypeofExpression([NotNull] TestLexerModeParser.LoopChainTypeofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainIdentifierExpression([NotNull] TestLexerModeParser.LoopChainIdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainIdentifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainIdentifierExpression([NotNull] TestLexerModeParser.LoopChainIdentifierExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainMemberAccessExpression([NotNull] TestLexerModeParser.LoopChainMemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainMemberAccessExpression([NotNull] TestLexerModeParser.LoopChainMemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainMethodCallExpression([NotNull] TestLexerModeParser.LoopChainMethodCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopChainMethodCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainMethodCallExpression([NotNull] TestLexerModeParser.LoopChainMethodCallExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ExplicitAnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>explicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ExplicitAnonymousFunctionSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ImplicitAnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>implicitAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitAnonymousFunctionSignature([NotNull] TestLexerModeParser.ImplicitAnonymousFunctionSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleParamAnonymousFunctionSignature([NotNull] TestLexerModeParser.SingleParamAnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>singleParamAnonymousFunctionSignature</c>
	/// labeled alternative in <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleParamAnonymousFunctionSignature([NotNull] TestLexerModeParser.SingleParamAnonymousFunctionSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisExpression([NotNull] TestLexerModeParser.ThisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>thisExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisExpression([NotNull] TestLexerModeParser.ThisExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] TestLexerModeParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] TestLexerModeParser.LiteralExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofVoidExpression([NotNull] TestLexerModeParser.TypeofVoidExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofVoidExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofVoidExpression([NotNull] TestLexerModeParser.TypeofVoidExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofUnboundTypeExpression([NotNull] TestLexerModeParser.TypeofUnboundTypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofUnboundTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofUnboundTypeExpression([NotNull] TestLexerModeParser.TypeofUnboundTypeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofTypeExpression([NotNull] TestLexerModeParser.TypeofTypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofTypeExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofTypeExpression([NotNull] TestLexerModeParser.TypeofTypeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultValueExpression([NotNull] TestLexerModeParser.DefaultValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultValueExpression([NotNull] TestLexerModeParser.DefaultValueExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewObjectOrCollectionWithConstructorExpression([NotNull] TestLexerModeParser.NewObjectOrCollectionWithConstructorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>newObjectOrCollectionWithConstructorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewObjectOrCollectionWithConstructorExpression([NotNull] TestLexerModeParser.NewObjectOrCollectionWithConstructorExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] TestLexerModeParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] TestLexerModeParser.IdentifierExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHasLoopExpression([NotNull] TestLexerModeParser.HasLoopExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hasLoopExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHasLoopExpression([NotNull] TestLexerModeParser.HasLoopExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] TestLexerModeParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] TestLexerModeParser.ParenthesizedExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementAccessExpression([NotNull] TestLexerModeParser.ElementAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>elementAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementAccessExpression([NotNull] TestLexerModeParser.ElementAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] TestLexerModeParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] TestLexerModeParser.FunctionCallExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefinedTypeMemberAccessExpression([NotNull] TestLexerModeParser.PredefinedTypeMemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>predefinedTypeMemberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefinedTypeMemberAccessExpression([NotNull] TestLexerModeParser.PredefinedTypeMemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessExpression([NotNull] TestLexerModeParser.MemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessExpression([NotNull] TestLexerModeParser.MemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypecastExpression([NotNull] TestLexerModeParser.TypecastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typecastExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypecastExpression([NotNull] TestLexerModeParser.TypecastExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] TestLexerModeParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] TestLexerModeParser.UnaryExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostExpression([NotNull] TestLexerModeParser.PostExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>postExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostExpression([NotNull] TestLexerModeParser.PostExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationExpression([NotNull] TestLexerModeParser.MultiplicationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationExpression([NotNull] TestLexerModeParser.MultiplicationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionExpression([NotNull] TestLexerModeParser.AdditionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>additionExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionExpression([NotNull] TestLexerModeParser.AdditionExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] TestLexerModeParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] TestLexerModeParser.RelationalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypecheckExpression([NotNull] TestLexerModeParser.TypecheckExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typecheckExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypecheckExpression([NotNull] TestLexerModeParser.TypecheckExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] TestLexerModeParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] TestLexerModeParser.EqualityExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseAndExpression([NotNull] TestLexerModeParser.BitwiseAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseAndExpression([NotNull] TestLexerModeParser.BitwiseAndExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseXorExpression([NotNull] TestLexerModeParser.BitwiseXorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseXorExpression([NotNull] TestLexerModeParser.BitwiseXorExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOrExpression([NotNull] TestLexerModeParser.BitwiseOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOrExpression([NotNull] TestLexerModeParser.BitwiseOrExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndExpression([NotNull] TestLexerModeParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalAndExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndExpression([NotNull] TestLexerModeParser.LogicalAndExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalXorExpression([NotNull] TestLexerModeParser.LogicalXorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalXorExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalXorExpression([NotNull] TestLexerModeParser.LogicalXorExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrExpression([NotNull] TestLexerModeParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalOrExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrExpression([NotNull] TestLexerModeParser.LogicalOrExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] TestLexerModeParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] TestLexerModeParser.ConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] TestLexerModeParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] TestLexerModeParser.AssignmentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambdaExpression([NotNull] TestLexerModeParser.LambdaExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambdaExpression([NotNull] TestLexerModeParser.LambdaExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] TestLexerModeParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] TestLexerModeParser.MainContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDeclaration([NotNull] TestLexerModeParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDeclaration([NotNull] TestLexerModeParser.NamespaceDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.generatorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneratorDeclaration([NotNull] TestLexerModeParser.GeneratorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.generatorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneratorDeclaration([NotNull] TestLexerModeParser.GeneratorDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingDeclaration([NotNull] TestLexerModeParser.UsingDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.usingDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingDeclaration([NotNull] TestLexerModeParser.UsingDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.configDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfigDeclaration([NotNull] TestLexerModeParser.ConfigDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.configDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfigDeclaration([NotNull] TestLexerModeParser.ConfigDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfigProperty([NotNull] TestLexerModeParser.ConfigPropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.configProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfigProperty([NotNull] TestLexerModeParser.ConfigPropertyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] TestLexerModeParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] TestLexerModeParser.MethodDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.externFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternFunctionDeclaration([NotNull] TestLexerModeParser.ExternFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.externFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternFunctionDeclaration([NotNull] TestLexerModeParser.ExternFunctionDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] TestLexerModeParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] TestLexerModeParser.FunctionDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionSignature([NotNull] TestLexerModeParser.FunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionSignature([NotNull] TestLexerModeParser.FunctionSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] TestLexerModeParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] TestLexerModeParser.ParamListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] TestLexerModeParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] TestLexerModeParser.ParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] TestLexerModeParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] TestLexerModeParser.BodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] TestLexerModeParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] TestLexerModeParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.singleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleStatement([NotNull] TestLexerModeParser.SingleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.singleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleStatement([NotNull] TestLexerModeParser.SingleStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.singleStatementSemicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleStatementSemicolon([NotNull] TestLexerModeParser.SingleStatementSemicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.singleStatementSemicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleStatementSemicolon([NotNull] TestLexerModeParser.SingleStatementSemicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationStatement([NotNull] TestLexerModeParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationStatement([NotNull] TestLexerModeParser.VariableDeclarationStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationExpression([NotNull] TestLexerModeParser.VariableDeclarationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationExpression([NotNull] TestLexerModeParser.VariableDeclarationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationItem([NotNull] TestLexerModeParser.VariableDeclarationItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableDeclarationItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationItem([NotNull] TestLexerModeParser.VariableDeclarationItemContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.voidStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVoidStatement([NotNull] TestLexerModeParser.VoidStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.voidStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVoidStatement([NotNull] TestLexerModeParser.VoidStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] TestLexerModeParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] TestLexerModeParser.ReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] TestLexerModeParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] TestLexerModeParser.ExpressionStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] TestLexerModeParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] TestLexerModeParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.elseIfStatementBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatementBody([NotNull] TestLexerModeParser.ElseIfStatementBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatementBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatementBody([NotNull] TestLexerModeParser.ElseIfStatementBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementElseBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementElseBody([NotNull] TestLexerModeParser.IfStatementElseBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElseBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementElseBody([NotNull] TestLexerModeParser.IfStatementElseBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementBegin([NotNull] TestLexerModeParser.IfStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementBegin([NotNull] TestLexerModeParser.IfStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatement([NotNull] TestLexerModeParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatement([NotNull] TestLexerModeParser.ElseIfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementElse([NotNull] TestLexerModeParser.IfStatementElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementElse([NotNull] TestLexerModeParser.IfStatementElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.ifStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementEnd([NotNull] TestLexerModeParser.IfStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.ifStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementEnd([NotNull] TestLexerModeParser.IfStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] TestLexerModeParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] TestLexerModeParser.ForStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatementBegin([NotNull] TestLexerModeParser.ForStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatementBegin([NotNull] TestLexerModeParser.ForStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatementEnd([NotNull] TestLexerModeParser.ForStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatementEnd([NotNull] TestLexerModeParser.ForStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.forInitStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInitStatement([NotNull] TestLexerModeParser.ForInitStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.forInitStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInitStatement([NotNull] TestLexerModeParser.ForInitStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] TestLexerModeParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] TestLexerModeParser.WhileStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatementBegin([NotNull] TestLexerModeParser.WhileStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatementBegin([NotNull] TestLexerModeParser.WhileStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatementEnd([NotNull] TestLexerModeParser.WhileStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatementEnd([NotNull] TestLexerModeParser.WhileStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.whileRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileRunExpression([NotNull] TestLexerModeParser.WhileRunExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.whileRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileRunExpression([NotNull] TestLexerModeParser.WhileRunExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatement([NotNull] TestLexerModeParser.RepeatStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatement([NotNull] TestLexerModeParser.RepeatStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatementBegin([NotNull] TestLexerModeParser.RepeatStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatementBegin([NotNull] TestLexerModeParser.RepeatStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatementEnd([NotNull] TestLexerModeParser.RepeatStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatementEnd([NotNull] TestLexerModeParser.RepeatStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.repeatRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatRunExpression([NotNull] TestLexerModeParser.RepeatRunExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.repeatRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatRunExpression([NotNull] TestLexerModeParser.RepeatRunExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatement([NotNull] TestLexerModeParser.LoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatement([NotNull] TestLexerModeParser.LoopStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatementBegin([NotNull] TestLexerModeParser.LoopStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatementBegin([NotNull] TestLexerModeParser.LoopStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatementEnd([NotNull] TestLexerModeParser.LoopStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatementEnd([NotNull] TestLexerModeParser.LoopStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChain"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChain([NotNull] TestLexerModeParser.LoopChainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChain"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChain([NotNull] TestLexerModeParser.LoopChainContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChainItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainItem([NotNull] TestLexerModeParser.LoopChainItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChainItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainItem([NotNull] TestLexerModeParser.LoopChainItemContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopChainExpression([NotNull] TestLexerModeParser.LoopChainExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopChainExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopChainExpression([NotNull] TestLexerModeParser.LoopChainExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopWhereExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopWhereExpression([NotNull] TestLexerModeParser.LoopWhereExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopWhereExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopWhereExpression([NotNull] TestLexerModeParser.LoopWhereExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.loopRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopRunExpression([NotNull] TestLexerModeParser.LoopRunExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.loopRunExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopRunExpression([NotNull] TestLexerModeParser.LoopRunExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.separatorStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeparatorStatement([NotNull] TestLexerModeParser.SeparatorStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.separatorStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeparatorStatement([NotNull] TestLexerModeParser.SeparatorStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] TestLexerModeParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] TestLexerModeParser.SwitchStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatementBegin([NotNull] TestLexerModeParser.SwitchStatementBeginContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatementBegin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatementBegin([NotNull] TestLexerModeParser.SwitchStatementBeginContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatementEnd([NotNull] TestLexerModeParser.SwitchStatementEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchStatementEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatementEnd([NotNull] TestLexerModeParser.SwitchStatementEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchBranchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBranchStatement([NotNull] TestLexerModeParser.SwitchBranchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchBranchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBranchStatement([NotNull] TestLexerModeParser.SwitchBranchStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchBranchHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBranchHeadStatement([NotNull] TestLexerModeParser.SwitchBranchHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchBranchHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBranchHeadStatement([NotNull] TestLexerModeParser.SwitchBranchHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCaseOrTypeIsHeadStatements([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCaseOrTypeIsHeadStatements([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCaseOrTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseOrTypeIsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCaseOrTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchCaseOrTypeIsHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchCaseHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCaseHeadStatement([NotNull] TestLexerModeParser.SwitchCaseHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchCaseHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCaseHeadStatement([NotNull] TestLexerModeParser.SwitchCaseHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchTypeIsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeIsHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchTypeIsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchTypeIsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeIsHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchTypeAsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchTypeAsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeAsHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchTypeAsHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchTypeAsHeadStatement([NotNull] TestLexerModeParser.SwitchTypeAsHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchDefaultStatement([NotNull] TestLexerModeParser.SwitchDefaultStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchDefaultStatement([NotNull] TestLexerModeParser.SwitchDefaultStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.switchDefaultHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchDefaultHeadStatement([NotNull] TestLexerModeParser.SwitchDefaultHeadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.switchDefaultHeadStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchDefaultHeadStatement([NotNull] TestLexerModeParser.SwitchDefaultHeadStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateDeclaration([NotNull] TestLexerModeParser.TemplateDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateDeclaration([NotNull] TestLexerModeParser.TemplateDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateSignature([NotNull] TestLexerModeParser.TemplateSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateSignature([NotNull] TestLexerModeParser.TemplateSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateBody([NotNull] TestLexerModeParser.TemplateBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateBody([NotNull] TestLexerModeParser.TemplateBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateContentLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateContentLine([NotNull] TestLexerModeParser.TemplateContentLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateContentLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateContentLine([NotNull] TestLexerModeParser.TemplateContentLineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateContent([NotNull] TestLexerModeParser.TemplateContentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateContent([NotNull] TestLexerModeParser.TemplateContentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateOutputx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateOutputx([NotNull] TestLexerModeParser.TemplateOutputxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateOutputx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateOutputx([NotNull] TestLexerModeParser.TemplateOutputxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateLineEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateLineEnd([NotNull] TestLexerModeParser.TemplateLineEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateLineEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateLineEnd([NotNull] TestLexerModeParser.TemplateLineEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateStatementStartEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStatementStartEnd([NotNull] TestLexerModeParser.TemplateStatementStartEndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateStatementStartEnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStatementStartEnd([NotNull] TestLexerModeParser.TemplateStatementStartEndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.templateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStatement([NotNull] TestLexerModeParser.TemplateStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.templateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStatement([NotNull] TestLexerModeParser.TemplateStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeArgumentList([NotNull] TestLexerModeParser.TypeArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeArgumentList([NotNull] TestLexerModeParser.TypeArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.predefinedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefinedType([NotNull] TestLexerModeParser.PredefinedTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.predefinedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefinedType([NotNull] TestLexerModeParser.PredefinedTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeReferenceList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeReferenceList([NotNull] TestLexerModeParser.TypeReferenceListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeReferenceList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeReferenceList([NotNull] TestLexerModeParser.TypeReferenceListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.typeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeReference([NotNull] TestLexerModeParser.TypeReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.typeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeReference([NotNull] TestLexerModeParser.TypeReferenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] TestLexerModeParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] TestLexerModeParser.ArrayTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.arrayItemType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayItemType([NotNull] TestLexerModeParser.ArrayItemTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.arrayItemType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayItemType([NotNull] TestLexerModeParser.ArrayItemTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullableType([NotNull] TestLexerModeParser.NullableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullableType([NotNull] TestLexerModeParser.NullableTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullableItemType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullableItemType([NotNull] TestLexerModeParser.NullableItemTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullableItemType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullableItemType([NotNull] TestLexerModeParser.NullableItemTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericType([NotNull] TestLexerModeParser.GenericTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericType([NotNull] TestLexerModeParser.GenericTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleType([NotNull] TestLexerModeParser.SimpleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleType([NotNull] TestLexerModeParser.SimpleTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.voidType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVoidType([NotNull] TestLexerModeParser.VoidTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.voidType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVoidType([NotNull] TestLexerModeParser.VoidTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] TestLexerModeParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] TestLexerModeParser.ReturnTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] TestLexerModeParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] TestLexerModeParser.ExpressionListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.variableReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableReference([NotNull] TestLexerModeParser.VariableReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.variableReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableReference([NotNull] TestLexerModeParser.VariableReferenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.rankSpecifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRankSpecifiers([NotNull] TestLexerModeParser.RankSpecifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRankSpecifiers([NotNull] TestLexerModeParser.RankSpecifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.rankSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRankSpecifier([NotNull] TestLexerModeParser.RankSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.rankSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRankSpecifier([NotNull] TestLexerModeParser.RankSpecifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.unboundTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnboundTypeName([NotNull] TestLexerModeParser.UnboundTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.unboundTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnboundTypeName([NotNull] TestLexerModeParser.UnboundTypeNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericDimensionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericDimensionItem([NotNull] TestLexerModeParser.GenericDimensionItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericDimensionItem([NotNull] TestLexerModeParser.GenericDimensionItemContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.genericDimensionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericDimensionSpecifier([NotNull] TestLexerModeParser.GenericDimensionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.genericDimensionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericDimensionSpecifier([NotNull] TestLexerModeParser.GenericDimensionSpecifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunctionSignature([NotNull] TestLexerModeParser.AnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunctionSignature([NotNull] TestLexerModeParser.AnonymousFunctionSignatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.explicitParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitParameter([NotNull] TestLexerModeParser.ExplicitParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.explicitParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitParameter([NotNull] TestLexerModeParser.ExplicitParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.implicitParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitParameter([NotNull] TestLexerModeParser.ImplicitParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.implicitParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitParameter([NotNull] TestLexerModeParser.ImplicitParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] TestLexerModeParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] TestLexerModeParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.qualifiedName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedName([NotNull] TestLexerModeParser.QualifiedNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.qualifiedName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedName([NotNull] TestLexerModeParser.QualifiedNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] TestLexerModeParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] TestLexerModeParser.IdentifierListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] TestLexerModeParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] TestLexerModeParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] TestLexerModeParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] TestLexerModeParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.nullLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullLiteral([NotNull] TestLexerModeParser.NullLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.nullLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullLiteral([NotNull] TestLexerModeParser.NullLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.booleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] TestLexerModeParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.booleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] TestLexerModeParser.BooleanLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] TestLexerModeParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] TestLexerModeParser.NumberLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.integerLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerLiteralx([NotNull] TestLexerModeParser.IntegerLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.integerLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerLiteralx([NotNull] TestLexerModeParser.IntegerLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.decimalLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimalLiteralx([NotNull] TestLexerModeParser.DecimalLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.decimalLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimalLiteralx([NotNull] TestLexerModeParser.DecimalLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.scientificLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScientificLiteralx([NotNull] TestLexerModeParser.ScientificLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.scientificLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScientificLiteralx([NotNull] TestLexerModeParser.ScientificLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateOrTimeLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateOrTimeLiteral([NotNull] TestLexerModeParser.DateOrTimeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateOrTimeLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateOrTimeLiteral([NotNull] TestLexerModeParser.DateOrTimeLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateTimeOffsetLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeOffsetLiteralx([NotNull] TestLexerModeParser.DateTimeOffsetLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateTimeOffsetLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeOffsetLiteralx([NotNull] TestLexerModeParser.DateTimeOffsetLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateTimeLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeLiteralx([NotNull] TestLexerModeParser.DateTimeLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateTimeLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeLiteralx([NotNull] TestLexerModeParser.DateTimeLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.dateLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateLiteralx([NotNull] TestLexerModeParser.DateLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.dateLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateLiteralx([NotNull] TestLexerModeParser.DateLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.timeLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeLiteralx([NotNull] TestLexerModeParser.TimeLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.timeLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeLiteralx([NotNull] TestLexerModeParser.TimeLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.charLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharLiteralx([NotNull] TestLexerModeParser.CharLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.charLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharLiteralx([NotNull] TestLexerModeParser.CharLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.stringLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteralx([NotNull] TestLexerModeParser.StringLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.stringLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteralx([NotNull] TestLexerModeParser.StringLiteralxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TestLexerModeParser.guidLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGuidLiteralx([NotNull] TestLexerModeParser.GuidLiteralxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestLexerModeParser.guidLiteralx"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGuidLiteralx([NotNull] TestLexerModeParser.GuidLiteralxContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace MetaDslx.CodeAnalysis.Antlr4Test.Syntax.InternalSyntax

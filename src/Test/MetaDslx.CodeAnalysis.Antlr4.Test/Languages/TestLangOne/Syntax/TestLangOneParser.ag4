parser grammar TestLangOneParser;

options
{
    tokenVocab = TestLangOneLexer; 
	generateCompiler=true;
}

main: namespaceDeclaration EOF;

$Name
name : identifier;

$Name
qualifiedName : qualifier;

$Qualifier
qualifier : identifier (TDot identifier)*;

$SymbolDef(symbolType=Namespace,nestingPropertyX=Members,merge=true)
namespaceDeclaration: KNamespace qualifiedName namespaceBody;

$Scope
namespaceBody : TOpenBrace /*declaration**/ TCloseBrace;

// Identifiers
$Identifier
identifier 
	: IdentifierNormal 
	| IdentifierVerbatim
	| IUri
	;

// Literals
literal 
    : nullLiteral
	| booleanLiteral
	| integerLiteral
	| decimalLiteral
	| scientificLiteral
    | stringLiteral
	;

// Null literal
$Value
nullLiteral : KNull;

// Boolean literals
$Value
booleanLiteral : KTrue | KFalse;

// Number literals
$Value
integerLiteral : LInteger;
$Value
decimalLiteral : LDecimal;
$Value
scientificLiteral : LScientific;

// String literals
$Value
stringLiteral : LRegularString;

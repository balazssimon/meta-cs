using MetaDslx.CodeAnalysis.Meta.Test.Languages.PropertiesTest;
using MetaDslx.Modeling;
using MetaDslx.Tests;
using System;
using System.Collections.Generic;
using System.Text;
using Xunit;

namespace MetaDslx.CodeAnalysis.Meta.Test
{
    public class UserRoleTest : DebugAssertUnitTest
    {
        [Fact]
        public void TestSet2Set()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesSet2Set.Add(role);
            Assert.True(user.RolesSet2Set.Count == 1);
            Assert.True(role.UsersSet2Set.Count == 1);
            Assert.Contains(role, user.RolesSet2Set);
            Assert.Contains(user, role.UsersSet2Set);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesSet2Set.Count == 1);
            Assert.True(irole.UsersSet2Set.Count == 1);
            Assert.Contains(irole, iuser.RolesSet2Set);
            Assert.Contains(iuser, irole.UsersSet2Set);
        }

        [Fact]
        public void TestSet2SetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2Set.Add(role1);
            Assert.True(user1.RolesSet2Set.Count == 1);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 0);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            user1.RolesSet2Set.Add(role1);
            Assert.True(user1.RolesSet2Set.Count == 1);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 0);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            user1.RolesSet2Set.Add(role2);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 1);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            user1.RolesSet2Set.Add(role2);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 1);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            role2.UsersSet2Set.Add(user1);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 1);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            role2.UsersSet2Set.Add(user1);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 1);
            Assert.True(user3.RolesSet2Set.Count == 0);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            role2.UsersSet2Set.Add(user3);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 2);
            Assert.True(user3.RolesSet2Set.Count == 1);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            Assert.Contains(role2, user3.RolesSet2Set);
            Assert.Contains(user3, role2.UsersSet2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2Set.Count == 2);
            Assert.True(irole1.UsersSet2Set.Count == 1);
            Assert.True(iuser2.RolesSet2Set.Count == 0);
            Assert.True(irole2.UsersSet2Set.Count == 2);
            Assert.True(iuser3.RolesSet2Set.Count == 1);
            Assert.True(irole3.UsersSet2Set.Count == 0);
            Assert.Contains(irole1, iuser1.RolesSet2Set);
            Assert.Contains(iuser1, irole1.UsersSet2Set);
            Assert.Contains(irole2, iuser1.RolesSet2Set);
            Assert.Contains(iuser1, irole2.UsersSet2Set);
            Assert.Contains(irole2, iuser3.RolesSet2Set);
            Assert.Contains(iuser3, irole2.UsersSet2Set);
        }


        [Fact]
        public void TestSet2SetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2Set.Add(role1);
            user1.RolesSet2Set.Add(role1);
            user1.RolesSet2Set.Add(role2);
            user1.RolesSet2Set.Add(role2);
            role2.UsersSet2Set.Add(user1);
            role2.UsersSet2Set.Add(user1);
            role2.UsersSet2Set.Add(user2);
            role2.UsersSet2Set.Add(user2);
            role2.UsersSet2Set.Add(user3);
            Assert.True(user1.RolesSet2Set.Count == 2);
            Assert.True(role1.UsersSet2Set.Count == 1);
            Assert.True(user2.RolesSet2Set.Count == 1);
            Assert.True(role2.UsersSet2Set.Count == 3);
            Assert.True(user3.RolesSet2Set.Count == 1);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesSet2Set);
            Assert.Contains(user1, role1.UsersSet2Set);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            Assert.Contains(role2, user2.RolesSet2Set);
            Assert.Contains(user2, role2.UsersSet2Set);
            Assert.Contains(role2, user3.RolesSet2Set);
            Assert.Contains(user3, role2.UsersSet2Set);
            user1.RolesSet2Set.Remove(role1);
            Assert.True(user1.RolesSet2Set.Count == 1);
            Assert.True(role1.UsersSet2Set.Count == 0);
            Assert.True(user2.RolesSet2Set.Count == 1);
            Assert.True(role2.UsersSet2Set.Count == 3);
            Assert.True(user3.RolesSet2Set.Count == 1);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            Assert.Contains(role2, user2.RolesSet2Set);
            Assert.Contains(user2, role2.UsersSet2Set);
            Assert.Contains(role2, user3.RolesSet2Set);
            Assert.Contains(user3, role2.UsersSet2Set);
            role2.UsersSet2Set.Remove(user2);
            Assert.True(user1.RolesSet2Set.Count == 1);
            Assert.True(role1.UsersSet2Set.Count == 0);
            Assert.True(user2.RolesSet2Set.Count == 0);
            Assert.True(role2.UsersSet2Set.Count == 2);
            Assert.True(user3.RolesSet2Set.Count == 1);
            Assert.True(role3.UsersSet2Set.Count == 0);
            Assert.Contains(role2, user1.RolesSet2Set);
            Assert.Contains(user1, role2.UsersSet2Set);
            Assert.Contains(role2, user3.RolesSet2Set);
            Assert.Contains(user3, role2.UsersSet2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2Set.Count == 1);
            Assert.True(irole1.UsersSet2Set.Count == 0);
            Assert.True(iuser2.RolesSet2Set.Count == 0);
            Assert.True(irole2.UsersSet2Set.Count == 2);
            Assert.True(iuser3.RolesSet2Set.Count == 1);
            Assert.True(irole3.UsersSet2Set.Count == 0);
            Assert.Contains(irole2, iuser1.RolesSet2Set);
            Assert.Contains(iuser1, irole2.UsersSet2Set);
            Assert.Contains(irole2, iuser3.RolesSet2Set);
            Assert.Contains(iuser3, irole2.UsersSet2Set);
        }

        [Fact]
        public void TestSet2List()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesSet2List.Add(role);
            Assert.True(user.RolesSet2List.Count == 1);
            Assert.True(role.UsersSet2List.Count == 1);
            Assert.Contains(role, user.RolesSet2List);
            Assert.Contains(user, role.UsersSet2List);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesSet2List.Count == 1);
            Assert.True(irole.UsersSet2List.Count == 1);
            Assert.Contains(irole, iuser.RolesSet2List);
            Assert.Contains(iuser, irole.UsersSet2List);
        }

        [Fact]
        public void TestSet2ListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2List.Add(role1);
            Assert.True(user1.RolesSet2List.Count == 1);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 0);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            user1.RolesSet2List.Add(role1);
            Assert.True(user1.RolesSet2List.Count == 1);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 0);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            user1.RolesSet2List.Add(role2);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 1);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            user1.RolesSet2List.Add(role2);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 1);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            role2.UsersSet2List.Add(user1);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 1);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            role2.UsersSet2List.Add(user1);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 1);
            Assert.True(user3.RolesSet2List.Count == 0);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            role2.UsersSet2List.Add(user3);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 2);
            Assert.True(user3.RolesSet2List.Count == 1);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            Assert.Contains(role2, user3.RolesSet2List);
            Assert.Contains(user3, role2.UsersSet2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2List.Count == 2);
            Assert.True(irole1.UsersSet2List.Count == 1);
            Assert.True(iuser2.RolesSet2List.Count == 0);
            Assert.True(irole2.UsersSet2List.Count == 2);
            Assert.True(iuser3.RolesSet2List.Count == 1);
            Assert.True(irole3.UsersSet2List.Count == 0);
            Assert.Contains(irole1, iuser1.RolesSet2List);
            Assert.Contains(iuser1, irole1.UsersSet2List);
            Assert.Contains(irole2, iuser1.RolesSet2List);
            Assert.Contains(iuser1, irole2.UsersSet2List);
            Assert.Contains(irole2, iuser3.RolesSet2List);
            Assert.Contains(iuser3, irole2.UsersSet2List);
        }


        [Fact]
        public void TestSet2ListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2List.Add(role1);
            user1.RolesSet2List.Add(role1);
            user1.RolesSet2List.Add(role2);
            user1.RolesSet2List.Add(role2);
            role2.UsersSet2List.Add(user1);
            role2.UsersSet2List.Add(user1);
            role2.UsersSet2List.Add(user2);
            role2.UsersSet2List.Add(user2);
            role2.UsersSet2List.Add(user3);
            Assert.True(user1.RolesSet2List.Count == 2);
            Assert.True(role1.UsersSet2List.Count == 1);
            Assert.True(user2.RolesSet2List.Count == 1);
            Assert.True(role2.UsersSet2List.Count == 3);
            Assert.True(user3.RolesSet2List.Count == 1);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesSet2List);
            Assert.Contains(user1, role1.UsersSet2List);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            Assert.Contains(role2, user2.RolesSet2List);
            Assert.Contains(user2, role2.UsersSet2List);
            Assert.Contains(role2, user3.RolesSet2List);
            Assert.Contains(user3, role2.UsersSet2List);
            user1.RolesSet2List.Remove(role1);
            Assert.True(user1.RolesSet2List.Count == 1);
            Assert.True(role1.UsersSet2List.Count == 0);
            Assert.True(user2.RolesSet2List.Count == 1);
            Assert.True(role2.UsersSet2List.Count == 3);
            Assert.True(user3.RolesSet2List.Count == 1);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            Assert.Contains(role2, user2.RolesSet2List);
            Assert.Contains(user2, role2.UsersSet2List);
            Assert.Contains(role2, user3.RolesSet2List);
            Assert.Contains(user3, role2.UsersSet2List);
            role2.UsersSet2List.Remove(user2);
            Assert.True(user1.RolesSet2List.Count == 1);
            Assert.True(role1.UsersSet2List.Count == 0);
            Assert.True(user2.RolesSet2List.Count == 0);
            Assert.True(role2.UsersSet2List.Count == 2);
            Assert.True(user3.RolesSet2List.Count == 1);
            Assert.True(role3.UsersSet2List.Count == 0);
            Assert.Contains(role2, user1.RolesSet2List);
            Assert.Contains(user1, role2.UsersSet2List);
            Assert.Contains(role2, user3.RolesSet2List);
            Assert.Contains(user3, role2.UsersSet2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2List.Count == 1);
            Assert.True(irole1.UsersSet2List.Count == 0);
            Assert.True(iuser2.RolesSet2List.Count == 0);
            Assert.True(irole2.UsersSet2List.Count == 2);
            Assert.True(iuser3.RolesSet2List.Count == 1);
            Assert.True(irole3.UsersSet2List.Count == 0);
            Assert.Contains(irole2, iuser1.RolesSet2List);
            Assert.Contains(iuser1, irole2.UsersSet2List);
            Assert.Contains(irole2, iuser3.RolesSet2List);
            Assert.Contains(iuser3, irole2.UsersSet2List);
        }

        [Fact]
        public void TestSet2MultiSet()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesSet2MultiSet.Add(role);
            Assert.True(user.RolesSet2MultiSet.Count == 1);
            Assert.True(role.UsersSet2MultiSet.Count == 1);
            Assert.Contains(role, user.RolesSet2MultiSet);
            Assert.Contains(user, role.UsersSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesSet2MultiSet.Count == 1);
            Assert.True(irole.UsersSet2MultiSet.Count == 1);
            Assert.Contains(irole, iuser.RolesSet2MultiSet);
            Assert.Contains(iuser, irole.UsersSet2MultiSet);
        }

        [Fact]
        public void TestSet2MultiSetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2MultiSet.Add(role1);
            Assert.True(user1.RolesSet2MultiSet.Count == 1);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 0);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            user1.RolesSet2MultiSet.Add(role1);
            Assert.True(user1.RolesSet2MultiSet.Count == 1);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 0);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            user1.RolesSet2MultiSet.Add(role2);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 1);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            user1.RolesSet2MultiSet.Add(role2);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 1);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            role2.UsersSet2MultiSet.Add(user1);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 2);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            role2.UsersSet2MultiSet.Add(user1);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 3);
            Assert.True(user3.RolesSet2MultiSet.Count == 0);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            role2.UsersSet2MultiSet.Add(user3);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 4);
            Assert.True(user3.RolesSet2MultiSet.Count == 1);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user3.RolesSet2MultiSet);
            Assert.Contains(user3, role2.UsersSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2MultiSet.Count == 2);
            Assert.True(irole1.UsersSet2MultiSet.Count == 1);
            Assert.True(iuser2.RolesSet2MultiSet.Count == 0);
            Assert.True(irole2.UsersSet2MultiSet.Count == 4);
            Assert.True(iuser3.RolesSet2MultiSet.Count == 1);
            Assert.True(irole3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(irole1, iuser1.RolesSet2MultiSet);
            Assert.Contains(iuser1, irole1.UsersSet2MultiSet);
            Assert.Contains(irole2, iuser1.RolesSet2MultiSet);
            Assert.Contains(iuser1, irole2.UsersSet2MultiSet);
            Assert.Contains(irole2, iuser3.RolesSet2MultiSet);
            Assert.Contains(iuser3, irole2.UsersSet2MultiSet);
        }


        [Fact]
        public void TestSet2MultiSetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2MultiSet.Add(role1);
            user1.RolesSet2MultiSet.Add(role1);
            user1.RolesSet2MultiSet.Add(role2);
            user1.RolesSet2MultiSet.Add(role2);
            role2.UsersSet2MultiSet.Add(user1);
            role2.UsersSet2MultiSet.Add(user1);
            role2.UsersSet2MultiSet.Add(user2);
            role2.UsersSet2MultiSet.Add(user2);
            role2.UsersSet2MultiSet.Add(user3);
            Assert.True(user1.RolesSet2MultiSet.Count == 2);
            Assert.True(role1.UsersSet2MultiSet.Count == 1);
            Assert.True(user2.RolesSet2MultiSet.Count == 1);
            Assert.True(role2.UsersSet2MultiSet.Count == 6);
            Assert.True(user3.RolesSet2MultiSet.Count == 1);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role1.UsersSet2MultiSet);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user2.RolesSet2MultiSet);
            Assert.Contains(user2, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user3.RolesSet2MultiSet);
            Assert.Contains(user3, role2.UsersSet2MultiSet);
            user1.RolesSet2MultiSet.Remove(role1);
            Assert.True(user1.RolesSet2MultiSet.Count == 1);
            Assert.True(role1.UsersSet2MultiSet.Count == 0);
            Assert.True(user2.RolesSet2MultiSet.Count == 1);
            Assert.True(role2.UsersSet2MultiSet.Count == 6);
            Assert.True(user3.RolesSet2MultiSet.Count == 1);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user2.RolesSet2MultiSet);
            Assert.Contains(user2, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user3.RolesSet2MultiSet);
            Assert.Contains(user3, role2.UsersSet2MultiSet);
            role2.UsersSet2MultiSet.Remove(user2);
            Assert.True(user1.RolesSet2MultiSet.Count == 1);
            Assert.True(role1.UsersSet2MultiSet.Count == 0);
            Assert.True(user2.RolesSet2MultiSet.Count == 1);
            Assert.True(role2.UsersSet2MultiSet.Count == 5);
            Assert.True(user3.RolesSet2MultiSet.Count == 1);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user2.RolesSet2MultiSet);
            Assert.Contains(user2, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user3.RolesSet2MultiSet);
            Assert.Contains(user3, role2.UsersSet2MultiSet);
            role2.UsersSet2MultiSet.Remove(user2);
            Assert.True(user1.RolesSet2MultiSet.Count == 1);
            Assert.True(role1.UsersSet2MultiSet.Count == 0);
            Assert.True(user2.RolesSet2MultiSet.Count == 0);
            Assert.True(role2.UsersSet2MultiSet.Count == 4);
            Assert.True(user3.RolesSet2MultiSet.Count == 1);
            Assert.True(role3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiSet);
            Assert.Contains(user1, role2.UsersSet2MultiSet);
            Assert.Contains(role2, user3.RolesSet2MultiSet);
            Assert.Contains(user3, role2.UsersSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2MultiSet.Count == 1);
            Assert.True(irole1.UsersSet2MultiSet.Count == 0);
            Assert.True(iuser2.RolesSet2MultiSet.Count == 0);
            Assert.True(irole2.UsersSet2MultiSet.Count == 4);
            Assert.True(iuser3.RolesSet2MultiSet.Count == 1);
            Assert.True(irole3.UsersSet2MultiSet.Count == 0);
            Assert.Contains(irole2, iuser1.RolesSet2MultiSet);
            Assert.Contains(iuser1, irole2.UsersSet2MultiSet);
            Assert.Contains(irole2, iuser3.RolesSet2MultiSet);
            Assert.Contains(iuser3, irole2.UsersSet2MultiSet);
        }

        [Fact]
        public void TestSet2MultiList()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesSet2MultiList.Add(role);
            Assert.True(user.RolesSet2MultiList.Count == 1);
            Assert.True(role.UsersSet2MultiList.Count == 1);
            Assert.Contains(role, user.RolesSet2MultiList);
            Assert.Contains(user, role.UsersSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesSet2MultiList.Count == 1);
            Assert.True(irole.UsersSet2MultiList.Count == 1);
            Assert.Contains(irole, iuser.RolesSet2MultiList);
            Assert.Contains(iuser, irole.UsersSet2MultiList);
        }

        [Fact]
        public void TestSet2MultiListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2MultiList.Add(role1);
            Assert.True(user1.RolesSet2MultiList.Count == 1);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 0);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            user1.RolesSet2MultiList.Add(role1);
            Assert.True(user1.RolesSet2MultiList.Count == 1);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 0);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            user1.RolesSet2MultiList.Add(role2);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 1);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            user1.RolesSet2MultiList.Add(role2);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 1);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            role2.UsersSet2MultiList.Add(user1);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 2);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            role2.UsersSet2MultiList.Add(user1);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 3);
            Assert.True(user3.RolesSet2MultiList.Count == 0);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            role2.UsersSet2MultiList.Add(user3);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 4);
            Assert.True(user3.RolesSet2MultiList.Count == 1);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            Assert.Contains(role2, user3.RolesSet2MultiList);
            Assert.Contains(user3, role2.UsersSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2MultiList.Count == 2);
            Assert.True(irole1.UsersSet2MultiList.Count == 1);
            Assert.True(iuser2.RolesSet2MultiList.Count == 0);
            Assert.True(irole2.UsersSet2MultiList.Count == 4);
            Assert.True(iuser3.RolesSet2MultiList.Count == 1);
            Assert.True(irole3.UsersSet2MultiList.Count == 0);
            Assert.Contains(irole1, iuser1.RolesSet2MultiList);
            Assert.Contains(iuser1, irole1.UsersSet2MultiList);
            Assert.Contains(irole2, iuser1.RolesSet2MultiList);
            Assert.Contains(iuser1, irole2.UsersSet2MultiList);
            Assert.Contains(irole2, iuser3.RolesSet2MultiList);
            Assert.Contains(iuser3, irole2.UsersSet2MultiList);
        }


        [Fact]
        public void TestSet2MultiListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesSet2MultiList.Add(role1);
            user1.RolesSet2MultiList.Add(role1);
            user1.RolesSet2MultiList.Add(role2);
            user1.RolesSet2MultiList.Add(role2);
            role2.UsersSet2MultiList.Add(user1);
            role2.UsersSet2MultiList.Add(user1);
            role2.UsersSet2MultiList.Add(user2);
            role2.UsersSet2MultiList.Add(user2);
            role2.UsersSet2MultiList.Add(user3);
            Assert.True(user1.RolesSet2MultiList.Count == 2);
            Assert.True(role1.UsersSet2MultiList.Count == 1);
            Assert.True(user2.RolesSet2MultiList.Count == 1);
            Assert.True(role2.UsersSet2MultiList.Count == 6);
            Assert.True(user3.RolesSet2MultiList.Count == 1);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesSet2MultiList);
            Assert.Contains(user1, role1.UsersSet2MultiList);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            Assert.Contains(role2, user2.RolesSet2MultiList);
            Assert.Contains(user2, role2.UsersSet2MultiList);
            Assert.Contains(role2, user3.RolesSet2MultiList);
            Assert.Contains(user3, role2.UsersSet2MultiList);
            user1.RolesSet2MultiList.Remove(role1);
            Assert.True(user1.RolesSet2MultiList.Count == 1);
            Assert.True(role1.UsersSet2MultiList.Count == 0);
            Assert.True(user2.RolesSet2MultiList.Count == 1);
            Assert.True(role2.UsersSet2MultiList.Count == 6);
            Assert.True(user3.RolesSet2MultiList.Count == 1);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            Assert.Contains(role2, user2.RolesSet2MultiList);
            Assert.Contains(user2, role2.UsersSet2MultiList);
            Assert.Contains(role2, user3.RolesSet2MultiList);
            Assert.Contains(user3, role2.UsersSet2MultiList);
            role2.UsersSet2MultiList.Remove(user2);
            Assert.True(user1.RolesSet2MultiList.Count == 1);
            Assert.True(role1.UsersSet2MultiList.Count == 0);
            Assert.True(user2.RolesSet2MultiList.Count == 1);
            Assert.True(role2.UsersSet2MultiList.Count == 5);
            Assert.True(user3.RolesSet2MultiList.Count == 1);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            Assert.Contains(role2, user2.RolesSet2MultiList);
            Assert.Contains(user2, role2.UsersSet2MultiList);
            Assert.Contains(role2, user3.RolesSet2MultiList);
            Assert.Contains(user3, role2.UsersSet2MultiList);
            role2.UsersSet2MultiList.Remove(user2);
            Assert.True(user1.RolesSet2MultiList.Count == 1);
            Assert.True(role1.UsersSet2MultiList.Count == 0);
            Assert.True(user2.RolesSet2MultiList.Count == 0);
            Assert.True(role2.UsersSet2MultiList.Count == 4);
            Assert.True(user3.RolesSet2MultiList.Count == 1);
            Assert.True(role3.UsersSet2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesSet2MultiList);
            Assert.Contains(user1, role2.UsersSet2MultiList);
            Assert.Contains(role2, user3.RolesSet2MultiList);
            Assert.Contains(user3, role2.UsersSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesSet2MultiList.Count == 1);
            Assert.True(irole1.UsersSet2MultiList.Count == 0);
            Assert.True(iuser2.RolesSet2MultiList.Count == 0);
            Assert.True(irole2.UsersSet2MultiList.Count == 4);
            Assert.True(iuser3.RolesSet2MultiList.Count == 1);
            Assert.True(irole3.UsersSet2MultiList.Count == 0);
            Assert.Contains(irole2, iuser1.RolesSet2MultiList);
            Assert.Contains(iuser1, irole2.UsersSet2MultiList);
            Assert.Contains(irole2, iuser3.RolesSet2MultiList);
            Assert.Contains(iuser3, irole2.UsersSet2MultiList);
        }

        [Fact]
        public void TestList2Set()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesList2Set.Add(role);
            Assert.True(user.RolesList2Set.Count == 1);
            Assert.True(role.UsersList2Set.Count == 1);
            Assert.Contains(role, user.RolesList2Set);
            Assert.Contains(user, role.UsersList2Set);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesList2Set.Count == 1);
            Assert.True(irole.UsersList2Set.Count == 1);
            Assert.Contains(irole, iuser.RolesList2Set);
            Assert.Contains(iuser, irole.UsersList2Set);
        }

        [Fact]
        public void TestList2SetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2Set.Add(role1);
            Assert.True(user1.RolesList2Set.Count == 1);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 0);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            user1.RolesList2Set.Add(role1);
            Assert.True(user1.RolesList2Set.Count == 1);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 0);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            user1.RolesList2Set.Add(role2);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 1);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            user1.RolesList2Set.Add(role2);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 1);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            role2.UsersList2Set.Add(user1);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 1);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            role2.UsersList2Set.Add(user1);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 1);
            Assert.True(user3.RolesList2Set.Count == 0);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            role2.UsersList2Set.Add(user3);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 2);
            Assert.True(user3.RolesList2Set.Count == 1);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            Assert.Contains(role2, user3.RolesList2Set);
            Assert.Contains(user3, role2.UsersList2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2Set.Count == 2);
            Assert.True(irole1.UsersList2Set.Count == 1);
            Assert.True(iuser2.RolesList2Set.Count == 0);
            Assert.True(irole2.UsersList2Set.Count == 2);
            Assert.True(iuser3.RolesList2Set.Count == 1);
            Assert.True(irole3.UsersList2Set.Count == 0);
            Assert.Contains(irole1, iuser1.RolesList2Set);
            Assert.Contains(iuser1, irole1.UsersList2Set);
            Assert.Contains(irole2, iuser1.RolesList2Set);
            Assert.Contains(iuser1, irole2.UsersList2Set);
            Assert.Contains(irole2, iuser3.RolesList2Set);
            Assert.Contains(iuser3, irole2.UsersList2Set);
        }


        [Fact]
        public void TestList2SetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2Set.Add(role1);
            user1.RolesList2Set.Add(role1);
            user1.RolesList2Set.Add(role2);
            user1.RolesList2Set.Add(role2);
            role2.UsersList2Set.Add(user1);
            role2.UsersList2Set.Add(user1);
            role2.UsersList2Set.Add(user2);
            role2.UsersList2Set.Add(user2);
            role2.UsersList2Set.Add(user3);
            Assert.True(user1.RolesList2Set.Count == 2);
            Assert.True(role1.UsersList2Set.Count == 1);
            Assert.True(user2.RolesList2Set.Count == 1);
            Assert.True(role2.UsersList2Set.Count == 3);
            Assert.True(user3.RolesList2Set.Count == 1);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesList2Set);
            Assert.Contains(user1, role1.UsersList2Set);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            Assert.Contains(role2, user2.RolesList2Set);
            Assert.Contains(user2, role2.UsersList2Set);
            Assert.Contains(role2, user3.RolesList2Set);
            Assert.Contains(user3, role2.UsersList2Set);
            user1.RolesList2Set.Remove(role1);
            Assert.True(user1.RolesList2Set.Count == 1);
            Assert.True(role1.UsersList2Set.Count == 0);
            Assert.True(user2.RolesList2Set.Count == 1);
            Assert.True(role2.UsersList2Set.Count == 3);
            Assert.True(user3.RolesList2Set.Count == 1);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            Assert.Contains(role2, user2.RolesList2Set);
            Assert.Contains(user2, role2.UsersList2Set);
            Assert.Contains(role2, user3.RolesList2Set);
            Assert.Contains(user3, role2.UsersList2Set);
            role2.UsersList2Set.Remove(user2);
            Assert.True(user1.RolesList2Set.Count == 1);
            Assert.True(role1.UsersList2Set.Count == 0);
            Assert.True(user2.RolesList2Set.Count == 0);
            Assert.True(role2.UsersList2Set.Count == 2);
            Assert.True(user3.RolesList2Set.Count == 1);
            Assert.True(role3.UsersList2Set.Count == 0);
            Assert.Contains(role2, user1.RolesList2Set);
            Assert.Contains(user1, role2.UsersList2Set);
            Assert.Contains(role2, user3.RolesList2Set);
            Assert.Contains(user3, role2.UsersList2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2Set.Count == 1);
            Assert.True(irole1.UsersList2Set.Count == 0);
            Assert.True(iuser2.RolesList2Set.Count == 0);
            Assert.True(irole2.UsersList2Set.Count == 2);
            Assert.True(iuser3.RolesList2Set.Count == 1);
            Assert.True(irole3.UsersList2Set.Count == 0);
            Assert.Contains(irole2, iuser1.RolesList2Set);
            Assert.Contains(iuser1, irole2.UsersList2Set);
            Assert.Contains(irole2, iuser3.RolesList2Set);
            Assert.Contains(iuser3, irole2.UsersList2Set);
        }

        [Fact]
        public void TestList2List()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesList2List.Add(role);
            Assert.True(user.RolesList2List.Count == 1);
            Assert.True(role.UsersList2List.Count == 1);
            Assert.Contains(role, user.RolesList2List);
            Assert.Contains(user, role.UsersList2List);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesList2List.Count == 1);
            Assert.True(irole.UsersList2List.Count == 1);
            Assert.Contains(irole, iuser.RolesList2List);
            Assert.Contains(iuser, irole.UsersList2List);
        }

        [Fact]
        public void TestList2ListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2List.Add(role1);
            Assert.True(user1.RolesList2List.Count == 1);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 0);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            user1.RolesList2List.Add(role1);
            Assert.True(user1.RolesList2List.Count == 1);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 0);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            user1.RolesList2List.Add(role2);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 1);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            user1.RolesList2List.Add(role2);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 1);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            role2.UsersList2List.Add(user1);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 1);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            role2.UsersList2List.Add(user1);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 1);
            Assert.True(user3.RolesList2List.Count == 0);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            role2.UsersList2List.Add(user3);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 2);
            Assert.True(user3.RolesList2List.Count == 1);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            Assert.Contains(role2, user3.RolesList2List);
            Assert.Contains(user3, role2.UsersList2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2List.Count == 2);
            Assert.True(irole1.UsersList2List.Count == 1);
            Assert.True(iuser2.RolesList2List.Count == 0);
            Assert.True(irole2.UsersList2List.Count == 2);
            Assert.True(iuser3.RolesList2List.Count == 1);
            Assert.True(irole3.UsersList2List.Count == 0);
            Assert.Contains(irole1, iuser1.RolesList2List);
            Assert.Contains(iuser1, irole1.UsersList2List);
            Assert.Contains(irole2, iuser1.RolesList2List);
            Assert.Contains(iuser1, irole2.UsersList2List);
            Assert.Contains(irole2, iuser3.RolesList2List);
            Assert.Contains(iuser3, irole2.UsersList2List);
        }


        [Fact]
        public void TestList2ListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2List.Add(role1);
            user1.RolesList2List.Add(role1);
            user1.RolesList2List.Add(role2);
            user1.RolesList2List.Add(role2);
            role2.UsersList2List.Add(user1);
            role2.UsersList2List.Add(user1);
            role2.UsersList2List.Add(user2);
            role2.UsersList2List.Add(user2);
            role2.UsersList2List.Add(user3);
            Assert.True(user1.RolesList2List.Count == 2);
            Assert.True(role1.UsersList2List.Count == 1);
            Assert.True(user2.RolesList2List.Count == 1);
            Assert.True(role2.UsersList2List.Count == 3);
            Assert.True(user3.RolesList2List.Count == 1);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role1, user1.RolesList2List);
            Assert.Contains(user1, role1.UsersList2List);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            Assert.Contains(role2, user2.RolesList2List);
            Assert.Contains(user2, role2.UsersList2List);
            Assert.Contains(role2, user3.RolesList2List);
            Assert.Contains(user3, role2.UsersList2List);
            user1.RolesList2List.Remove(role1);
            Assert.True(user1.RolesList2List.Count == 1);
            Assert.True(role1.UsersList2List.Count == 0);
            Assert.True(user2.RolesList2List.Count == 1);
            Assert.True(role2.UsersList2List.Count == 3);
            Assert.True(user3.RolesList2List.Count == 1);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            Assert.Contains(role2, user2.RolesList2List);
            Assert.Contains(user2, role2.UsersList2List);
            Assert.Contains(role2, user3.RolesList2List);
            Assert.Contains(user3, role2.UsersList2List);
            role2.UsersList2List.Remove(user2);
            Assert.True(user1.RolesList2List.Count == 1);
            Assert.True(role1.UsersList2List.Count == 0);
            Assert.True(user2.RolesList2List.Count == 0);
            Assert.True(role2.UsersList2List.Count == 2);
            Assert.True(user3.RolesList2List.Count == 1);
            Assert.True(role3.UsersList2List.Count == 0);
            Assert.Contains(role2, user1.RolesList2List);
            Assert.Contains(user1, role2.UsersList2List);
            Assert.Contains(role2, user3.RolesList2List);
            Assert.Contains(user3, role2.UsersList2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2List.Count == 1);
            Assert.True(irole1.UsersList2List.Count == 0);
            Assert.True(iuser2.RolesList2List.Count == 0);
            Assert.True(irole2.UsersList2List.Count == 2);
            Assert.True(iuser3.RolesList2List.Count == 1);
            Assert.True(irole3.UsersList2List.Count == 0);
            Assert.Contains(irole2, iuser1.RolesList2List);
            Assert.Contains(iuser1, irole2.UsersList2List);
            Assert.Contains(irole2, iuser3.RolesList2List);
            Assert.Contains(iuser3, irole2.UsersList2List);
        }

        [Fact]
        public void TestList2MultiSet()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesList2MultiSet.Add(role);
            Assert.True(user.RolesList2MultiSet.Count == 1);
            Assert.True(role.UsersList2MultiSet.Count == 1);
            Assert.Contains(role, user.RolesList2MultiSet);
            Assert.Contains(user, role.UsersList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesList2MultiSet.Count == 1);
            Assert.True(irole.UsersList2MultiSet.Count == 1);
            Assert.Contains(irole, iuser.RolesList2MultiSet);
            Assert.Contains(iuser, irole.UsersList2MultiSet);
        }

        [Fact]
        public void TestList2MultiSetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2MultiSet.Add(role1);
            Assert.True(user1.RolesList2MultiSet.Count == 1);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 0);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            user1.RolesList2MultiSet.Add(role1);
            Assert.True(user1.RolesList2MultiSet.Count == 1);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 0);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            user1.RolesList2MultiSet.Add(role2);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 1);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            user1.RolesList2MultiSet.Add(role2);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 1);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            role2.UsersList2MultiSet.Add(user1);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 2);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            role2.UsersList2MultiSet.Add(user1);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 3);
            Assert.True(user3.RolesList2MultiSet.Count == 0);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            role2.UsersList2MultiSet.Add(user3);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 4);
            Assert.True(user3.RolesList2MultiSet.Count == 1);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            Assert.Contains(role2, user3.RolesList2MultiSet);
            Assert.Contains(user3, role2.UsersList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2MultiSet.Count == 2);
            Assert.True(irole1.UsersList2MultiSet.Count == 1);
            Assert.True(iuser2.RolesList2MultiSet.Count == 0);
            Assert.True(irole2.UsersList2MultiSet.Count == 4);
            Assert.True(iuser3.RolesList2MultiSet.Count == 1);
            Assert.True(irole3.UsersList2MultiSet.Count == 0);
            Assert.Contains(irole1, iuser1.RolesList2MultiSet);
            Assert.Contains(iuser1, irole1.UsersList2MultiSet);
            Assert.Contains(irole2, iuser1.RolesList2MultiSet);
            Assert.Contains(iuser1, irole2.UsersList2MultiSet);
            Assert.Contains(irole2, iuser3.RolesList2MultiSet);
            Assert.Contains(iuser3, irole2.UsersList2MultiSet);
        }


        [Fact]
        public void TestList2MultiSetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2MultiSet.Add(role1);
            user1.RolesList2MultiSet.Add(role1);
            user1.RolesList2MultiSet.Add(role2);
            user1.RolesList2MultiSet.Add(role2);
            role2.UsersList2MultiSet.Add(user1);
            role2.UsersList2MultiSet.Add(user1);
            role2.UsersList2MultiSet.Add(user2);
            role2.UsersList2MultiSet.Add(user2);
            role2.UsersList2MultiSet.Add(user3);
            Assert.True(user1.RolesList2MultiSet.Count == 2);
            Assert.True(role1.UsersList2MultiSet.Count == 1);
            Assert.True(user2.RolesList2MultiSet.Count == 1);
            Assert.True(role2.UsersList2MultiSet.Count == 6);
            Assert.True(user3.RolesList2MultiSet.Count == 1);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiSet);
            Assert.Contains(user1, role1.UsersList2MultiSet);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            Assert.Contains(role2, user2.RolesList2MultiSet);
            Assert.Contains(user2, role2.UsersList2MultiSet);
            Assert.Contains(role2, user3.RolesList2MultiSet);
            Assert.Contains(user3, role2.UsersList2MultiSet);
            user1.RolesList2MultiSet.Remove(role1);
            Assert.True(user1.RolesList2MultiSet.Count == 1);
            Assert.True(role1.UsersList2MultiSet.Count == 0);
            Assert.True(user2.RolesList2MultiSet.Count == 1);
            Assert.True(role2.UsersList2MultiSet.Count == 6);
            Assert.True(user3.RolesList2MultiSet.Count == 1);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            Assert.Contains(role2, user2.RolesList2MultiSet);
            Assert.Contains(user2, role2.UsersList2MultiSet);
            Assert.Contains(role2, user3.RolesList2MultiSet);
            Assert.Contains(user3, role2.UsersList2MultiSet);
            role2.UsersList2MultiSet.Remove(user2);
            Assert.True(user1.RolesList2MultiSet.Count == 1);
            Assert.True(role1.UsersList2MultiSet.Count == 0);
            Assert.True(user2.RolesList2MultiSet.Count == 1);
            Assert.True(role2.UsersList2MultiSet.Count == 5);
            Assert.True(user3.RolesList2MultiSet.Count == 1);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            Assert.Contains(role2, user2.RolesList2MultiSet);
            Assert.Contains(user2, role2.UsersList2MultiSet);
            Assert.Contains(role2, user3.RolesList2MultiSet);
            Assert.Contains(user3, role2.UsersList2MultiSet);
            role2.UsersList2MultiSet.Remove(user2);
            Assert.True(user1.RolesList2MultiSet.Count == 1);
            Assert.True(role1.UsersList2MultiSet.Count == 0);
            Assert.True(user2.RolesList2MultiSet.Count == 0);
            Assert.True(role2.UsersList2MultiSet.Count == 4);
            Assert.True(user3.RolesList2MultiSet.Count == 1);
            Assert.True(role3.UsersList2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiSet);
            Assert.Contains(user1, role2.UsersList2MultiSet);
            Assert.Contains(role2, user3.RolesList2MultiSet);
            Assert.Contains(user3, role2.UsersList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2MultiSet.Count == 1);
            Assert.True(irole1.UsersList2MultiSet.Count == 0);
            Assert.True(iuser2.RolesList2MultiSet.Count == 0);
            Assert.True(irole2.UsersList2MultiSet.Count == 4);
            Assert.True(iuser3.RolesList2MultiSet.Count == 1);
            Assert.True(irole3.UsersList2MultiSet.Count == 0);
            Assert.Contains(irole2, iuser1.RolesList2MultiSet);
            Assert.Contains(iuser1, irole2.UsersList2MultiSet);
            Assert.Contains(irole2, iuser3.RolesList2MultiSet);
            Assert.Contains(iuser3, irole2.UsersList2MultiSet);
        }

        [Fact]
        public void TestList2MultiList()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesList2MultiList.Add(role);
            Assert.True(user.RolesList2MultiList.Count == 1);
            Assert.True(role.UsersList2MultiList.Count == 1);
            Assert.Contains(role, user.RolesList2MultiList);
            Assert.Contains(user, role.UsersList2MultiList);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesList2MultiList.Count == 1);
            Assert.True(irole.UsersList2MultiList.Count == 1);
            Assert.Contains(irole, iuser.RolesList2MultiList);
            Assert.Contains(iuser, irole.UsersList2MultiList);
        }

        [Fact]
        public void TestList2MultiListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2MultiList.Add(role1);
            Assert.True(user1.RolesList2MultiList.Count == 1);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 0);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            user1.RolesList2MultiList.Add(role1);
            Assert.True(user1.RolesList2MultiList.Count == 1);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 0);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            user1.RolesList2MultiList.Add(role2);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 1);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            user1.RolesList2MultiList.Add(role2);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 1);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            role2.UsersList2MultiList.Add(user1);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 2);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            role2.UsersList2MultiList.Add(user1);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 3);
            Assert.True(user3.RolesList2MultiList.Count == 0);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            role2.UsersList2MultiList.Add(user3);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 4);
            Assert.True(user3.RolesList2MultiList.Count == 1);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            Assert.Contains(role2, user3.RolesList2MultiList);
            Assert.Contains(user3, role2.UsersList2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2MultiList.Count == 2);
            Assert.True(irole1.UsersList2MultiList.Count == 1);
            Assert.True(iuser2.RolesList2MultiList.Count == 0);
            Assert.True(irole2.UsersList2MultiList.Count == 4);
            Assert.True(iuser3.RolesList2MultiList.Count == 1);
            Assert.True(irole3.UsersList2MultiList.Count == 0);
            Assert.Contains(irole1, iuser1.RolesList2MultiList);
            Assert.Contains(iuser1, irole1.UsersList2MultiList);
            Assert.Contains(irole2, iuser1.RolesList2MultiList);
            Assert.Contains(iuser1, irole2.UsersList2MultiList);
            Assert.Contains(irole2, iuser3.RolesList2MultiList);
            Assert.Contains(iuser3, irole2.UsersList2MultiList);
        }


        [Fact]
        public void TestList2MultiListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesList2MultiList.Add(role1);
            user1.RolesList2MultiList.Add(role1);
            user1.RolesList2MultiList.Add(role2);
            user1.RolesList2MultiList.Add(role2);
            role2.UsersList2MultiList.Add(user1);
            role2.UsersList2MultiList.Add(user1);
            role2.UsersList2MultiList.Add(user2);
            role2.UsersList2MultiList.Add(user2);
            role2.UsersList2MultiList.Add(user3);
            Assert.True(user1.RolesList2MultiList.Count == 2);
            Assert.True(role1.UsersList2MultiList.Count == 1);
            Assert.True(user2.RolesList2MultiList.Count == 1);
            Assert.True(role2.UsersList2MultiList.Count == 6);
            Assert.True(user3.RolesList2MultiList.Count == 1);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesList2MultiList);
            Assert.Contains(user1, role1.UsersList2MultiList);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            Assert.Contains(role2, user2.RolesList2MultiList);
            Assert.Contains(user2, role2.UsersList2MultiList);
            Assert.Contains(role2, user3.RolesList2MultiList);
            Assert.Contains(user3, role2.UsersList2MultiList);
            user1.RolesList2MultiList.Remove(role1);
            Assert.True(user1.RolesList2MultiList.Count == 1);
            Assert.True(role1.UsersList2MultiList.Count == 0);
            Assert.True(user2.RolesList2MultiList.Count == 1);
            Assert.True(role2.UsersList2MultiList.Count == 6);
            Assert.True(user3.RolesList2MultiList.Count == 1);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            Assert.Contains(role2, user2.RolesList2MultiList);
            Assert.Contains(user2, role2.UsersList2MultiList);
            Assert.Contains(role2, user3.RolesList2MultiList);
            Assert.Contains(user3, role2.UsersList2MultiList);
            role2.UsersList2MultiList.Remove(user2);
            Assert.True(user1.RolesList2MultiList.Count == 1);
            Assert.True(role1.UsersList2MultiList.Count == 0);
            Assert.True(user2.RolesList2MultiList.Count == 1);
            Assert.True(role2.UsersList2MultiList.Count == 5);
            Assert.True(user3.RolesList2MultiList.Count == 1);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            Assert.Contains(role2, user2.RolesList2MultiList);
            Assert.Contains(user2, role2.UsersList2MultiList);
            Assert.Contains(role2, user3.RolesList2MultiList);
            Assert.Contains(user3, role2.UsersList2MultiList);
            role2.UsersList2MultiList.Remove(user2);
            Assert.True(user1.RolesList2MultiList.Count == 1);
            Assert.True(role1.UsersList2MultiList.Count == 0);
            Assert.True(user2.RolesList2MultiList.Count == 0);
            Assert.True(role2.UsersList2MultiList.Count == 4);
            Assert.True(user3.RolesList2MultiList.Count == 1);
            Assert.True(role3.UsersList2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesList2MultiList);
            Assert.Contains(user1, role2.UsersList2MultiList);
            Assert.Contains(role2, user3.RolesList2MultiList);
            Assert.Contains(user3, role2.UsersList2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesList2MultiList.Count == 1);
            Assert.True(irole1.UsersList2MultiList.Count == 0);
            Assert.True(iuser2.RolesList2MultiList.Count == 0);
            Assert.True(irole2.UsersList2MultiList.Count == 4);
            Assert.True(iuser3.RolesList2MultiList.Count == 1);
            Assert.True(irole3.UsersList2MultiList.Count == 0);
            Assert.Contains(irole2, iuser1.RolesList2MultiList);
            Assert.Contains(iuser1, irole2.UsersList2MultiList);
            Assert.Contains(irole2, iuser3.RolesList2MultiList);
            Assert.Contains(iuser3, irole2.UsersList2MultiList);
        }

        [Fact]
        public void TestMultiSet2Set()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiSet2Set.Add(role);
            Assert.True(user.RolesMultiSet2Set.Count == 1);
            Assert.True(role.UsersMultiSet2Set.Count == 1);
            Assert.Contains(role, user.RolesMultiSet2Set);
            Assert.Contains(user, role.UsersMultiSet2Set);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiSet2Set.Count == 1);
            Assert.True(irole.UsersMultiSet2Set.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiSet2Set);
            Assert.Contains(iuser, irole.UsersMultiSet2Set);
        }

        [Fact]
        public void TestMultiSet2SetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2Set.Add(role1);
            Assert.True(user1.RolesMultiSet2Set.Count == 1);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 0);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            user1.RolesMultiSet2Set.Add(role1);
            Assert.True(user1.RolesMultiSet2Set.Count == 2);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 0);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            user1.RolesMultiSet2Set.Add(role2);
            Assert.True(user1.RolesMultiSet2Set.Count == 3);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 1);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            user1.RolesMultiSet2Set.Add(role2);
            Assert.True(user1.RolesMultiSet2Set.Count == 4);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 1);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            role2.UsersMultiSet2Set.Add(user1);
            Assert.True(user1.RolesMultiSet2Set.Count == 4);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 1);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            role2.UsersMultiSet2Set.Add(user1);
            Assert.True(user1.RolesMultiSet2Set.Count == 4);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 1);
            Assert.True(user3.RolesMultiSet2Set.Count == 0);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            role2.UsersMultiSet2Set.Add(user3);
            Assert.True(user1.RolesMultiSet2Set.Count == 4);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 2);
            Assert.True(user3.RolesMultiSet2Set.Count == 1);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user3.RolesMultiSet2Set);
            Assert.Contains(user3, role2.UsersMultiSet2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2Set.Count == 4);
            Assert.True(irole1.UsersMultiSet2Set.Count == 1);
            Assert.True(iuser2.RolesMultiSet2Set.Count == 0);
            Assert.True(irole2.UsersMultiSet2Set.Count == 2);
            Assert.True(iuser3.RolesMultiSet2Set.Count == 1);
            Assert.True(irole3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiSet2Set);
            Assert.Contains(iuser1, irole1.UsersMultiSet2Set);
            Assert.Contains(irole2, iuser1.RolesMultiSet2Set);
            Assert.Contains(iuser1, irole2.UsersMultiSet2Set);
            Assert.Contains(irole2, iuser3.RolesMultiSet2Set);
            Assert.Contains(iuser3, irole2.UsersMultiSet2Set);
        }


        [Fact]
        public void TestMultiSet2SetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2Set.Add(role1);
            user1.RolesMultiSet2Set.Add(role1);
            user1.RolesMultiSet2Set.Add(role2);
            user1.RolesMultiSet2Set.Add(role2);
            role2.UsersMultiSet2Set.Add(user1);
            role2.UsersMultiSet2Set.Add(user1);
            role2.UsersMultiSet2Set.Add(user2);
            role2.UsersMultiSet2Set.Add(user2);
            role2.UsersMultiSet2Set.Add(user3);
            Assert.True(user1.RolesMultiSet2Set.Count == 4);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 1);
            Assert.True(role2.UsersMultiSet2Set.Count == 3);
            Assert.True(user3.RolesMultiSet2Set.Count == 1);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role1.UsersMultiSet2Set);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user2.RolesMultiSet2Set);
            Assert.Contains(user2, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user3.RolesMultiSet2Set);
            Assert.Contains(user3, role2.UsersMultiSet2Set);
            user1.RolesMultiSet2Set.Remove(role1);
            Assert.True(user1.RolesMultiSet2Set.Count == 3);
            Assert.True(role1.UsersMultiSet2Set.Count == 1);
            Assert.True(user2.RolesMultiSet2Set.Count == 1);
            Assert.True(role2.UsersMultiSet2Set.Count == 3);
            Assert.True(user3.RolesMultiSet2Set.Count == 1);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user2.RolesMultiSet2Set);
            Assert.Contains(user2, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user3.RolesMultiSet2Set);
            Assert.Contains(user3, role2.UsersMultiSet2Set);
            user1.RolesMultiSet2Set.Remove(role1);
            Assert.True(user1.RolesMultiSet2Set.Count == 2);
            Assert.True(role1.UsersMultiSet2Set.Count == 0);
            Assert.True(user2.RolesMultiSet2Set.Count == 1);
            Assert.True(role2.UsersMultiSet2Set.Count == 3);
            Assert.True(user3.RolesMultiSet2Set.Count == 1);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            role2.UsersMultiSet2Set.Remove(user2);
            Assert.True(user1.RolesMultiSet2Set.Count == 2);
            Assert.True(role1.UsersMultiSet2Set.Count == 0);
            Assert.True(user2.RolesMultiSet2Set.Count == 0);
            Assert.True(role2.UsersMultiSet2Set.Count == 2);
            Assert.True(user3.RolesMultiSet2Set.Count == 1);
            Assert.True(role3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2Set);
            Assert.Contains(user1, role2.UsersMultiSet2Set);
            Assert.Contains(role2, user3.RolesMultiSet2Set);
            Assert.Contains(user3, role2.UsersMultiSet2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2Set.Count == 2);
            Assert.True(irole1.UsersMultiSet2Set.Count == 0);
            Assert.True(iuser2.RolesMultiSet2Set.Count == 0);
            Assert.True(irole2.UsersMultiSet2Set.Count == 2);
            Assert.True(iuser3.RolesMultiSet2Set.Count == 1);
            Assert.True(irole3.UsersMultiSet2Set.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiSet2Set);
            Assert.Contains(iuser1, irole2.UsersMultiSet2Set);
            Assert.Contains(irole2, iuser3.RolesMultiSet2Set);
            Assert.Contains(iuser3, irole2.UsersMultiSet2Set);
        }

        [Fact]
        public void TestMultiSet2List()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiSet2List.Add(role);
            Assert.True(user.RolesMultiSet2List.Count == 1);
            Assert.True(role.UsersMultiSet2List.Count == 1);
            Assert.Contains(role, user.RolesMultiSet2List);
            Assert.Contains(user, role.UsersMultiSet2List);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiSet2List.Count == 1);
            Assert.True(irole.UsersMultiSet2List.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiSet2List);
            Assert.Contains(iuser, irole.UsersMultiSet2List);
        }

        [Fact]
        public void TestMultiSet2ListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2List.Add(role1);
            Assert.True(user1.RolesMultiSet2List.Count == 1);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 0);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            user1.RolesMultiSet2List.Add(role1);
            Assert.True(user1.RolesMultiSet2List.Count == 2);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 0);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            user1.RolesMultiSet2List.Add(role2);
            Assert.True(user1.RolesMultiSet2List.Count == 3);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 1);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            user1.RolesMultiSet2List.Add(role2);
            Assert.True(user1.RolesMultiSet2List.Count == 4);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 1);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            role2.UsersMultiSet2List.Add(user1);
            Assert.True(user1.RolesMultiSet2List.Count == 4);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 1);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            role2.UsersMultiSet2List.Add(user1);
            Assert.True(user1.RolesMultiSet2List.Count == 4);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 1);
            Assert.True(user3.RolesMultiSet2List.Count == 0);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            role2.UsersMultiSet2List.Add(user3);
            Assert.True(user1.RolesMultiSet2List.Count == 4);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 2);
            Assert.True(user3.RolesMultiSet2List.Count == 1);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            Assert.Contains(role2, user3.RolesMultiSet2List);
            Assert.Contains(user3, role2.UsersMultiSet2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2List.Count == 4);
            Assert.True(irole1.UsersMultiSet2List.Count == 1);
            Assert.True(iuser2.RolesMultiSet2List.Count == 0);
            Assert.True(irole2.UsersMultiSet2List.Count == 2);
            Assert.True(iuser3.RolesMultiSet2List.Count == 1);
            Assert.True(irole3.UsersMultiSet2List.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiSet2List);
            Assert.Contains(iuser1, irole1.UsersMultiSet2List);
            Assert.Contains(irole2, iuser1.RolesMultiSet2List);
            Assert.Contains(iuser1, irole2.UsersMultiSet2List);
            Assert.Contains(irole2, iuser3.RolesMultiSet2List);
            Assert.Contains(iuser3, irole2.UsersMultiSet2List);
        }


        [Fact]
        public void TestMultiSet2ListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2List.Add(role1);
            user1.RolesMultiSet2List.Add(role1);
            user1.RolesMultiSet2List.Add(role2);
            user1.RolesMultiSet2List.Add(role2);
            role2.UsersMultiSet2List.Add(user1);
            role2.UsersMultiSet2List.Add(user1);
            role2.UsersMultiSet2List.Add(user2);
            role2.UsersMultiSet2List.Add(user2);
            role2.UsersMultiSet2List.Add(user3);
            Assert.True(user1.RolesMultiSet2List.Count == 4);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 1);
            Assert.True(role2.UsersMultiSet2List.Count == 3);
            Assert.True(user3.RolesMultiSet2List.Count == 1);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2List);
            Assert.Contains(user1, role1.UsersMultiSet2List);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            Assert.Contains(role2, user2.RolesMultiSet2List);
            Assert.Contains(user2, role2.UsersMultiSet2List);
            Assert.Contains(role2, user3.RolesMultiSet2List);
            Assert.Contains(user3, role2.UsersMultiSet2List);
            user1.RolesMultiSet2List.Remove(role1);
            Assert.True(user1.RolesMultiSet2List.Count == 3);
            Assert.True(role1.UsersMultiSet2List.Count == 1);
            Assert.True(user2.RolesMultiSet2List.Count == 1);
            Assert.True(role2.UsersMultiSet2List.Count == 3);
            Assert.True(user3.RolesMultiSet2List.Count == 1);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            Assert.Contains(role2, user2.RolesMultiSet2List);
            Assert.Contains(user2, role2.UsersMultiSet2List);
            Assert.Contains(role2, user3.RolesMultiSet2List);
            Assert.Contains(user3, role2.UsersMultiSet2List);
            user1.RolesMultiSet2List.Remove(role1);
            Assert.True(user1.RolesMultiSet2List.Count == 2);
            Assert.True(role1.UsersMultiSet2List.Count == 0);
            Assert.True(user2.RolesMultiSet2List.Count == 1);
            Assert.True(role2.UsersMultiSet2List.Count == 3);
            Assert.True(user3.RolesMultiSet2List.Count == 1);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            role2.UsersMultiSet2List.Remove(user2);
            Assert.True(user1.RolesMultiSet2List.Count == 2);
            Assert.True(role1.UsersMultiSet2List.Count == 0);
            Assert.True(user2.RolesMultiSet2List.Count == 0);
            Assert.True(role2.UsersMultiSet2List.Count == 2);
            Assert.True(user3.RolesMultiSet2List.Count == 1);
            Assert.True(role3.UsersMultiSet2List.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2List);
            Assert.Contains(user1, role2.UsersMultiSet2List);
            Assert.Contains(role2, user3.RolesMultiSet2List);
            Assert.Contains(user3, role2.UsersMultiSet2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2List.Count == 2);
            Assert.True(irole1.UsersMultiSet2List.Count == 0);
            Assert.True(iuser2.RolesMultiSet2List.Count == 0);
            Assert.True(irole2.UsersMultiSet2List.Count == 2);
            Assert.True(iuser3.RolesMultiSet2List.Count == 1);
            Assert.True(irole3.UsersMultiSet2List.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiSet2List);
            Assert.Contains(iuser1, irole2.UsersMultiSet2List);
            Assert.Contains(irole2, iuser3.RolesMultiSet2List);
            Assert.Contains(iuser3, irole2.UsersMultiSet2List);
        }

        [Fact]
        public void TestMultiSet2MultiSet()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiSet2MultiSet.Add(role);
            Assert.True(user.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role.UsersMultiSet2MultiSet.Count == 1);
            Assert.Contains(role, user.RolesMultiSet2MultiSet);
            Assert.Contains(user, role.UsersMultiSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(irole.UsersMultiSet2MultiSet.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiSet2MultiSet);
            Assert.Contains(iuser, irole.UsersMultiSet2MultiSet);
        }

        [Fact]
        public void TestMultiSet2MultiSetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2MultiSet.Add(role1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 0);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            user1.RolesMultiSet2MultiSet.Add(role1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 0);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            user1.RolesMultiSet2MultiSet.Add(role2);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 3);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            user1.RolesMultiSet2MultiSet.Add(role2);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            role2.UsersMultiSet2MultiSet.Add(user1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 2);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            role2.UsersMultiSet2MultiSet.Add(user1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 3);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            role2.UsersMultiSet2MultiSet.Add(user3);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 4);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user3.RolesMultiSet2MultiSet);
            Assert.Contains(user3, role2.UsersMultiSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(irole1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(iuser2.RolesMultiSet2MultiSet.Count == 0);
            Assert.True(irole2.UsersMultiSet2MultiSet.Count == 4);
            Assert.True(iuser3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(irole3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiSet2MultiSet);
            Assert.Contains(iuser1, irole1.UsersMultiSet2MultiSet);
            Assert.Contains(irole2, iuser1.RolesMultiSet2MultiSet);
            Assert.Contains(iuser1, irole2.UsersMultiSet2MultiSet);
            Assert.Contains(irole2, iuser3.RolesMultiSet2MultiSet);
            Assert.Contains(iuser3, irole2.UsersMultiSet2MultiSet);
        }


        [Fact]
        public void TestMultiSet2MultiSetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2MultiSet.Add(role1);
            user1.RolesMultiSet2MultiSet.Add(role1);
            user1.RolesMultiSet2MultiSet.Add(role2);
            user1.RolesMultiSet2MultiSet.Add(role2);
            role2.UsersMultiSet2MultiSet.Add(user1);
            role2.UsersMultiSet2MultiSet.Add(user1);
            role2.UsersMultiSet2MultiSet.Add(user2);
            role2.UsersMultiSet2MultiSet.Add(user2);
            role2.UsersMultiSet2MultiSet.Add(user3);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role1.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user2.RolesMultiSet2MultiSet);
            Assert.Contains(user2, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user3.RolesMultiSet2MultiSet);
            Assert.Contains(user3, role2.UsersMultiSet2MultiSet);
            user1.RolesMultiSet2MultiSet.Remove(role1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 3);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user2.RolesMultiSet2MultiSet);
            Assert.Contains(user2, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user3.RolesMultiSet2MultiSet);
            Assert.Contains(user3, role2.UsersMultiSet2MultiSet);
            user1.RolesMultiSet2MultiSet.Remove(role1);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 0);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            role2.UsersMultiSet2MultiSet.Remove(user2);
            Assert.True(user1.RolesMultiSet2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiSet.Count == 0);
            Assert.True(user2.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiSet.Count == 5);
            Assert.True(user3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2MultiSet);
            Assert.Contains(user1, role2.UsersMultiSet2MultiSet);
            Assert.Contains(role2, user3.RolesMultiSet2MultiSet);
            Assert.Contains(user3, role2.UsersMultiSet2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2MultiSet.Count == 2);
            Assert.True(irole1.UsersMultiSet2MultiSet.Count == 0);
            Assert.True(iuser2.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(irole2.UsersMultiSet2MultiSet.Count == 5);
            Assert.True(iuser3.RolesMultiSet2MultiSet.Count == 1);
            Assert.True(irole3.UsersMultiSet2MultiSet.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiSet2MultiSet);
            Assert.Contains(iuser1, irole2.UsersMultiSet2MultiSet);
            Assert.Contains(irole2, iuser3.RolesMultiSet2MultiSet);
            Assert.Contains(iuser3, irole2.UsersMultiSet2MultiSet);
        }

        [Fact]
        public void TestMultiSet2MultiList()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiSet2MultiList.Add(role);
            Assert.True(user.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role.UsersMultiSet2MultiList.Count == 1);
            Assert.Contains(role, user.RolesMultiSet2MultiList);
            Assert.Contains(user, role.UsersMultiSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiSet2MultiList.Count == 1);
            Assert.True(irole.UsersMultiSet2MultiList.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiSet2MultiList);
            Assert.Contains(iuser, irole.UsersMultiSet2MultiList);
        }

        [Fact]
        public void TestMultiSet2MultiListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2MultiList.Add(role1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 0);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            user1.RolesMultiSet2MultiList.Add(role1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 0);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            user1.RolesMultiSet2MultiList.Add(role2);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 3);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            user1.RolesMultiSet2MultiList.Add(role2);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            role2.UsersMultiSet2MultiList.Add(user1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 2);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            role2.UsersMultiSet2MultiList.Add(user1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 3);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            role2.UsersMultiSet2MultiList.Add(user3);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 4);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user3.RolesMultiSet2MultiList);
            Assert.Contains(user3, role2.UsersMultiSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(irole1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(iuser2.RolesMultiSet2MultiList.Count == 0);
            Assert.True(irole2.UsersMultiSet2MultiList.Count == 4);
            Assert.True(iuser3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(irole3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiSet2MultiList);
            Assert.Contains(iuser1, irole1.UsersMultiSet2MultiList);
            Assert.Contains(irole2, iuser1.RolesMultiSet2MultiList);
            Assert.Contains(iuser1, irole2.UsersMultiSet2MultiList);
            Assert.Contains(irole2, iuser3.RolesMultiSet2MultiList);
            Assert.Contains(iuser3, irole2.UsersMultiSet2MultiList);
        }


        [Fact]
        public void TestMultiSet2MultiListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiSet2MultiList.Add(role1);
            user1.RolesMultiSet2MultiList.Add(role1);
            user1.RolesMultiSet2MultiList.Add(role2);
            user1.RolesMultiSet2MultiList.Add(role2);
            role2.UsersMultiSet2MultiList.Add(user1);
            role2.UsersMultiSet2MultiList.Add(user1);
            role2.UsersMultiSet2MultiList.Add(user2);
            role2.UsersMultiSet2MultiList.Add(user2);
            role2.UsersMultiSet2MultiList.Add(user3);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 4);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role1.UsersMultiSet2MultiList);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user2.RolesMultiSet2MultiList);
            Assert.Contains(user2, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user3.RolesMultiSet2MultiList);
            Assert.Contains(user3, role2.UsersMultiSet2MultiList);
            user1.RolesMultiSet2MultiList.Remove(role1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 3);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 1);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user2.RolesMultiSet2MultiList);
            Assert.Contains(user2, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user3.RolesMultiSet2MultiList);
            Assert.Contains(user3, role2.UsersMultiSet2MultiList);
            user1.RolesMultiSet2MultiList.Remove(role1);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 0);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 6);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            role2.UsersMultiSet2MultiList.Remove(user2);
            Assert.True(user1.RolesMultiSet2MultiList.Count == 2);
            Assert.True(role1.UsersMultiSet2MultiList.Count == 0);
            Assert.True(user2.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role2.UsersMultiSet2MultiList.Count == 5);
            Assert.True(user3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(role3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesMultiSet2MultiList);
            Assert.Contains(user1, role2.UsersMultiSet2MultiList);
            Assert.Contains(role2, user3.RolesMultiSet2MultiList);
            Assert.Contains(user3, role2.UsersMultiSet2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiSet2MultiList.Count == 2);
            Assert.True(irole1.UsersMultiSet2MultiList.Count == 0);
            Assert.True(iuser2.RolesMultiSet2MultiList.Count == 1);
            Assert.True(irole2.UsersMultiSet2MultiList.Count == 5);
            Assert.True(iuser3.RolesMultiSet2MultiList.Count == 1);
            Assert.True(irole3.UsersMultiSet2MultiList.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiSet2MultiList);
            Assert.Contains(iuser1, irole2.UsersMultiSet2MultiList);
            Assert.Contains(irole2, iuser3.RolesMultiSet2MultiList);
            Assert.Contains(iuser3, irole2.UsersMultiSet2MultiList);
        }

        [Fact]
        public void TestMultiList2Set()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiList2Set.Add(role);
            Assert.True(user.RolesMultiList2Set.Count == 1);
            Assert.True(role.UsersMultiList2Set.Count == 1);
            Assert.Contains(role, user.RolesMultiList2Set);
            Assert.Contains(user, role.UsersMultiList2Set);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiList2Set.Count == 1);
            Assert.True(irole.UsersMultiList2Set.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiList2Set);
            Assert.Contains(iuser, irole.UsersMultiList2Set);
        }

        [Fact]
        public void TestMultiList2SetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2Set.Add(role1);
            Assert.True(user1.RolesMultiList2Set.Count == 1);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 0);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            user1.RolesMultiList2Set.Add(role1);
            Assert.True(user1.RolesMultiList2Set.Count == 2);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 0);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            user1.RolesMultiList2Set.Add(role2);
            Assert.True(user1.RolesMultiList2Set.Count == 3);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 1);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            user1.RolesMultiList2Set.Add(role2);
            Assert.True(user1.RolesMultiList2Set.Count == 4);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 1);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            role2.UsersMultiList2Set.Add(user1);
            Assert.True(user1.RolesMultiList2Set.Count == 4);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 1);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            role2.UsersMultiList2Set.Add(user1);
            Assert.True(user1.RolesMultiList2Set.Count == 4);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 1);
            Assert.True(user3.RolesMultiList2Set.Count == 0);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            role2.UsersMultiList2Set.Add(user3);
            Assert.True(user1.RolesMultiList2Set.Count == 4);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 2);
            Assert.True(user3.RolesMultiList2Set.Count == 1);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            Assert.Contains(role2, user3.RolesMultiList2Set);
            Assert.Contains(user3, role2.UsersMultiList2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2Set.Count == 4);
            Assert.True(irole1.UsersMultiList2Set.Count == 1);
            Assert.True(iuser2.RolesMultiList2Set.Count == 0);
            Assert.True(irole2.UsersMultiList2Set.Count == 2);
            Assert.True(iuser3.RolesMultiList2Set.Count == 1);
            Assert.True(irole3.UsersMultiList2Set.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiList2Set);
            Assert.Contains(iuser1, irole1.UsersMultiList2Set);
            Assert.Contains(irole2, iuser1.RolesMultiList2Set);
            Assert.Contains(iuser1, irole2.UsersMultiList2Set);
            Assert.Contains(irole2, iuser3.RolesMultiList2Set);
            Assert.Contains(iuser3, irole2.UsersMultiList2Set);
        }


        [Fact]
        public void TestMultiList2SetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2Set.Add(role1);
            user1.RolesMultiList2Set.Add(role1);
            user1.RolesMultiList2Set.Add(role2);
            user1.RolesMultiList2Set.Add(role2);
            role2.UsersMultiList2Set.Add(user1);
            role2.UsersMultiList2Set.Add(user1);
            role2.UsersMultiList2Set.Add(user2);
            role2.UsersMultiList2Set.Add(user2);
            role2.UsersMultiList2Set.Add(user3);
            Assert.True(user1.RolesMultiList2Set.Count == 4);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 1);
            Assert.True(role2.UsersMultiList2Set.Count == 3);
            Assert.True(user3.RolesMultiList2Set.Count == 1);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2Set);
            Assert.Contains(user1, role1.UsersMultiList2Set);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            Assert.Contains(role2, user2.RolesMultiList2Set);
            Assert.Contains(user2, role2.UsersMultiList2Set);
            Assert.Contains(role2, user3.RolesMultiList2Set);
            Assert.Contains(user3, role2.UsersMultiList2Set);
            user1.RolesMultiList2Set.Remove(role1);
            Assert.True(user1.RolesMultiList2Set.Count == 3);
            Assert.True(role1.UsersMultiList2Set.Count == 1);
            Assert.True(user2.RolesMultiList2Set.Count == 1);
            Assert.True(role2.UsersMultiList2Set.Count == 3);
            Assert.True(user3.RolesMultiList2Set.Count == 1);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            Assert.Contains(role2, user2.RolesMultiList2Set);
            Assert.Contains(user2, role2.UsersMultiList2Set);
            Assert.Contains(role2, user3.RolesMultiList2Set);
            Assert.Contains(user3, role2.UsersMultiList2Set);
            user1.RolesMultiList2Set.Remove(role1);
            Assert.True(user1.RolesMultiList2Set.Count == 2);
            Assert.True(role1.UsersMultiList2Set.Count == 0);
            Assert.True(user2.RolesMultiList2Set.Count == 1);
            Assert.True(role2.UsersMultiList2Set.Count == 3);
            Assert.True(user3.RolesMultiList2Set.Count == 1);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            role2.UsersMultiList2Set.Remove(user2);
            Assert.True(user1.RolesMultiList2Set.Count == 2);
            Assert.True(role1.UsersMultiList2Set.Count == 0);
            Assert.True(user2.RolesMultiList2Set.Count == 0);
            Assert.True(role2.UsersMultiList2Set.Count == 2);
            Assert.True(user3.RolesMultiList2Set.Count == 1);
            Assert.True(role3.UsersMultiList2Set.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2Set);
            Assert.Contains(user1, role2.UsersMultiList2Set);
            Assert.Contains(role2, user3.RolesMultiList2Set);
            Assert.Contains(user3, role2.UsersMultiList2Set);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2Set.Count == 2);
            Assert.True(irole1.UsersMultiList2Set.Count == 0);
            Assert.True(iuser2.RolesMultiList2Set.Count == 0);
            Assert.True(irole2.UsersMultiList2Set.Count == 2);
            Assert.True(iuser3.RolesMultiList2Set.Count == 1);
            Assert.True(irole3.UsersMultiList2Set.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiList2Set);
            Assert.Contains(iuser1, irole2.UsersMultiList2Set);
            Assert.Contains(irole2, iuser3.RolesMultiList2Set);
            Assert.Contains(iuser3, irole2.UsersMultiList2Set);
        }

        [Fact]
        public void TestMultiList2List()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiList2List.Add(role);
            Assert.True(user.RolesMultiList2List.Count == 1);
            Assert.True(role.UsersMultiList2List.Count == 1);
            Assert.Contains(role, user.RolesMultiList2List);
            Assert.Contains(user, role.UsersMultiList2List);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiList2List.Count == 1);
            Assert.True(irole.UsersMultiList2List.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiList2List);
            Assert.Contains(iuser, irole.UsersMultiList2List);
        }

        [Fact]
        public void TestMultiList2ListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2List.Add(role1);
            Assert.True(user1.RolesMultiList2List.Count == 1);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 0);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            user1.RolesMultiList2List.Add(role1);
            Assert.True(user1.RolesMultiList2List.Count == 2);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 0);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            user1.RolesMultiList2List.Add(role2);
            Assert.True(user1.RolesMultiList2List.Count == 3);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 1);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            user1.RolesMultiList2List.Add(role2);
            Assert.True(user1.RolesMultiList2List.Count == 4);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 1);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            role2.UsersMultiList2List.Add(user1);
            Assert.True(user1.RolesMultiList2List.Count == 4);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 1);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            role2.UsersMultiList2List.Add(user1);
            Assert.True(user1.RolesMultiList2List.Count == 4);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 1);
            Assert.True(user3.RolesMultiList2List.Count == 0);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            role2.UsersMultiList2List.Add(user3);
            Assert.True(user1.RolesMultiList2List.Count == 4);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 2);
            Assert.True(user3.RolesMultiList2List.Count == 1);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            Assert.Contains(role2, user3.RolesMultiList2List);
            Assert.Contains(user3, role2.UsersMultiList2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2List.Count == 4);
            Assert.True(irole1.UsersMultiList2List.Count == 1);
            Assert.True(iuser2.RolesMultiList2List.Count == 0);
            Assert.True(irole2.UsersMultiList2List.Count == 2);
            Assert.True(iuser3.RolesMultiList2List.Count == 1);
            Assert.True(irole3.UsersMultiList2List.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiList2List);
            Assert.Contains(iuser1, irole1.UsersMultiList2List);
            Assert.Contains(irole2, iuser1.RolesMultiList2List);
            Assert.Contains(iuser1, irole2.UsersMultiList2List);
            Assert.Contains(irole2, iuser3.RolesMultiList2List);
            Assert.Contains(iuser3, irole2.UsersMultiList2List);
        }


        [Fact]
        public void TestMultiList2ListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2List.Add(role1);
            user1.RolesMultiList2List.Add(role1);
            user1.RolesMultiList2List.Add(role2);
            user1.RolesMultiList2List.Add(role2);
            role2.UsersMultiList2List.Add(user1);
            role2.UsersMultiList2List.Add(user1);
            role2.UsersMultiList2List.Add(user2);
            role2.UsersMultiList2List.Add(user2);
            role2.UsersMultiList2List.Add(user3);
            Assert.True(user1.RolesMultiList2List.Count == 4);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 1);
            Assert.True(role2.UsersMultiList2List.Count == 3);
            Assert.True(user3.RolesMultiList2List.Count == 1);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2List);
            Assert.Contains(user1, role1.UsersMultiList2List);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            Assert.Contains(role2, user2.RolesMultiList2List);
            Assert.Contains(user2, role2.UsersMultiList2List);
            Assert.Contains(role2, user3.RolesMultiList2List);
            Assert.Contains(user3, role2.UsersMultiList2List);
            user1.RolesMultiList2List.Remove(role1);
            Assert.True(user1.RolesMultiList2List.Count == 3);
            Assert.True(role1.UsersMultiList2List.Count == 1);
            Assert.True(user2.RolesMultiList2List.Count == 1);
            Assert.True(role2.UsersMultiList2List.Count == 3);
            Assert.True(user3.RolesMultiList2List.Count == 1);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            Assert.Contains(role2, user2.RolesMultiList2List);
            Assert.Contains(user2, role2.UsersMultiList2List);
            Assert.Contains(role2, user3.RolesMultiList2List);
            Assert.Contains(user3, role2.UsersMultiList2List);
            user1.RolesMultiList2List.Remove(role1);
            Assert.True(user1.RolesMultiList2List.Count == 2);
            Assert.True(role1.UsersMultiList2List.Count == 0);
            Assert.True(user2.RolesMultiList2List.Count == 1);
            Assert.True(role2.UsersMultiList2List.Count == 3);
            Assert.True(user3.RolesMultiList2List.Count == 1);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            role2.UsersMultiList2List.Remove(user2);
            Assert.True(user1.RolesMultiList2List.Count == 2);
            Assert.True(role1.UsersMultiList2List.Count == 0);
            Assert.True(user2.RolesMultiList2List.Count == 0);
            Assert.True(role2.UsersMultiList2List.Count == 2);
            Assert.True(user3.RolesMultiList2List.Count == 1);
            Assert.True(role3.UsersMultiList2List.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2List);
            Assert.Contains(user1, role2.UsersMultiList2List);
            Assert.Contains(role2, user3.RolesMultiList2List);
            Assert.Contains(user3, role2.UsersMultiList2List);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2List.Count == 2);
            Assert.True(irole1.UsersMultiList2List.Count == 0);
            Assert.True(iuser2.RolesMultiList2List.Count == 0);
            Assert.True(irole2.UsersMultiList2List.Count == 2);
            Assert.True(iuser3.RolesMultiList2List.Count == 1);
            Assert.True(irole3.UsersMultiList2List.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiList2List);
            Assert.Contains(iuser1, irole2.UsersMultiList2List);
            Assert.Contains(irole2, iuser3.RolesMultiList2List);
            Assert.Contains(iuser3, irole2.UsersMultiList2List);
        }

        [Fact]
        public void TestMultiList2MultiSet()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiList2MultiSet.Add(role);
            Assert.True(user.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role.UsersMultiList2MultiSet.Count == 1);
            Assert.Contains(role, user.RolesMultiList2MultiSet);
            Assert.Contains(user, role.UsersMultiList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiList2MultiSet.Count == 1);
            Assert.True(irole.UsersMultiList2MultiSet.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiList2MultiSet);
            Assert.Contains(iuser, irole.UsersMultiList2MultiSet);
        }

        [Fact]
        public void TestMultiList2MultiSetMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2MultiSet.Add(role1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 0);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            user1.RolesMultiList2MultiSet.Add(role1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 0);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            user1.RolesMultiList2MultiSet.Add(role2);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 3);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            user1.RolesMultiList2MultiSet.Add(role2);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            role2.UsersMultiList2MultiSet.Add(user1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 2);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            role2.UsersMultiList2MultiSet.Add(user1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 3);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            role2.UsersMultiList2MultiSet.Add(user3);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 4);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user3.RolesMultiList2MultiSet);
            Assert.Contains(user3, role2.UsersMultiList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(irole1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(iuser2.RolesMultiList2MultiSet.Count == 0);
            Assert.True(irole2.UsersMultiList2MultiSet.Count == 4);
            Assert.True(iuser3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(irole3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiList2MultiSet);
            Assert.Contains(iuser1, irole1.UsersMultiList2MultiSet);
            Assert.Contains(irole2, iuser1.RolesMultiList2MultiSet);
            Assert.Contains(iuser1, irole2.UsersMultiList2MultiSet);
            Assert.Contains(irole2, iuser3.RolesMultiList2MultiSet);
            Assert.Contains(iuser3, irole2.UsersMultiList2MultiSet);
        }


        [Fact]
        public void TestMultiList2MultiSetRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2MultiSet.Add(role1);
            user1.RolesMultiList2MultiSet.Add(role1);
            user1.RolesMultiList2MultiSet.Add(role2);
            user1.RolesMultiList2MultiSet.Add(role2);
            role2.UsersMultiList2MultiSet.Add(user1);
            role2.UsersMultiList2MultiSet.Add(user1);
            role2.UsersMultiList2MultiSet.Add(user2);
            role2.UsersMultiList2MultiSet.Add(user2);
            role2.UsersMultiList2MultiSet.Add(user3);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 4);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role1.UsersMultiList2MultiSet);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user2.RolesMultiList2MultiSet);
            Assert.Contains(user2, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user3.RolesMultiList2MultiSet);
            Assert.Contains(user3, role2.UsersMultiList2MultiSet);
            user1.RolesMultiList2MultiSet.Remove(role1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 3);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 1);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user2.RolesMultiList2MultiSet);
            Assert.Contains(user2, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user3.RolesMultiList2MultiSet);
            Assert.Contains(user3, role2.UsersMultiList2MultiSet);
            user1.RolesMultiList2MultiSet.Remove(role1);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 0);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 6);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            role2.UsersMultiList2MultiSet.Remove(user2);
            Assert.True(user1.RolesMultiList2MultiSet.Count == 2);
            Assert.True(role1.UsersMultiList2MultiSet.Count == 0);
            Assert.True(user2.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role2.UsersMultiList2MultiSet.Count == 5);
            Assert.True(user3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(role3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2MultiSet);
            Assert.Contains(user1, role2.UsersMultiList2MultiSet);
            Assert.Contains(role2, user3.RolesMultiList2MultiSet);
            Assert.Contains(user3, role2.UsersMultiList2MultiSet);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2MultiSet.Count == 2);
            Assert.True(irole1.UsersMultiList2MultiSet.Count == 0);
            Assert.True(iuser2.RolesMultiList2MultiSet.Count == 1);
            Assert.True(irole2.UsersMultiList2MultiSet.Count == 5);
            Assert.True(iuser3.RolesMultiList2MultiSet.Count == 1);
            Assert.True(irole3.UsersMultiList2MultiSet.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiList2MultiSet);
            Assert.Contains(iuser1, irole2.UsersMultiList2MultiSet);
            Assert.Contains(irole2, iuser3.RolesMultiList2MultiSet);
            Assert.Contains(iuser3, irole2.UsersMultiList2MultiSet);
        }

        [Fact]
        public void TestMultiList2MultiList()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user = factory.User();
            var role = factory.Role();
            user.RolesMultiList2MultiList.Add(role);
            Assert.True(user.RolesMultiList2MultiList.Count == 1);
            Assert.True(role.UsersMultiList2MultiList.Count == 1);
            Assert.Contains(role, user.RolesMultiList2MultiList);
            Assert.Contains(user, role.UsersMultiList2MultiList);
            var imodel = model.ToImmutable();
            var iuser = user.ToImmutable(imodel);
            var irole = role.ToImmutable(imodel);
            Assert.True(iuser.RolesMultiList2MultiList.Count == 1);
            Assert.True(irole.UsersMultiList2MultiList.Count == 1);
            Assert.Contains(irole, iuser.RolesMultiList2MultiList);
            Assert.Contains(iuser, irole.UsersMultiList2MultiList);
        }

        [Fact]
        public void TestMultiList2MultiListMany()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2MultiList.Add(role1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 1);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 0);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            user1.RolesMultiList2MultiList.Add(role1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 2);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 0);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            user1.RolesMultiList2MultiList.Add(role2);
            Assert.True(user1.RolesMultiList2MultiList.Count == 3);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 1);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            user1.RolesMultiList2MultiList.Add(role2);
            Assert.True(user1.RolesMultiList2MultiList.Count == 4);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 1);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            role2.UsersMultiList2MultiList.Add(user1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 4);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 2);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            role2.UsersMultiList2MultiList.Add(user1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 4);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 3);
            Assert.True(user3.RolesMultiList2MultiList.Count == 0);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            role2.UsersMultiList2MultiList.Add(user3);
            Assert.True(user1.RolesMultiList2MultiList.Count == 4);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 0);
            Assert.True(role2.UsersMultiList2MultiList.Count == 4);
            Assert.True(user3.RolesMultiList2MultiList.Count == 1);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user3.RolesMultiList2MultiList);
            Assert.Contains(user3, role2.UsersMultiList2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2MultiList.Count == 4);
            Assert.True(irole1.UsersMultiList2MultiList.Count == 1);
            Assert.True(iuser2.RolesMultiList2MultiList.Count == 0);
            Assert.True(irole2.UsersMultiList2MultiList.Count == 4);
            Assert.True(iuser3.RolesMultiList2MultiList.Count == 1);
            Assert.True(irole3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(irole1, iuser1.RolesMultiList2MultiList);
            Assert.Contains(iuser1, irole1.UsersMultiList2MultiList);
            Assert.Contains(irole2, iuser1.RolesMultiList2MultiList);
            Assert.Contains(iuser1, irole2.UsersMultiList2MultiList);
            Assert.Contains(irole2, iuser3.RolesMultiList2MultiList);
            Assert.Contains(iuser3, irole2.UsersMultiList2MultiList);
        }


        [Fact]
        public void TestMultiList2MultiListRemove()
        {
            var model = new MutableModel();
            var factory = new PropertiesTestFactory(model);
            var user1 = factory.User();
            var user2 = factory.User();
            var user3 = factory.User();
            var role1 = factory.Role();
            var role2 = factory.Role();
            var role3 = factory.Role();
            user1.RolesMultiList2MultiList.Add(role1);
            user1.RolesMultiList2MultiList.Add(role1);
            user1.RolesMultiList2MultiList.Add(role2);
            user1.RolesMultiList2MultiList.Add(role2);
            role2.UsersMultiList2MultiList.Add(user1);
            role2.UsersMultiList2MultiList.Add(user1);
            role2.UsersMultiList2MultiList.Add(user2);
            role2.UsersMultiList2MultiList.Add(user2);
            role2.UsersMultiList2MultiList.Add(user3);
            Assert.True(user1.RolesMultiList2MultiList.Count == 4);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 1);
            Assert.True(role2.UsersMultiList2MultiList.Count == 6);
            Assert.True(user3.RolesMultiList2MultiList.Count == 1);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role1, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role1.UsersMultiList2MultiList);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user2.RolesMultiList2MultiList);
            Assert.Contains(user2, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user3.RolesMultiList2MultiList);
            Assert.Contains(user3, role2.UsersMultiList2MultiList);
            user1.RolesMultiList2MultiList.Remove(role1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 3);
            Assert.True(role1.UsersMultiList2MultiList.Count == 1);
            Assert.True(user2.RolesMultiList2MultiList.Count == 1);
            Assert.True(role2.UsersMultiList2MultiList.Count == 6);
            Assert.True(user3.RolesMultiList2MultiList.Count == 1);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user2.RolesMultiList2MultiList);
            Assert.Contains(user2, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user3.RolesMultiList2MultiList);
            Assert.Contains(user3, role2.UsersMultiList2MultiList);
            user1.RolesMultiList2MultiList.Remove(role1);
            Assert.True(user1.RolesMultiList2MultiList.Count == 2);
            Assert.True(role1.UsersMultiList2MultiList.Count == 0);
            Assert.True(user2.RolesMultiList2MultiList.Count == 1);
            Assert.True(role2.UsersMultiList2MultiList.Count == 6);
            Assert.True(user3.RolesMultiList2MultiList.Count == 1);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            role2.UsersMultiList2MultiList.Remove(user2);
            Assert.True(user1.RolesMultiList2MultiList.Count == 2);
            Assert.True(role1.UsersMultiList2MultiList.Count == 0);
            Assert.True(user2.RolesMultiList2MultiList.Count == 1);
            Assert.True(role2.UsersMultiList2MultiList.Count == 5);
            Assert.True(user3.RolesMultiList2MultiList.Count == 1);
            Assert.True(role3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(role2, user1.RolesMultiList2MultiList);
            Assert.Contains(user1, role2.UsersMultiList2MultiList);
            Assert.Contains(role2, user3.RolesMultiList2MultiList);
            Assert.Contains(user3, role2.UsersMultiList2MultiList);
            var imodel = model.ToImmutable();
            var iuser1 = user1.ToImmutable(imodel);
            var iuser2 = user2.ToImmutable(imodel);
            var iuser3 = user3.ToImmutable(imodel);
            var irole1 = role1.ToImmutable(imodel);
            var irole2 = role2.ToImmutable(imodel);
            var irole3 = role3.ToImmutable(imodel);
            Assert.True(iuser1.RolesMultiList2MultiList.Count == 2);
            Assert.True(irole1.UsersMultiList2MultiList.Count == 0);
            Assert.True(iuser2.RolesMultiList2MultiList.Count == 1);
            Assert.True(irole2.UsersMultiList2MultiList.Count == 5);
            Assert.True(iuser3.RolesMultiList2MultiList.Count == 1);
            Assert.True(irole3.UsersMultiList2MultiList.Count == 0);
            Assert.Contains(irole2, iuser1.RolesMultiList2MultiList);
            Assert.Contains(iuser1, irole2.UsersMultiList2MultiList);
            Assert.Contains(irole2, iuser3.RolesMultiList2MultiList);
            Assert.Contains(iuser3, irole2.UsersMultiList2MultiList);
        }

    }
}

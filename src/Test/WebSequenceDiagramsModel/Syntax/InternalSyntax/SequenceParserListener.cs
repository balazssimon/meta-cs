//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\WebSequenceDiagramsModel\Syntax\InternalSyntax\SequenceParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WebSequenceDiagramsModel.Syntax.InternalSyntax {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SequenceParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ISequenceParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain([NotNull] SequenceParser.MainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain([NotNull] SequenceParser.MainContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.interaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteraction([NotNull] SequenceParser.InteractionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.interaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteraction([NotNull] SequenceParser.InteractionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] SequenceParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] SequenceParser.LineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] SequenceParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] SequenceParser.DeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.title"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTitle([NotNull] SequenceParser.TitleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.title"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTitle([NotNull] SequenceParser.TitleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.arrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrow([NotNull] SequenceParser.ArrowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.arrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrow([NotNull] SequenceParser.ArrowContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.destroy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDestroy([NotNull] SequenceParser.DestroyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.destroy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDestroy([NotNull] SequenceParser.DestroyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlt([NotNull] SequenceParser.AltContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlt([NotNull] SequenceParser.AltContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.altFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltFragment([NotNull] SequenceParser.AltFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.altFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltFragment([NotNull] SequenceParser.AltFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.elseFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseFragment([NotNull] SequenceParser.ElseFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.elseFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseFragment([NotNull] SequenceParser.ElseFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] SequenceParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] SequenceParser.LoopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.loopFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopFragment([NotNull] SequenceParser.LoopFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.loopFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopFragment([NotNull] SequenceParser.LoopFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt([NotNull] SequenceParser.OptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt([NotNull] SequenceParser.OptContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.optFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptFragment([NotNull] SequenceParser.OptFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.optFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptFragment([NotNull] SequenceParser.OptFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRef([NotNull] SequenceParser.RefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRef([NotNull] SequenceParser.RefContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleRefFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleRefFragment([NotNull] SequenceParser.SimpleRefFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleRefFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleRefFragment([NotNull] SequenceParser.SimpleRefFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.messageRefFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMessageRefFragment([NotNull] SequenceParser.MessageRefFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.messageRefFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMessageRefFragment([NotNull] SequenceParser.MessageRefFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.refInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRefInput([NotNull] SequenceParser.RefInputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.refInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRefInput([NotNull] SequenceParser.RefInputContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.refOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRefOutput([NotNull] SequenceParser.RefOutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.refOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRefOutput([NotNull] SequenceParser.RefOutputContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.fragmentBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFragmentBody([NotNull] SequenceParser.FragmentBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.fragmentBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFragmentBody([NotNull] SequenceParser.FragmentBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd([NotNull] SequenceParser.EndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd([NotNull] SequenceParser.EndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.note"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNote([NotNull] SequenceParser.NoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.note"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNote([NotNull] SequenceParser.NoteContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.singleLineNote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleLineNote([NotNull] SequenceParser.SingleLineNoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.singleLineNote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleLineNote([NotNull] SequenceParser.SingleLineNoteContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.multiLineNote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiLineNote([NotNull] SequenceParser.MultiLineNoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.multiLineNote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiLineNote([NotNull] SequenceParser.MultiLineNoteContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleBody([NotNull] SequenceParser.SimpleBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleBody([NotNull] SequenceParser.SimpleBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleLine([NotNull] SequenceParser.SimpleLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleLine([NotNull] SequenceParser.SimpleLineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.arrowType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrowType([NotNull] SequenceParser.ArrowTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.arrowType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrowType([NotNull] SequenceParser.ArrowTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.lifeLineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLifeLineName([NotNull] SequenceParser.LifeLineNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.lifeLineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLifeLineName([NotNull] SequenceParser.LifeLineNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] SequenceParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] SequenceParser.NameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] SequenceParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] SequenceParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] SequenceParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] SequenceParser.TextContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.identifierPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierPart([NotNull] SequenceParser.IdentifierPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.identifierPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierPart([NotNull] SequenceParser.IdentifierPartContext context);
}
} // namespace WebSequenceDiagramsModel.Syntax.InternalSyntax

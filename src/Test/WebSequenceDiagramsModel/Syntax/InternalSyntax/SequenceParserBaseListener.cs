//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Balazs\source\repos\meta-cs\src\Test\WebSequenceDiagramsModel\Syntax\InternalSyntax\SequenceParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WebSequenceDiagramsModel.Syntax.InternalSyntax {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISequenceParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SequenceParserBaseListener : ISequenceParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] SequenceParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] SequenceParser.MainContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.interaction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteraction([NotNull] SequenceParser.InteractionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.interaction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteraction([NotNull] SequenceParser.InteractionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] SequenceParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] SequenceParser.LineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] SequenceParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] SequenceParser.DeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTitle([NotNull] SequenceParser.TitleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTitle([NotNull] SequenceParser.TitleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.arrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrow([NotNull] SequenceParser.ArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.arrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrow([NotNull] SequenceParser.ArrowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.destroy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestroy([NotNull] SequenceParser.DestroyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.destroy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestroy([NotNull] SequenceParser.DestroyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.alt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlt([NotNull] SequenceParser.AltContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.alt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlt([NotNull] SequenceParser.AltContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.altFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAltFragment([NotNull] SequenceParser.AltFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.altFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAltFragment([NotNull] SequenceParser.AltFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.elseFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseFragment([NotNull] SequenceParser.ElseFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.elseFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseFragment([NotNull] SequenceParser.ElseFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] SequenceParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] SequenceParser.LoopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.loopFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopFragment([NotNull] SequenceParser.LoopFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.loopFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopFragment([NotNull] SequenceParser.LoopFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.opt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpt([NotNull] SequenceParser.OptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.opt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpt([NotNull] SequenceParser.OptContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.optFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptFragment([NotNull] SequenceParser.OptFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.optFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptFragment([NotNull] SequenceParser.OptFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRef([NotNull] SequenceParser.RefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRef([NotNull] SequenceParser.RefContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleRefFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleRefFragment([NotNull] SequenceParser.SimpleRefFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleRefFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleRefFragment([NotNull] SequenceParser.SimpleRefFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.messageRefFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMessageRefFragment([NotNull] SequenceParser.MessageRefFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.messageRefFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMessageRefFragment([NotNull] SequenceParser.MessageRefFragmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.refInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRefInput([NotNull] SequenceParser.RefInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.refInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRefInput([NotNull] SequenceParser.RefInputContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.refOutput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRefOutput([NotNull] SequenceParser.RefOutputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.refOutput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRefOutput([NotNull] SequenceParser.RefOutputContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.fragmentBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFragmentBody([NotNull] SequenceParser.FragmentBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.fragmentBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFragmentBody([NotNull] SequenceParser.FragmentBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd([NotNull] SequenceParser.EndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd([NotNull] SequenceParser.EndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.note"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote([NotNull] SequenceParser.NoteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.note"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote([NotNull] SequenceParser.NoteContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.singleLineNote"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleLineNote([NotNull] SequenceParser.SingleLineNoteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.singleLineNote"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleLineNote([NotNull] SequenceParser.SingleLineNoteContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.multiLineNote"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiLineNote([NotNull] SequenceParser.MultiLineNoteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.multiLineNote"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiLineNote([NotNull] SequenceParser.MultiLineNoteContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleBody([NotNull] SequenceParser.SimpleBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleBody([NotNull] SequenceParser.SimpleBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.simpleLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleLine([NotNull] SequenceParser.SimpleLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.simpleLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleLine([NotNull] SequenceParser.SimpleLineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.arrowType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowType([NotNull] SequenceParser.ArrowTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.arrowType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowType([NotNull] SequenceParser.ArrowTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.lifeLineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLifeLineName([NotNull] SequenceParser.LifeLineNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.lifeLineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLifeLineName([NotNull] SequenceParser.LifeLineNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] SequenceParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] SequenceParser.NameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] SequenceParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] SequenceParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] SequenceParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] SequenceParser.TextContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SequenceParser.identifierPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierPart([NotNull] SequenceParser.IdentifierPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SequenceParser.identifierPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierPart([NotNull] SequenceParser.IdentifierPartContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace WebSequenceDiagramsModel.Syntax.InternalSyntax

namespace MetaDslx.CodeAnalysis.Symbols
{
	typedef Dictionary = "Dictionary";
	typedef LanguageSymbolKind = "MetaDslx.CodeAnalysis.Symbols.LanguageSymbolKind";
	typedef ImmutableArray = "System.Collections.Immutable.ImmutableArray";
	typedef Location = "MetaDslx.CodeAnalysis.Location";
	typedef AttributeData = "AttributeData";

	compiler Main;

	phase Attributes;
	phase Module;
	locked phase ValidatingReferencedAssemblies;
	locked phase ValidatingAddedModules;
	locked phase AttributeChecks;
	locked phase BaseTypes;
	phase Members;
	phase TypeMembers;
	locked phase ValidatingImports;
	phase MembersCompleted joins All;
	phase AliasTarget;

	abstract symbol Symbol
	{
		string Name;
		string MetadataName;
		Symbol ContainingSymbol;
		LanguageSymbolKind Kind;
		Location[] Locations;
	}

	abstract symbol DeclaredSymbol : Symbol
	{
		Dictionary<string, DeclaredSymbol[]> MembersByName phase Members;
		DeclaredSymbol[] Members phase MembersCompleted;
		NamedTypeSymbol[] TypeMembers phase MembersCompleted;
	}

	abstract symbol NamespaceOrTypeSymbol : DeclaredSymbol
	{
	}

	symbol NamespaceSymbol : NamespaceOrTypeSymbol
	{
		AttributeData[] Attributes phase Attributes;
	}

	abstract symbol TypeSymbol : NamespaceOrTypeSymbol
	{
	}

	symbol NamedTypeSymbol : NamespaceOrTypeSymbol
	{
	}
}
